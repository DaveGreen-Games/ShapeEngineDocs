### YamlMime:ManagedReference
items:
- uid: ShapeEngine.Core.Structs.CollisionPoint
  commentId: T:ShapeEngine.Core.Structs.CollisionPoint
  id: CollisionPoint
  parent: ShapeEngine.Core.Structs
  children:
  - ShapeEngine.Core.Structs.CollisionPoint.#ctor
  - ShapeEngine.Core.Structs.CollisionPoint.#ctor(System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.CollisionPoint.Combine(ShapeEngine.Core.Structs.CollisionPoint)
  - ShapeEngine.Core.Structs.CollisionPoint.Combine(ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint)
  - ShapeEngine.Core.Structs.CollisionPoint.Combine(ShapeEngine.Core.Structs.CollisionPoint[])
  - ShapeEngine.Core.Structs.CollisionPoint.Equals(ShapeEngine.Core.Structs.CollisionPoint)
  - ShapeEngine.Core.Structs.CollisionPoint.FlipNormal
  - ShapeEngine.Core.Structs.CollisionPoint.FlipNormal(System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.CollisionPoint.GetHashCode
  - ShapeEngine.Core.Structs.CollisionPoint.GetNormalLine
  - ShapeEngine.Core.Structs.CollisionPoint.GetNormalRay
  - ShapeEngine.Core.Structs.CollisionPoint.GetNormalSegment(System.Single)
  - ShapeEngine.Core.Structs.CollisionPoint.IsCloser(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2,System.Single,System.Single@)
  - ShapeEngine.Core.Structs.CollisionPoint.IsFurther(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2,System.Single,System.Single@)
  - ShapeEngine.Core.Structs.CollisionPoint.IsNormalFacing(System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.CollisionPoint.IsNormalFacingPoint(System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.CollisionPoint.IsPointingAway(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2,System.Single,System.Single@)
  - ShapeEngine.Core.Structs.CollisionPoint.IsPointingTowards(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2,System.Single,System.Single@)
  - ShapeEngine.Core.Structs.CollisionPoint.Normal
  - ShapeEngine.Core.Structs.CollisionPoint.Point
  - ShapeEngine.Core.Structs.CollisionPoint.RotateNormal(System.Single)
  - ShapeEngine.Core.Structs.CollisionPoint.RotateNormalDeg(System.Single)
  - ShapeEngine.Core.Structs.CollisionPoint.SetNormal(System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.CollisionPoint.SetPoint(System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.CollisionPoint.Valid
  - ShapeEngine.Core.Structs.CollisionPoint.op_Addition(ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint)
  - ShapeEngine.Core.Structs.CollisionPoint.op_Addition(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.CollisionPoint.op_Division(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.CollisionPoint.op_Division(ShapeEngine.Core.Structs.CollisionPoint,System.Single)
  - ShapeEngine.Core.Structs.CollisionPoint.op_Multiply(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.CollisionPoint.op_Multiply(ShapeEngine.Core.Structs.CollisionPoint,System.Single)
  - ShapeEngine.Core.Structs.CollisionPoint.op_Subtraction(ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint)
  - ShapeEngine.Core.Structs.CollisionPoint.op_Subtraction(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2)
  langs:
  - csharp
  - vb
  name: CollisionPoint
  nameWithType: CollisionPoint
  fullName: ShapeEngine.Core.Structs.CollisionPoint
  type: Struct
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: CollisionPoint
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 7
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: 'public readonly struct CollisionPoint : IEquatable<CollisionPoint>'
    content.vb: Public Structure CollisionPoint Implements IEquatable(Of CollisionPoint)
  implements:
  - System.IEquatable{ShapeEngine.Core.Structs.CollisionPoint}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: ShapeEngine.Core.Structs.CollisionPoint.Valid
  commentId: P:ShapeEngine.Core.Structs.CollisionPoint.Valid
  id: Valid
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: Valid
  nameWithType: CollisionPoint.Valid
  fullName: ShapeEngine.Core.Structs.CollisionPoint.Valid
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Valid
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 11
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool Valid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Valid As Boolean
  overload: ShapeEngine.Core.Structs.CollisionPoint.Valid*
- uid: ShapeEngine.Core.Structs.CollisionPoint.Point
  commentId: F:ShapeEngine.Core.Structs.CollisionPoint.Point
  id: Point
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: Point
  nameWithType: CollisionPoint.Point
  fullName: ShapeEngine.Core.Structs.CollisionPoint.Point
  type: Field
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Point
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 12
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public readonly Vector2 Point
    return:
      type: System.Numerics.Vector2
    content.vb: Public ReadOnly Point As Vector2
- uid: ShapeEngine.Core.Structs.CollisionPoint.Normal
  commentId: F:ShapeEngine.Core.Structs.CollisionPoint.Normal
  id: Normal
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: Normal
  nameWithType: CollisionPoint.Normal
  fullName: ShapeEngine.Core.Structs.CollisionPoint.Normal
  type: Field
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Normal
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 13
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public readonly Vector2 Normal
    return:
      type: System.Numerics.Vector2
    content.vb: Public ReadOnly Normal As Vector2
- uid: ShapeEngine.Core.Structs.CollisionPoint.#ctor
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.#ctor
  id: '#ctor'
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: CollisionPoint()
  nameWithType: CollisionPoint.CollisionPoint()
  fullName: ShapeEngine.Core.Structs.CollisionPoint.CollisionPoint()
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 18
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public CollisionPoint()
    content.vb: Public Sub New()
  overload: ShapeEngine.Core.Structs.CollisionPoint.#ctor*
  nameWithType.vb: CollisionPoint.New()
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.New()
  name.vb: New()
- uid: ShapeEngine.Core.Structs.CollisionPoint.#ctor(System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.#ctor(System.Numerics.Vector2,System.Numerics.Vector2)
  id: '#ctor(System.Numerics.Vector2,System.Numerics.Vector2)'
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: CollisionPoint(Vector2, Vector2)
  nameWithType: CollisionPoint.CollisionPoint(Vector2, Vector2)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.CollisionPoint(System.Numerics.Vector2, System.Numerics.Vector2)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 24
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public CollisionPoint(Vector2 p, Vector2 n)
    parameters:
    - id: p
      type: System.Numerics.Vector2
    - id: n
      type: System.Numerics.Vector2
    content.vb: Public Sub New(p As Vector2, n As Vector2)
  overload: ShapeEngine.Core.Structs.CollisionPoint.#ctor*
  nameWithType.vb: CollisionPoint.New(Vector2, Vector2)
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.New(System.Numerics.Vector2, System.Numerics.Vector2)
  name.vb: New(Vector2, Vector2)
- uid: ShapeEngine.Core.Structs.CollisionPoint.GetNormalSegment(System.Single)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.GetNormalSegment(System.Single)
  id: GetNormalSegment(System.Single)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: GetNormalSegment(float)
  nameWithType: CollisionPoint.GetNormalSegment(float)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.GetNormalSegment(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetNormalSegment
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 33
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public Segment GetNormalSegment(float length)
    parameters:
    - id: length
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Segment
    content.vb: Public Function GetNormalSegment(length As Single) As Segment
  overload: ShapeEngine.Core.Structs.CollisionPoint.GetNormalSegment*
  nameWithType.vb: CollisionPoint.GetNormalSegment(Single)
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.GetNormalSegment(Single)
  name.vb: GetNormalSegment(Single)
- uid: ShapeEngine.Core.Structs.CollisionPoint.GetNormalRay
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.GetNormalRay
  id: GetNormalRay
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: GetNormalRay()
  nameWithType: CollisionPoint.GetNormalRay()
  fullName: ShapeEngine.Core.Structs.CollisionPoint.GetNormalRay()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetNormalRay
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 34
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public Ray GetNormalRay()
    return:
      type: ShapeEngine.Core.Shapes.Ray
    content.vb: Public Function GetNormalRay() As Ray
  overload: ShapeEngine.Core.Structs.CollisionPoint.GetNormalRay*
- uid: ShapeEngine.Core.Structs.CollisionPoint.GetNormalLine
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.GetNormalLine
  id: GetNormalLine
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: GetNormalLine()
  nameWithType: CollisionPoint.GetNormalLine()
  fullName: ShapeEngine.Core.Structs.CollisionPoint.GetNormalLine()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetNormalLine
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 35
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public Line GetNormalLine()
    return:
      type: ShapeEngine.Core.Shapes.Line
    content.vb: Public Function GetNormalLine() As Line
  overload: ShapeEngine.Core.Structs.CollisionPoint.GetNormalLine*
- uid: ShapeEngine.Core.Structs.CollisionPoint.IsCloser(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2,System.Single,System.Single@)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.IsCloser(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2,System.Single,System.Single@)
  id: IsCloser(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2,System.Single,System.Single@)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: IsCloser(CollisionPoint, Vector2, float, out float)
  nameWithType: CollisionPoint.IsCloser(CollisionPoint, Vector2, float, out float)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.IsCloser(ShapeEngine.Core.Structs.CollisionPoint, System.Numerics.Vector2, float, out float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsCloser
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 37
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static bool IsCloser(CollisionPoint p, Vector2 referencePoint, float curMinDisSquared, out float newMinDisSquared)
    parameters:
    - id: p
      type: ShapeEngine.Core.Structs.CollisionPoint
    - id: referencePoint
      type: System.Numerics.Vector2
    - id: curMinDisSquared
      type: System.Single
    - id: newMinDisSquared
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsCloser(p As CollisionPoint, referencePoint As Vector2, curMinDisSquared As Single, newMinDisSquared As Single) As Boolean
  overload: ShapeEngine.Core.Structs.CollisionPoint.IsCloser*
  nameWithType.vb: CollisionPoint.IsCloser(CollisionPoint, Vector2, Single, Single)
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.IsCloser(ShapeEngine.Core.Structs.CollisionPoint, System.Numerics.Vector2, Single, Single)
  name.vb: IsCloser(CollisionPoint, Vector2, Single, Single)
- uid: ShapeEngine.Core.Structs.CollisionPoint.IsFurther(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2,System.Single,System.Single@)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.IsFurther(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2,System.Single,System.Single@)
  id: IsFurther(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2,System.Single,System.Single@)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: IsFurther(CollisionPoint, Vector2, float, out float)
  nameWithType: CollisionPoint.IsFurther(CollisionPoint, Vector2, float, out float)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.IsFurther(ShapeEngine.Core.Structs.CollisionPoint, System.Numerics.Vector2, float, out float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsFurther
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 49
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static bool IsFurther(CollisionPoint p, Vector2 referencePoint, float curMaxDisSquared, out float newMaxDisSquared)
    parameters:
    - id: p
      type: ShapeEngine.Core.Structs.CollisionPoint
    - id: referencePoint
      type: System.Numerics.Vector2
    - id: curMaxDisSquared
      type: System.Single
    - id: newMaxDisSquared
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsFurther(p As CollisionPoint, referencePoint As Vector2, curMaxDisSquared As Single, newMaxDisSquared As Single) As Boolean
  overload: ShapeEngine.Core.Structs.CollisionPoint.IsFurther*
  nameWithType.vb: CollisionPoint.IsFurther(CollisionPoint, Vector2, Single, Single)
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.IsFurther(ShapeEngine.Core.Structs.CollisionPoint, System.Numerics.Vector2, Single, Single)
  name.vb: IsFurther(CollisionPoint, Vector2, Single, Single)
- uid: ShapeEngine.Core.Structs.CollisionPoint.IsPointingTowards(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2,System.Single,System.Single@)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.IsPointingTowards(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2,System.Single,System.Single@)
  id: IsPointingTowards(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2,System.Single,System.Single@)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: IsPointingTowards(CollisionPoint, Vector2, float, out float)
  nameWithType: CollisionPoint.IsPointingTowards(CollisionPoint, Vector2, float, out float)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.IsPointingTowards(ShapeEngine.Core.Structs.CollisionPoint, System.Numerics.Vector2, float, out float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsPointingTowards
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 70
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Returns true if the reference direction is pointing in the same direction as the normal of the collision point. Dot values greater than 0 mean pointing towards.
  example: []
  syntax:
    content: public static bool IsPointingTowards(CollisionPoint p, Vector2 referenceDir, float curDot, out float newDot)
    parameters:
    - id: p
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: The collision point to check.
    - id: referenceDir
      type: System.Numerics.Vector2
      description: The reference direction to check against.
    - id: curDot
      type: System.Single
      description: The cur maximum dot value from the previous collision points. If 0 returns true automatically with the new dot.
    - id: newDot
      type: System.Single
      description: The new maximum dot value. If the normal of p is pointing more in the same direction of the reference direction than cur dot suggests.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsPointingTowards(p As CollisionPoint, referenceDir As Vector2, curDot As Single, newDot As Single) As Boolean
  overload: ShapeEngine.Core.Structs.CollisionPoint.IsPointingTowards*
  nameWithType.vb: CollisionPoint.IsPointingTowards(CollisionPoint, Vector2, Single, Single)
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.IsPointingTowards(ShapeEngine.Core.Structs.CollisionPoint, System.Numerics.Vector2, Single, Single)
  name.vb: IsPointingTowards(CollisionPoint, Vector2, Single, Single)
- uid: ShapeEngine.Core.Structs.CollisionPoint.IsPointingAway(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2,System.Single,System.Single@)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.IsPointingAway(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2,System.Single,System.Single@)
  id: IsPointingAway(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2,System.Single,System.Single@)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: IsPointingAway(CollisionPoint, Vector2, float, out float)
  nameWithType: CollisionPoint.IsPointingAway(CollisionPoint, Vector2, float, out float)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.IsPointingAway(ShapeEngine.Core.Structs.CollisionPoint, System.Numerics.Vector2, float, out float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsPointingAway
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 90
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Returns true if the reference direction is pointing in the opposite  direction as the normal of the collision point. Dot values smaller than 0 mean pointing away.
  example: []
  syntax:
    content: public static bool IsPointingAway(CollisionPoint p, Vector2 referenceDir, float curDot, out float newDot)
    parameters:
    - id: p
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: The collision point to check.
    - id: referenceDir
      type: System.Numerics.Vector2
      description: The reference direction to check against.
    - id: curDot
      type: System.Single
      description: The cur minimum dot value from the previous collision points. If 0 return true automatically with the new dot.
    - id: newDot
      type: System.Single
      description: The new minimum dot value. If the normal from p is pointing more in the opposite direction of the reference direction than cur dot suggests.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsPointingAway(p As CollisionPoint, referenceDir As Vector2, curDot As Single, newDot As Single) As Boolean
  overload: ShapeEngine.Core.Structs.CollisionPoint.IsPointingAway*
  nameWithType.vb: CollisionPoint.IsPointingAway(CollisionPoint, Vector2, Single, Single)
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.IsPointingAway(ShapeEngine.Core.Structs.CollisionPoint, System.Numerics.Vector2, Single, Single)
  name.vb: IsPointingAway(CollisionPoint, Vector2, Single, Single)
- uid: ShapeEngine.Core.Structs.CollisionPoint.Combine(ShapeEngine.Core.Structs.CollisionPoint)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.Combine(ShapeEngine.Core.Structs.CollisionPoint)
  id: Combine(ShapeEngine.Core.Structs.CollisionPoint)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: Combine(CollisionPoint)
  nameWithType: CollisionPoint.Combine(CollisionPoint)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.Combine(ShapeEngine.Core.Structs.CollisionPoint)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Combine
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 102
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public CollisionPoint Combine(CollisionPoint other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Structs.CollisionPoint
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Function Combine(other As CollisionPoint) As CollisionPoint
  overload: ShapeEngine.Core.Structs.CollisionPoint.Combine*
- uid: ShapeEngine.Core.Structs.CollisionPoint.Combine(ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.Combine(ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint)
  id: Combine(ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: Combine(CollisionPoint, CollisionPoint)
  nameWithType: CollisionPoint.Combine(CollisionPoint, CollisionPoint)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.Combine(ShapeEngine.Core.Structs.CollisionPoint, ShapeEngine.Core.Structs.CollisionPoint)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Combine
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 104
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static CollisionPoint Combine(CollisionPoint a, CollisionPoint b)
    parameters:
    - id: a
      type: ShapeEngine.Core.Structs.CollisionPoint
    - id: b
      type: ShapeEngine.Core.Structs.CollisionPoint
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Shared Function Combine(a As CollisionPoint, b As CollisionPoint) As CollisionPoint
  overload: ShapeEngine.Core.Structs.CollisionPoint.Combine*
- uid: ShapeEngine.Core.Structs.CollisionPoint.Combine(ShapeEngine.Core.Structs.CollisionPoint[])
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.Combine(ShapeEngine.Core.Structs.CollisionPoint[])
  id: Combine(ShapeEngine.Core.Structs.CollisionPoint[])
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: Combine(params CollisionPoint[])
  nameWithType: CollisionPoint.Combine(params CollisionPoint[])
  fullName: ShapeEngine.Core.Structs.CollisionPoint.Combine(params ShapeEngine.Core.Structs.CollisionPoint[])
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Combine
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 106
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static CollisionPoint Combine(params CollisionPoint[] points)
    parameters:
    - id: points
      type: ShapeEngine.Core.Structs.CollisionPoint[]
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Shared Function Combine(ParamArray points As CollisionPoint()) As CollisionPoint
  overload: ShapeEngine.Core.Structs.CollisionPoint.Combine*
  nameWithType.vb: CollisionPoint.Combine(ParamArray CollisionPoint())
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.Combine(ParamArray ShapeEngine.Core.Structs.CollisionPoint())
  name.vb: Combine(ParamArray CollisionPoint())
- uid: ShapeEngine.Core.Structs.CollisionPoint.Equals(ShapeEngine.Core.Structs.CollisionPoint)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.Equals(ShapeEngine.Core.Structs.CollisionPoint)
  id: Equals(ShapeEngine.Core.Structs.CollisionPoint)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: Equals(CollisionPoint)
  nameWithType: CollisionPoint.Equals(CollisionPoint)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.Equals(ShapeEngine.Core.Structs.CollisionPoint)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Equals
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 119
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(CollisionPoint other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As CollisionPoint) As Boolean
  overload: ShapeEngine.Core.Structs.CollisionPoint.Equals*
  implements:
  - System.IEquatable{ShapeEngine.Core.Structs.CollisionPoint}.Equals(ShapeEngine.Core.Structs.CollisionPoint)
- uid: ShapeEngine.Core.Structs.CollisionPoint.GetHashCode
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.GetHashCode
  id: GetHashCode
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: CollisionPoint.GetHashCode()
  fullName: ShapeEngine.Core.Structs.CollisionPoint.GetHashCode()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetHashCode
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 123
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: ShapeEngine.Core.Structs.CollisionPoint.GetHashCode*
- uid: ShapeEngine.Core.Structs.CollisionPoint.FlipNormal
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.FlipNormal
  id: FlipNormal
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: FlipNormal()
  nameWithType: CollisionPoint.FlipNormal()
  fullName: ShapeEngine.Core.Structs.CollisionPoint.FlipNormal()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: FlipNormal
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 128
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public CollisionPoint FlipNormal()
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Function FlipNormal() As CollisionPoint
  overload: ShapeEngine.Core.Structs.CollisionPoint.FlipNormal*
- uid: ShapeEngine.Core.Structs.CollisionPoint.FlipNormal(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.FlipNormal(System.Numerics.Vector2)
  id: FlipNormal(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: FlipNormal(Vector2)
  nameWithType: CollisionPoint.FlipNormal(Vector2)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.FlipNormal(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: FlipNormal
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 132
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public CollisionPoint FlipNormal(Vector2 referencePoint)
    parameters:
    - id: referencePoint
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Function FlipNormal(referencePoint As Vector2) As CollisionPoint
  overload: ShapeEngine.Core.Structs.CollisionPoint.FlipNormal*
- uid: ShapeEngine.Core.Structs.CollisionPoint.IsNormalFacing(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.IsNormalFacing(System.Numerics.Vector2)
  id: IsNormalFacing(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: IsNormalFacing(Vector2)
  nameWithType: CollisionPoint.IsNormalFacing(Vector2)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.IsNormalFacing(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsNormalFacing
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 140
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool IsNormalFacing(Vector2 referenceDir)
    parameters:
    - id: referenceDir
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function IsNormalFacing(referenceDir As Vector2) As Boolean
  overload: ShapeEngine.Core.Structs.CollisionPoint.IsNormalFacing*
- uid: ShapeEngine.Core.Structs.CollisionPoint.IsNormalFacingPoint(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.IsNormalFacingPoint(System.Numerics.Vector2)
  id: IsNormalFacingPoint(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: IsNormalFacingPoint(Vector2)
  nameWithType: CollisionPoint.IsNormalFacingPoint(Vector2)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.IsNormalFacingPoint(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsNormalFacingPoint
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 141
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool IsNormalFacingPoint(Vector2 referencePoint)
    parameters:
    - id: referencePoint
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function IsNormalFacingPoint(referencePoint As Vector2) As Boolean
  overload: ShapeEngine.Core.Structs.CollisionPoint.IsNormalFacingPoint*
- uid: ShapeEngine.Core.Structs.CollisionPoint.RotateNormal(System.Single)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.RotateNormal(System.Single)
  id: RotateNormal(System.Single)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: RotateNormal(float)
  nameWithType: CollisionPoint.RotateNormal(float)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.RotateNormal(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: RotateNormal
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 147
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public CollisionPoint RotateNormal(float angleRad)
    parameters:
    - id: angleRad
      type: System.Single
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Function RotateNormal(angleRad As Single) As CollisionPoint
  overload: ShapeEngine.Core.Structs.CollisionPoint.RotateNormal*
  nameWithType.vb: CollisionPoint.RotateNormal(Single)
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.RotateNormal(Single)
  name.vb: RotateNormal(Single)
- uid: ShapeEngine.Core.Structs.CollisionPoint.RotateNormalDeg(System.Single)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.RotateNormalDeg(System.Single)
  id: RotateNormalDeg(System.Single)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: RotateNormalDeg(float)
  nameWithType: CollisionPoint.RotateNormalDeg(float)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.RotateNormalDeg(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: RotateNormalDeg
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 149
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public CollisionPoint RotateNormalDeg(float angleDeg)
    parameters:
    - id: angleDeg
      type: System.Single
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Function RotateNormalDeg(angleDeg As Single) As CollisionPoint
  overload: ShapeEngine.Core.Structs.CollisionPoint.RotateNormalDeg*
  nameWithType.vb: CollisionPoint.RotateNormalDeg(Single)
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.RotateNormalDeg(Single)
  name.vb: RotateNormalDeg(Single)
- uid: ShapeEngine.Core.Structs.CollisionPoint.SetPoint(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.SetPoint(System.Numerics.Vector2)
  id: SetPoint(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: SetPoint(Vector2)
  nameWithType: CollisionPoint.SetPoint(Vector2)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.SetPoint(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: SetPoint
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 151
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public CollisionPoint SetPoint(Vector2 newPoint)
    parameters:
    - id: newPoint
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Function SetPoint(newPoint As Vector2) As CollisionPoint
  overload: ShapeEngine.Core.Structs.CollisionPoint.SetPoint*
- uid: ShapeEngine.Core.Structs.CollisionPoint.SetNormal(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.SetNormal(System.Numerics.Vector2)
  id: SetNormal(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: SetNormal(Vector2)
  nameWithType: CollisionPoint.SetNormal(Vector2)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.SetNormal(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: SetNormal
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 153
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public CollisionPoint SetNormal(Vector2 newNormal)
    parameters:
    - id: newNormal
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Function SetNormal(newNormal As Vector2) As CollisionPoint
  overload: ShapeEngine.Core.Structs.CollisionPoint.SetNormal*
- uid: ShapeEngine.Core.Structs.CollisionPoint.op_Addition(ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.op_Addition(ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint)
  id: op_Addition(ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: operator +(CollisionPoint, CollisionPoint)
  nameWithType: CollisionPoint.operator +(CollisionPoint, CollisionPoint)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.operator +(ShapeEngine.Core.Structs.CollisionPoint, ShapeEngine.Core.Structs.CollisionPoint)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Addition
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 165
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Add point a to point b, and add normal a to normal b and normailze it.
  example: []
  syntax:
    content: public static CollisionPoint operator +(CollisionPoint a, CollisionPoint b)
    parameters:
    - id: a
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: ''
    - id: b
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: ''
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: ''
    content.vb: Public Shared Operator +(a As CollisionPoint, b As CollisionPoint) As CollisionPoint
  overload: ShapeEngine.Core.Structs.CollisionPoint.op_Addition*
  nameWithType.vb: CollisionPoint.+(CollisionPoint, CollisionPoint)
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.+(ShapeEngine.Core.Structs.CollisionPoint, ShapeEngine.Core.Structs.CollisionPoint)
  name.vb: +(CollisionPoint, CollisionPoint)
- uid: ShapeEngine.Core.Structs.CollisionPoint.op_Subtraction(ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.op_Subtraction(ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint)
  id: op_Subtraction(ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: operator -(CollisionPoint, CollisionPoint)
  nameWithType: CollisionPoint.operator -(CollisionPoint, CollisionPoint)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.operator -(ShapeEngine.Core.Structs.CollisionPoint, ShapeEngine.Core.Structs.CollisionPoint)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Subtraction
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 176
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Subtract point b from point a, and subtract normal b from normal a and normailze it.
  example: []
  syntax:
    content: public static CollisionPoint operator -(CollisionPoint a, CollisionPoint b)
    parameters:
    - id: a
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: ''
    - id: b
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: ''
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: ''
    content.vb: Public Shared Operator -(a As CollisionPoint, b As CollisionPoint) As CollisionPoint
  overload: ShapeEngine.Core.Structs.CollisionPoint.op_Subtraction*
  nameWithType.vb: CollisionPoint.-(CollisionPoint, CollisionPoint)
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.-(ShapeEngine.Core.Structs.CollisionPoint, ShapeEngine.Core.Structs.CollisionPoint)
  name.vb: -(CollisionPoint, CollisionPoint)
- uid: ShapeEngine.Core.Structs.CollisionPoint.op_Multiply(ShapeEngine.Core.Structs.CollisionPoint,System.Single)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.op_Multiply(ShapeEngine.Core.Structs.CollisionPoint,System.Single)
  id: op_Multiply(ShapeEngine.Core.Structs.CollisionPoint,System.Single)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: operator *(CollisionPoint, float)
  nameWithType: CollisionPoint.operator *(CollisionPoint, float)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.operator *(ShapeEngine.Core.Structs.CollisionPoint, float)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Multiply
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 187
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Multiply point a by scalar, and keep normal unchanged.
  example: []
  syntax:
    content: public static CollisionPoint operator *(CollisionPoint a, float scalar)
    parameters:
    - id: a
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: ''
    - id: scalar
      type: System.Single
      description: ''
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: ''
    content.vb: Public Shared Operator *(a As CollisionPoint, scalar As Single) As CollisionPoint
  overload: ShapeEngine.Core.Structs.CollisionPoint.op_Multiply*
  nameWithType.vb: CollisionPoint.*(CollisionPoint, Single)
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.*(ShapeEngine.Core.Structs.CollisionPoint, Single)
  name.vb: '*(CollisionPoint, Single)'
- uid: ShapeEngine.Core.Structs.CollisionPoint.op_Division(ShapeEngine.Core.Structs.CollisionPoint,System.Single)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.op_Division(ShapeEngine.Core.Structs.CollisionPoint,System.Single)
  id: op_Division(ShapeEngine.Core.Structs.CollisionPoint,System.Single)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: operator /(CollisionPoint, float)
  nameWithType: CollisionPoint.operator /(CollisionPoint, float)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.operator /(ShapeEngine.Core.Structs.CollisionPoint, float)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Division
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 198
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Divide point a by scalar, and keep normal unchanged.
  example: []
  syntax:
    content: public static CollisionPoint operator /(CollisionPoint a, float scalar)
    parameters:
    - id: a
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: ''
    - id: scalar
      type: System.Single
      description: ''
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: ''
    content.vb: Public Shared Operator /(a As CollisionPoint, scalar As Single) As CollisionPoint
  overload: ShapeEngine.Core.Structs.CollisionPoint.op_Division*
  nameWithType.vb: CollisionPoint./(CollisionPoint, Single)
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint./(ShapeEngine.Core.Structs.CollisionPoint, Single)
  name.vb: /(CollisionPoint, Single)
- uid: ShapeEngine.Core.Structs.CollisionPoint.op_Addition(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.op_Addition(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2)
  id: op_Addition(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: operator +(CollisionPoint, Vector2)
  nameWithType: CollisionPoint.operator +(CollisionPoint, Vector2)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.operator +(ShapeEngine.Core.Structs.CollisionPoint, System.Numerics.Vector2)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Addition
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 209
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Add vector b to point a, and keep normal unchanged.
  example: []
  syntax:
    content: public static CollisionPoint operator +(CollisionPoint a, Vector2 b)
    parameters:
    - id: a
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: ''
    - id: b
      type: System.Numerics.Vector2
      description: ''
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: ''
    content.vb: Public Shared Operator +(a As CollisionPoint, b As Vector2) As CollisionPoint
  overload: ShapeEngine.Core.Structs.CollisionPoint.op_Addition*
  nameWithType.vb: CollisionPoint.+(CollisionPoint, Vector2)
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.+(ShapeEngine.Core.Structs.CollisionPoint, System.Numerics.Vector2)
  name.vb: +(CollisionPoint, Vector2)
- uid: ShapeEngine.Core.Structs.CollisionPoint.op_Subtraction(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.op_Subtraction(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2)
  id: op_Subtraction(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: operator -(CollisionPoint, Vector2)
  nameWithType: CollisionPoint.operator -(CollisionPoint, Vector2)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.operator -(ShapeEngine.Core.Structs.CollisionPoint, System.Numerics.Vector2)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Subtraction
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 220
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Subtract vector b from point a, and keep normal unchanged.
  example: []
  syntax:
    content: public static CollisionPoint operator -(CollisionPoint a, Vector2 b)
    parameters:
    - id: a
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: ''
    - id: b
      type: System.Numerics.Vector2
      description: ''
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: ''
    content.vb: Public Shared Operator -(a As CollisionPoint, b As Vector2) As CollisionPoint
  overload: ShapeEngine.Core.Structs.CollisionPoint.op_Subtraction*
  nameWithType.vb: CollisionPoint.-(CollisionPoint, Vector2)
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.-(ShapeEngine.Core.Structs.CollisionPoint, System.Numerics.Vector2)
  name.vb: -(CollisionPoint, Vector2)
- uid: ShapeEngine.Core.Structs.CollisionPoint.op_Multiply(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.op_Multiply(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2)
  id: op_Multiply(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: operator *(CollisionPoint, Vector2)
  nameWithType: CollisionPoint.operator *(CollisionPoint, Vector2)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.operator *(ShapeEngine.Core.Structs.CollisionPoint, System.Numerics.Vector2)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Multiply
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 231
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Multiply point a by vector b, and keep normal unchanged.
  example: []
  syntax:
    content: public static CollisionPoint operator *(CollisionPoint a, Vector2 b)
    parameters:
    - id: a
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: ''
    - id: b
      type: System.Numerics.Vector2
      description: ''
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: ''
    content.vb: Public Shared Operator *(a As CollisionPoint, b As Vector2) As CollisionPoint
  overload: ShapeEngine.Core.Structs.CollisionPoint.op_Multiply*
  nameWithType.vb: CollisionPoint.*(CollisionPoint, Vector2)
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.*(ShapeEngine.Core.Structs.CollisionPoint, System.Numerics.Vector2)
  name.vb: '*(CollisionPoint, Vector2)'
- uid: ShapeEngine.Core.Structs.CollisionPoint.op_Division(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.CollisionPoint.op_Division(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2)
  id: op_Division(ShapeEngine.Core.Structs.CollisionPoint,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Structs.CollisionPoint
  langs:
  - csharp
  - vb
  name: operator /(CollisionPoint, Vector2)
  nameWithType: CollisionPoint.operator /(CollisionPoint, Vector2)
  fullName: ShapeEngine.Core.Structs.CollisionPoint.operator /(ShapeEngine.Core.Structs.CollisionPoint, System.Numerics.Vector2)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/CollisionPoint.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Division
    path: ../ShapeEngine/ShapeEngine/Core/Structs/CollisionPoint.cs
    startLine: 242
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Divide point a by vector b, and keep normal unchanged.
  example: []
  syntax:
    content: public static CollisionPoint operator /(CollisionPoint a, Vector2 b)
    parameters:
    - id: a
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: ''
    - id: b
      type: System.Numerics.Vector2
      description: ''
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
      description: ''
    content.vb: Public Shared Operator /(a As CollisionPoint, b As Vector2) As CollisionPoint
  overload: ShapeEngine.Core.Structs.CollisionPoint.op_Division*
  nameWithType.vb: CollisionPoint./(CollisionPoint, Vector2)
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint./(ShapeEngine.Core.Structs.CollisionPoint, System.Numerics.Vector2)
  name.vb: /(CollisionPoint, Vector2)
references:
- uid: ShapeEngine.Core.Structs
  commentId: N:ShapeEngine.Core.Structs
  href: ShapeEngine.html
  name: ShapeEngine.Core.Structs
  nameWithType: ShapeEngine.Core.Structs
  fullName: ShapeEngine.Core.Structs
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Structs
    name: Structs
    href: ShapeEngine.Core.Structs.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Structs
    name: Structs
    href: ShapeEngine.Core.Structs.html
- uid: System.IEquatable{ShapeEngine.Core.Structs.CollisionPoint}
  commentId: T:System.IEquatable{ShapeEngine.Core.Structs.CollisionPoint}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<CollisionPoint>
  nameWithType: IEquatable<CollisionPoint>
  fullName: System.IEquatable<ShapeEngine.Core.Structs.CollisionPoint>
  nameWithType.vb: IEquatable(Of CollisionPoint)
  fullName.vb: System.IEquatable(Of ShapeEngine.Core.Structs.CollisionPoint)
  name.vb: IEquatable(Of CollisionPoint)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: ShapeEngine.Core.Structs.CollisionPoint
    name: CollisionPoint
    href: ShapeEngine.Core.Structs.CollisionPoint.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Structs.CollisionPoint
    name: CollisionPoint
    href: ShapeEngine.Core.Structs.CollisionPoint.html
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ShapeEngine.Core.Structs.CollisionPoint.Valid*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.Valid
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_Valid
  name: Valid
  nameWithType: CollisionPoint.Valid
  fullName: ShapeEngine.Core.Structs.CollisionPoint.Valid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Numerics.Vector2
  commentId: T:System.Numerics.Vector2
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: ShapeEngine.Core.Structs.CollisionPoint.#ctor*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.#ctor
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint__ctor
  name: CollisionPoint
  nameWithType: CollisionPoint.CollisionPoint
  fullName: ShapeEngine.Core.Structs.CollisionPoint.CollisionPoint
  nameWithType.vb: CollisionPoint.New
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.New
  name.vb: New
- uid: ShapeEngine.Core.Structs.CollisionPoint.GetNormalSegment*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.GetNormalSegment
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_GetNormalSegment_System_Single_
  name: GetNormalSegment
  nameWithType: CollisionPoint.GetNormalSegment
  fullName: ShapeEngine.Core.Structs.CollisionPoint.GetNormalSegment
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: ShapeEngine.Core.Shapes.Segment
  commentId: T:ShapeEngine.Core.Shapes.Segment
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Segment.html
  name: Segment
  nameWithType: Segment
  fullName: ShapeEngine.Core.Shapes.Segment
- uid: ShapeEngine.Core.Shapes
  commentId: N:ShapeEngine.Core.Shapes
  href: ShapeEngine.html
  name: ShapeEngine.Core.Shapes
  nameWithType: ShapeEngine.Core.Shapes
  fullName: ShapeEngine.Core.Shapes
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Shapes
    name: Shapes
    href: ShapeEngine.Core.Shapes.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Shapes
    name: Shapes
    href: ShapeEngine.Core.Shapes.html
- uid: ShapeEngine.Core.Structs.CollisionPoint.GetNormalRay*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.GetNormalRay
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_GetNormalRay
  name: GetNormalRay
  nameWithType: CollisionPoint.GetNormalRay
  fullName: ShapeEngine.Core.Structs.CollisionPoint.GetNormalRay
- uid: ShapeEngine.Core.Shapes.Ray
  commentId: T:ShapeEngine.Core.Shapes.Ray
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Ray.html
  name: Ray
  nameWithType: Ray
  fullName: ShapeEngine.Core.Shapes.Ray
- uid: ShapeEngine.Core.Structs.CollisionPoint.GetNormalLine*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.GetNormalLine
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_GetNormalLine
  name: GetNormalLine
  nameWithType: CollisionPoint.GetNormalLine
  fullName: ShapeEngine.Core.Structs.CollisionPoint.GetNormalLine
- uid: ShapeEngine.Core.Shapes.Line
  commentId: T:ShapeEngine.Core.Shapes.Line
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Line.html
  name: Line
  nameWithType: Line
  fullName: ShapeEngine.Core.Shapes.Line
- uid: ShapeEngine.Core.Structs.CollisionPoint.IsCloser*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.IsCloser
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_IsCloser_ShapeEngine_Core_Structs_CollisionPoint_System_Numerics_Vector2_System_Single_System_Single__
  name: IsCloser
  nameWithType: CollisionPoint.IsCloser
  fullName: ShapeEngine.Core.Structs.CollisionPoint.IsCloser
- uid: ShapeEngine.Core.Structs.CollisionPoint
  commentId: T:ShapeEngine.Core.Structs.CollisionPoint
  parent: ShapeEngine.Core.Structs
  href: ShapeEngine.Core.Structs.CollisionPoint.html
  name: CollisionPoint
  nameWithType: CollisionPoint
  fullName: ShapeEngine.Core.Structs.CollisionPoint
- uid: ShapeEngine.Core.Structs.CollisionPoint.IsFurther*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.IsFurther
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_IsFurther_ShapeEngine_Core_Structs_CollisionPoint_System_Numerics_Vector2_System_Single_System_Single__
  name: IsFurther
  nameWithType: CollisionPoint.IsFurther
  fullName: ShapeEngine.Core.Structs.CollisionPoint.IsFurther
- uid: ShapeEngine.Core.Structs.CollisionPoint.IsPointingTowards*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.IsPointingTowards
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_IsPointingTowards_ShapeEngine_Core_Structs_CollisionPoint_System_Numerics_Vector2_System_Single_System_Single__
  name: IsPointingTowards
  nameWithType: CollisionPoint.IsPointingTowards
  fullName: ShapeEngine.Core.Structs.CollisionPoint.IsPointingTowards
- uid: ShapeEngine.Core.Structs.CollisionPoint.IsPointingAway*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.IsPointingAway
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_IsPointingAway_ShapeEngine_Core_Structs_CollisionPoint_System_Numerics_Vector2_System_Single_System_Single__
  name: IsPointingAway
  nameWithType: CollisionPoint.IsPointingAway
  fullName: ShapeEngine.Core.Structs.CollisionPoint.IsPointingAway
- uid: ShapeEngine.Core.Structs.CollisionPoint.Combine*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.Combine
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_Combine_ShapeEngine_Core_Structs_CollisionPoint_
  name: Combine
  nameWithType: CollisionPoint.Combine
  fullName: ShapeEngine.Core.Structs.CollisionPoint.Combine
- uid: ShapeEngine.Core.Structs.CollisionPoint[]
  isExternal: true
  href: ShapeEngine.Core.Structs.CollisionPoint.html
  name: CollisionPoint[]
  nameWithType: CollisionPoint[]
  fullName: ShapeEngine.Core.Structs.CollisionPoint[]
  nameWithType.vb: CollisionPoint()
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint()
  name.vb: CollisionPoint()
  spec.csharp:
  - uid: ShapeEngine.Core.Structs.CollisionPoint
    name: CollisionPoint
    href: ShapeEngine.Core.Structs.CollisionPoint.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: ShapeEngine.Core.Structs.CollisionPoint
    name: CollisionPoint
    href: ShapeEngine.Core.Structs.CollisionPoint.html
  - name: (
  - name: )
- uid: ShapeEngine.Core.Structs.CollisionPoint.Equals*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.Equals
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_Equals_ShapeEngine_Core_Structs_CollisionPoint_
  name: Equals
  nameWithType: CollisionPoint.Equals
  fullName: ShapeEngine.Core.Structs.CollisionPoint.Equals
- uid: System.IEquatable{ShapeEngine.Core.Structs.CollisionPoint}.Equals(ShapeEngine.Core.Structs.CollisionPoint)
  commentId: M:System.IEquatable{ShapeEngine.Core.Structs.CollisionPoint}.Equals(ShapeEngine.Core.Structs.CollisionPoint)
  parent: System.IEquatable{ShapeEngine.Core.Structs.CollisionPoint}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(CollisionPoint)
  nameWithType: IEquatable<CollisionPoint>.Equals(CollisionPoint)
  fullName: System.IEquatable<ShapeEngine.Core.Structs.CollisionPoint>.Equals(ShapeEngine.Core.Structs.CollisionPoint)
  nameWithType.vb: IEquatable(Of CollisionPoint).Equals(CollisionPoint)
  fullName.vb: System.IEquatable(Of ShapeEngine.Core.Structs.CollisionPoint).Equals(ShapeEngine.Core.Structs.CollisionPoint)
  spec.csharp:
  - uid: System.IEquatable{ShapeEngine.Core.Structs.CollisionPoint}.Equals(ShapeEngine.Core.Structs.CollisionPoint)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: ShapeEngine.Core.Structs.CollisionPoint
    name: CollisionPoint
    href: ShapeEngine.Core.Structs.CollisionPoint.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{ShapeEngine.Core.Structs.CollisionPoint}.Equals(ShapeEngine.Core.Structs.CollisionPoint)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: ShapeEngine.Core.Structs.CollisionPoint
    name: CollisionPoint
    href: ShapeEngine.Core.Structs.CollisionPoint.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: ShapeEngine.Core.Structs.CollisionPoint.GetHashCode*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.GetHashCode
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_GetHashCode
  name: GetHashCode
  nameWithType: CollisionPoint.GetHashCode
  fullName: ShapeEngine.Core.Structs.CollisionPoint.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ShapeEngine.Core.Structs.CollisionPoint.FlipNormal*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.FlipNormal
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_FlipNormal
  name: FlipNormal
  nameWithType: CollisionPoint.FlipNormal
  fullName: ShapeEngine.Core.Structs.CollisionPoint.FlipNormal
- uid: ShapeEngine.Core.Structs.CollisionPoint.IsNormalFacing*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.IsNormalFacing
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_IsNormalFacing_System_Numerics_Vector2_
  name: IsNormalFacing
  nameWithType: CollisionPoint.IsNormalFacing
  fullName: ShapeEngine.Core.Structs.CollisionPoint.IsNormalFacing
- uid: ShapeEngine.Core.Structs.CollisionPoint.IsNormalFacingPoint*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.IsNormalFacingPoint
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_IsNormalFacingPoint_System_Numerics_Vector2_
  name: IsNormalFacingPoint
  nameWithType: CollisionPoint.IsNormalFacingPoint
  fullName: ShapeEngine.Core.Structs.CollisionPoint.IsNormalFacingPoint
- uid: ShapeEngine.Core.Structs.CollisionPoint.RotateNormal*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.RotateNormal
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_RotateNormal_System_Single_
  name: RotateNormal
  nameWithType: CollisionPoint.RotateNormal
  fullName: ShapeEngine.Core.Structs.CollisionPoint.RotateNormal
- uid: ShapeEngine.Core.Structs.CollisionPoint.RotateNormalDeg*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.RotateNormalDeg
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_RotateNormalDeg_System_Single_
  name: RotateNormalDeg
  nameWithType: CollisionPoint.RotateNormalDeg
  fullName: ShapeEngine.Core.Structs.CollisionPoint.RotateNormalDeg
- uid: ShapeEngine.Core.Structs.CollisionPoint.SetPoint*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.SetPoint
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_SetPoint_System_Numerics_Vector2_
  name: SetPoint
  nameWithType: CollisionPoint.SetPoint
  fullName: ShapeEngine.Core.Structs.CollisionPoint.SetPoint
- uid: ShapeEngine.Core.Structs.CollisionPoint.SetNormal*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.SetNormal
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_SetNormal_System_Numerics_Vector2_
  name: SetNormal
  nameWithType: CollisionPoint.SetNormal
  fullName: ShapeEngine.Core.Structs.CollisionPoint.SetNormal
- uid: ShapeEngine.Core.Structs.CollisionPoint.op_Addition*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.op_Addition
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_op_Addition_ShapeEngine_Core_Structs_CollisionPoint_ShapeEngine_Core_Structs_CollisionPoint_
  name: operator +
  nameWithType: CollisionPoint.operator +
  fullName: ShapeEngine.Core.Structs.CollisionPoint.operator +
  nameWithType.vb: CollisionPoint.+
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ShapeEngine.Core.Structs.CollisionPoint.op_Addition*
    name: +
    href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_op_Addition_ShapeEngine_Core_Structs_CollisionPoint_ShapeEngine_Core_Structs_CollisionPoint_
- uid: ShapeEngine.Core.Structs.CollisionPoint.op_Subtraction*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.op_Subtraction
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_op_Subtraction_ShapeEngine_Core_Structs_CollisionPoint_ShapeEngine_Core_Structs_CollisionPoint_
  name: operator -
  nameWithType: CollisionPoint.operator -
  fullName: ShapeEngine.Core.Structs.CollisionPoint.operator -
  nameWithType.vb: CollisionPoint.-
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ShapeEngine.Core.Structs.CollisionPoint.op_Subtraction*
    name: '-'
    href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_op_Subtraction_ShapeEngine_Core_Structs_CollisionPoint_ShapeEngine_Core_Structs_CollisionPoint_
- uid: ShapeEngine.Core.Structs.CollisionPoint.op_Multiply*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.op_Multiply
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_op_Multiply_ShapeEngine_Core_Structs_CollisionPoint_System_Single_
  name: operator *
  nameWithType: CollisionPoint.operator *
  fullName: ShapeEngine.Core.Structs.CollisionPoint.operator *
  nameWithType.vb: CollisionPoint.*
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ShapeEngine.Core.Structs.CollisionPoint.op_Multiply*
    name: '*'
    href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_op_Multiply_ShapeEngine_Core_Structs_CollisionPoint_System_Single_
- uid: ShapeEngine.Core.Structs.CollisionPoint.op_Division*
  commentId: Overload:ShapeEngine.Core.Structs.CollisionPoint.op_Division
  href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_op_Division_ShapeEngine_Core_Structs_CollisionPoint_System_Single_
  name: operator /
  nameWithType: CollisionPoint.operator /
  fullName: ShapeEngine.Core.Structs.CollisionPoint.operator /
  nameWithType.vb: CollisionPoint./
  fullName.vb: ShapeEngine.Core.Structs.CollisionPoint./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ShapeEngine.Core.Structs.CollisionPoint.op_Division*
    name: /
    href: ShapeEngine.Core.Structs.CollisionPoint.html#ShapeEngine_Core_Structs_CollisionPoint_op_Division_ShapeEngine_Core_Structs_CollisionPoint_System_Single_
