### YamlMime:ManagedReference
items:
- uid: ShapeEngine.Persistent.ContentPacker
  commentId: T:ShapeEngine.Persistent.ContentPacker
  id: ContentPacker
  parent: ShapeEngine.Persistent
  children:
  - ShapeEngine.Persistent.ContentPacker.Pack(System.String,System.String,System.String)
  - ShapeEngine.Persistent.ContentPacker.Unpack(System.String,System.String)
  langs:
  - csharp
  - vb
  name: ContentPacker
  nameWithType: ContentPacker
  fullName: ShapeEngine.Persistent.ContentPacker
  type: Class
  source:
    remote:
      path: ShapeEngine/Persistent/ContentPacker.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: ContentPacker
    path: ../ShapeEngine/ShapeEngine/Persistent/ContentPacker.cs
    startLine: 16
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Persistent
  summary: >-
    Can be used to pack resources in a folder structur into a single txt file. Every resource consists of 2 lines the resulting txt file.

    The first line is the name with extension the second line is data as encoded string.
  example: []
  syntax:
    content: public static class ContentPacker
    content.vb: Public Module ContentPacker
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ShapeEngine.Persistent.ContentPacker.Pack(System.String,System.String,System.String)
  commentId: M:ShapeEngine.Persistent.ContentPacker.Pack(System.String,System.String,System.String)
  id: Pack(System.String,System.String,System.String)
  parent: ShapeEngine.Persistent.ContentPacker
  langs:
  - csharp
  - vb
  name: Pack(string, string, string)
  nameWithType: ContentPacker.Pack(string, string, string)
  fullName: ShapeEngine.Persistent.ContentPacker.Pack(string, string, string)
  type: Method
  source:
    remote:
      path: ShapeEngine/Persistent/ContentPacker.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Pack
    path: ../ShapeEngine/ShapeEngine/Persistent/ContentPacker.cs
    startLine: 25
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Persistent
  summary: Pack a folder structure of various content types into a single txt file.
  example: []
  syntax:
    content: public static void Pack(string sourcePath, string outputPath, string outputFilename = "resources.txt")
    parameters:
    - id: sourcePath
      type: System.String
      description: The path to the folder that should be packed. Goes trough all subfolders as well.
    - id: outputPath
      type: System.String
      description: The path where the resulting txt file should be saved.
    - id: outputFilename
      type: System.String
      description: The name of the resulting txt file.
    content.vb: Public Shared Sub Pack(sourcePath As String, outputPath As String, outputFilename As String = "resources.txt")
  overload: ShapeEngine.Persistent.ContentPacker.Pack*
  nameWithType.vb: ContentPacker.Pack(String, String, String)
  fullName.vb: ShapeEngine.Persistent.ContentPacker.Pack(String, String, String)
  name.vb: Pack(String, String, String)
- uid: ShapeEngine.Persistent.ContentPacker.Unpack(System.String,System.String)
  commentId: M:ShapeEngine.Persistent.ContentPacker.Unpack(System.String,System.String)
  id: Unpack(System.String,System.String)
  parent: ShapeEngine.Persistent.ContentPacker
  langs:
  - csharp
  - vb
  name: Unpack(string, string)
  nameWithType: ContentPacker.Unpack(string, string)
  fullName: ShapeEngine.Persistent.ContentPacker.Unpack(string, string)
  type: Method
  source:
    remote:
      path: ShapeEngine/Persistent/ContentPacker.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Unpack
    path: ../ShapeEngine/ShapeEngine/Persistent/ContentPacker.cs
    startLine: 44
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Persistent
  summary: Load and unpack a txt file generate by the Pack function.
  example: []
  syntax:
    content: public static Dictionary<string, ContentInfo> Unpack(string path, string fileName = "resources.txt")
    parameters:
    - id: path
      type: System.String
      description: The path to the packed txt file.
    - id: fileName
      type: System.String
      description: The name of the packed txt file.
    return:
      type: System.Collections.Generic.Dictionary{System.String,ShapeEngine.Persistent.ContentInfo}
      description: ''
    content.vb: Public Shared Function Unpack(path As String, fileName As String = "resources.txt") As Dictionary(Of String, ContentInfo)
  overload: ShapeEngine.Persistent.ContentPacker.Unpack*
  nameWithType.vb: ContentPacker.Unpack(String, String)
  fullName.vb: ShapeEngine.Persistent.ContentPacker.Unpack(String, String)
  name.vb: Unpack(String, String)
references:
- uid: ShapeEngine.Persistent
  commentId: N:ShapeEngine.Persistent
  href: ShapeEngine.html
  name: ShapeEngine.Persistent
  nameWithType: ShapeEngine.Persistent
  fullName: ShapeEngine.Persistent
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Persistent
    name: Persistent
    href: ShapeEngine.Persistent.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Persistent
    name: Persistent
    href: ShapeEngine.Persistent.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ShapeEngine.Persistent.ContentPacker.Pack*
  commentId: Overload:ShapeEngine.Persistent.ContentPacker.Pack
  href: ShapeEngine.Persistent.ContentPacker.html#ShapeEngine_Persistent_ContentPacker_Pack_System_String_System_String_System_String_
  name: Pack
  nameWithType: ContentPacker.Pack
  fullName: ShapeEngine.Persistent.ContentPacker.Pack
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ShapeEngine.Persistent.ContentPacker.Unpack*
  commentId: Overload:ShapeEngine.Persistent.ContentPacker.Unpack
  href: ShapeEngine.Persistent.ContentPacker.html#ShapeEngine_Persistent_ContentPacker_Unpack_System_String_System_String_
  name: Unpack
  nameWithType: ContentPacker.Unpack
  fullName: ShapeEngine.Persistent.ContentPacker.Unpack
- uid: System.Collections.Generic.Dictionary{System.String,ShapeEngine.Persistent.ContentInfo}
  commentId: T:System.Collections.Generic.Dictionary{System.String,ShapeEngine.Persistent.ContentInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, ContentInfo>
  nameWithType: Dictionary<string, ContentInfo>
  fullName: System.Collections.Generic.Dictionary<string, ShapeEngine.Persistent.ContentInfo>
  nameWithType.vb: Dictionary(Of String, ContentInfo)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, ShapeEngine.Persistent.ContentInfo)
  name.vb: Dictionary(Of String, ContentInfo)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: ShapeEngine.Persistent.ContentInfo
    name: ContentInfo
    href: ShapeEngine.Persistent.ContentInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: ShapeEngine.Persistent.ContentInfo
    name: ContentInfo
    href: ShapeEngine.Persistent.ContentInfo.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
