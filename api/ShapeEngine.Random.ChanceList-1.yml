### YamlMime:ManagedReference
items:
- uid: ShapeEngine.Random.ChanceList`1
  commentId: T:ShapeEngine.Random.ChanceList`1
  id: ChanceList`1
  parent: ShapeEngine.Random
  children:
  - ShapeEngine.Random.ChanceList`1.#ctor(System.Int32,System.ValueTuple{System.Int32,`0}[])
  - ShapeEngine.Random.ChanceList`1.#ctor(System.ValueTuple{System.Int32,`0}[])
  - ShapeEngine.Random.ChanceList`1.Next
  - ShapeEngine.Random.ChanceList`1.Next(System.Int32)
  - ShapeEngine.Random.ChanceList`1.Next(System.Int32,System.Int32)
  - ShapeEngine.Random.ChanceList`1.Next(System.Predicate{`0})
  - ShapeEngine.Random.ChanceList`1.Refill
  langs:
  - csharp
  - vb
  name: ChanceList<T>
  nameWithType: ChanceList<T>
  fullName: ShapeEngine.Random.ChanceList<T>
  type: Class
  source:
    remote:
      path: ShapeEngine/Random/ChanceList.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChanceList
    path: ../ShapeEngine/ShapeEngine/Random/ChanceList.cs
    startLine: 4
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Random
  syntax:
    content: public class ChanceList<T>
    typeParameters:
    - id: T
    content.vb: Public Class ChanceList(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ChanceList(Of T)
  fullName.vb: ShapeEngine.Random.ChanceList(Of T)
  name.vb: ChanceList(Of T)
- uid: ShapeEngine.Random.ChanceList`1.#ctor(System.ValueTuple{System.Int32,`0}[])
  commentId: M:ShapeEngine.Random.ChanceList`1.#ctor(System.ValueTuple{System.Int32,`0}[])
  id: '#ctor(System.ValueTuple{System.Int32,`0}[])'
  parent: ShapeEngine.Random.ChanceList`1
  langs:
  - csharp
  - vb
  name: ChanceList(params (int amount, T value)[])
  nameWithType: ChanceList<T>.ChanceList(params (int amount, T value)[])
  fullName: ShapeEngine.Random.ChanceList<T>.ChanceList(params (int amount, T value)[])
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Random/ChanceList.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Random/ChanceList.cs
    startLine: 11
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Random
  syntax:
    content: public ChanceList(params (int amount, T value)[] entries)
    parameters:
    - id: entries
      type: System.ValueTuple{System.Int32,{T}}[]
    content.vb: Public Sub New(ParamArray entries As (amount As Integer, value As T)())
  overload: ShapeEngine.Random.ChanceList`1.#ctor*
  nameWithType.vb: ChanceList(Of T).New(ParamArray (amount As Integer, value As T)())
  fullName.vb: ShapeEngine.Random.ChanceList(Of T).New(ParamArray (amount As Integer, value As T)())
  name.vb: New(ParamArray (amount As Integer, value As T)())
- uid: ShapeEngine.Random.ChanceList`1.#ctor(System.Int32,System.ValueTuple{System.Int32,`0}[])
  commentId: M:ShapeEngine.Random.ChanceList`1.#ctor(System.Int32,System.ValueTuple{System.Int32,`0}[])
  id: '#ctor(System.Int32,System.ValueTuple{System.Int32,`0}[])'
  parent: ShapeEngine.Random.ChanceList`1
  langs:
  - csharp
  - vb
  name: ChanceList(int, params (int amount, T value)[])
  nameWithType: ChanceList<T>.ChanceList(int, params (int amount, T value)[])
  fullName: ShapeEngine.Random.ChanceList<T>.ChanceList(int, params (int amount, T value)[])
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Random/ChanceList.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Random/ChanceList.cs
    startLine: 17
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Random
  syntax:
    content: public ChanceList(int seed, params (int amount, T value)[] entries)
    parameters:
    - id: seed
      type: System.Int32
    - id: entries
      type: System.ValueTuple{System.Int32,{T}}[]
    content.vb: Public Sub New(seed As Integer, ParamArray entries As (amount As Integer, value As T)())
  overload: ShapeEngine.Random.ChanceList`1.#ctor*
  nameWithType.vb: ChanceList(Of T).New(Integer, ParamArray (amount As Integer, value As T)())
  fullName.vb: ShapeEngine.Random.ChanceList(Of T).New(Integer, ParamArray (amount As Integer, value As T)())
  name.vb: New(Integer, ParamArray (amount As Integer, value As T)())
- uid: ShapeEngine.Random.ChanceList`1.Refill
  commentId: M:ShapeEngine.Random.ChanceList`1.Refill
  id: Refill
  parent: ShapeEngine.Random.ChanceList`1
  langs:
  - csharp
  - vb
  name: Refill()
  nameWithType: ChanceList<T>.Refill()
  fullName: ShapeEngine.Random.ChanceList<T>.Refill()
  type: Method
  source:
    remote:
      path: ShapeEngine/Random/ChanceList.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Refill
    path: ../ShapeEngine/ShapeEngine/Random/ChanceList.cs
    startLine: 24
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Random
  syntax:
    content: public void Refill()
    content.vb: Public Sub Refill()
  overload: ShapeEngine.Random.ChanceList`1.Refill*
  nameWithType.vb: ChanceList(Of T).Refill()
  fullName.vb: ShapeEngine.Random.ChanceList(Of T).Refill()
- uid: ShapeEngine.Random.ChanceList`1.Next(System.Predicate{`0})
  commentId: M:ShapeEngine.Random.ChanceList`1.Next(System.Predicate{`0})
  id: Next(System.Predicate{`0})
  parent: ShapeEngine.Random.ChanceList`1
  langs:
  - csharp
  - vb
  name: Next(Predicate<T>)
  nameWithType: ChanceList<T>.Next(Predicate<T>)
  fullName: ShapeEngine.Random.ChanceList<T>.Next(System.Predicate<T>)
  type: Method
  source:
    remote:
      path: ShapeEngine/Random/ChanceList.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Next
    path: ../ShapeEngine/ShapeEngine/Random/ChanceList.cs
    startLine: 30
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Random
  syntax:
    content: public T? Next(Predicate<T> match)
    parameters:
    - id: match
      type: System.Predicate{{T}}
    return:
      type: '{T}'
    content.vb: Public Function [Next](match As Predicate(Of T)) As T
  overload: ShapeEngine.Random.ChanceList`1.Next*
  nameWithType.vb: ChanceList(Of T).Next(Predicate(Of T))
  fullName.vb: ShapeEngine.Random.ChanceList(Of T).Next(System.Predicate(Of T))
  name.vb: Next(Predicate(Of T))
- uid: ShapeEngine.Random.ChanceList`1.Next(System.Int32,System.Int32)
  commentId: M:ShapeEngine.Random.ChanceList`1.Next(System.Int32,System.Int32)
  id: Next(System.Int32,System.Int32)
  parent: ShapeEngine.Random.ChanceList`1
  langs:
  - csharp
  - vb
  name: Next(int, int)
  nameWithType: ChanceList<T>.Next(int, int)
  fullName: ShapeEngine.Random.ChanceList<T>.Next(int, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Random/ChanceList.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Next
    path: ../ShapeEngine/ShapeEngine/Random/ChanceList.cs
    startLine: 41
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Random
  syntax:
    content: public List<T> Next(int min, int max)
    parameters:
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: Public Function [Next](min As Integer, max As Integer) As List(Of T)
  overload: ShapeEngine.Random.ChanceList`1.Next*
  nameWithType.vb: ChanceList(Of T).Next(Integer, Integer)
  fullName.vb: ShapeEngine.Random.ChanceList(Of T).Next(Integer, Integer)
  name.vb: Next(Integer, Integer)
- uid: ShapeEngine.Random.ChanceList`1.Next(System.Int32)
  commentId: M:ShapeEngine.Random.ChanceList`1.Next(System.Int32)
  id: Next(System.Int32)
  parent: ShapeEngine.Random.ChanceList`1
  langs:
  - csharp
  - vb
  name: Next(int)
  nameWithType: ChanceList<T>.Next(int)
  fullName: ShapeEngine.Random.ChanceList<T>.Next(int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Random/ChanceList.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Next
    path: ../ShapeEngine/ShapeEngine/Random/ChanceList.cs
    startLine: 45
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Random
  syntax:
    content: public List<T> Next(int amount)
    parameters:
    - id: amount
      type: System.Int32
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: Public Function [Next](amount As Integer) As List(Of T)
  overload: ShapeEngine.Random.ChanceList`1.Next*
  nameWithType.vb: ChanceList(Of T).Next(Integer)
  fullName.vb: ShapeEngine.Random.ChanceList(Of T).Next(Integer)
  name.vb: Next(Integer)
- uid: ShapeEngine.Random.ChanceList`1.Next
  commentId: M:ShapeEngine.Random.ChanceList`1.Next
  id: Next
  parent: ShapeEngine.Random.ChanceList`1
  langs:
  - csharp
  - vb
  name: Next()
  nameWithType: ChanceList<T>.Next()
  fullName: ShapeEngine.Random.ChanceList<T>.Next()
  type: Method
  source:
    remote:
      path: ShapeEngine/Random/ChanceList.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Next
    path: ../ShapeEngine/ShapeEngine/Random/ChanceList.cs
    startLine: 54
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Random
  syntax:
    content: public T Next()
    return:
      type: '{T}'
    content.vb: Public Function [Next]() As T
  overload: ShapeEngine.Random.ChanceList`1.Next*
  nameWithType.vb: ChanceList(Of T).Next()
  fullName.vb: ShapeEngine.Random.ChanceList(Of T).Next()
references:
- uid: ShapeEngine.Random
  commentId: N:ShapeEngine.Random
  href: ShapeEngine.html
  name: ShapeEngine.Random
  nameWithType: ShapeEngine.Random
  fullName: ShapeEngine.Random
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Random
    name: Random
    href: ShapeEngine.Random.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Random
    name: Random
    href: ShapeEngine.Random.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ShapeEngine.Random.ChanceList`1.#ctor*
  commentId: Overload:ShapeEngine.Random.ChanceList`1.#ctor
  href: ShapeEngine.Random.ChanceList-1.html#ShapeEngine_Random_ChanceList_1__ctor_System_ValueTuple_System_Int32__0____
  name: ChanceList
  nameWithType: ChanceList<T>.ChanceList
  fullName: ShapeEngine.Random.ChanceList<T>.ChanceList
  nameWithType.vb: ChanceList(Of T).New
  fullName.vb: ShapeEngine.Random.ChanceList(Of T).New
  name.vb: New
- uid: System.ValueTuple{System.Int32,{T}}[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: (int amount, T value)[]
  nameWithType: (int amount, T value)[]
  fullName: (int amount, T value)[]
  nameWithType.vb: (amount As Integer, value As T)()
  fullName.vb: (amount As Integer, value As T)()
  name.vb: (amount As Integer, value As T)()
  spec.csharp:
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,`0}.amount
    name: amount
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,-0-.amount
  - name: ','
  - name: " "
  - name: T
  - name: " "
  - uid: System.ValueTuple{System.Int32,`0}.value
    name: value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,-0-.value
  - name: )
  - name: '['
  - name: ']'
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Int32,`0}.amount
    name: amount
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,-0-.amount
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,`0}.value
    name: value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,-0-.value
  - name: " "
  - name: As
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ShapeEngine.Random.ChanceList`1.Refill*
  commentId: Overload:ShapeEngine.Random.ChanceList`1.Refill
  href: ShapeEngine.Random.ChanceList-1.html#ShapeEngine_Random_ChanceList_1_Refill
  name: Refill
  nameWithType: ChanceList<T>.Refill
  fullName: ShapeEngine.Random.ChanceList<T>.Refill
  nameWithType.vb: ChanceList(Of T).Refill
  fullName.vb: ShapeEngine.Random.ChanceList(Of T).Refill
- uid: ShapeEngine.Random.ChanceList`1.Next*
  commentId: Overload:ShapeEngine.Random.ChanceList`1.Next
  href: ShapeEngine.Random.ChanceList-1.html#ShapeEngine_Random_ChanceList_1_Next_System_Predicate__0__
  name: Next
  nameWithType: ChanceList<T>.Next
  fullName: ShapeEngine.Random.ChanceList<T>.Next
  nameWithType.vb: ChanceList(Of T).Next
  fullName.vb: ShapeEngine.Random.ChanceList(Of T).Next
- uid: System.Predicate{{T}}
  commentId: T:System.Predicate{`0}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
