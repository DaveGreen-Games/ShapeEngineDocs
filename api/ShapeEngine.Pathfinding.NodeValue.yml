### YamlMime:ManagedReference
items:
- uid: ShapeEngine.Pathfinding.NodeValue
  commentId: T:ShapeEngine.Pathfinding.NodeValue
  id: NodeValue
  parent: ShapeEngine.Pathfinding
  children:
  - ShapeEngine.Pathfinding.NodeValue.#ctor
  - ShapeEngine.Pathfinding.NodeValue.#ctor(ShapeEngine.Pathfinding.NodeValueType)
  - ShapeEngine.Pathfinding.NodeValue.#ctor(ShapeEngine.Pathfinding.NodeValueType,System.UInt32)
  - ShapeEngine.Pathfinding.NodeValue.#ctor(System.Single,ShapeEngine.Pathfinding.NodeValueType)
  - ShapeEngine.Pathfinding.NodeValue.#ctor(System.Single,ShapeEngine.Pathfinding.NodeValueType,System.UInt32)
  - ShapeEngine.Pathfinding.NodeValue.Layer
  - ShapeEngine.Pathfinding.NodeValue.Type
  - ShapeEngine.Pathfinding.NodeValue.Valid
  - ShapeEngine.Pathfinding.NodeValue.Value
  langs:
  - csharp
  - vb
  name: NodeValue
  nameWithType: NodeValue
  fullName: ShapeEngine.Pathfinding.NodeValue
  type: Struct
  source:
    remote:
      path: ShapeEngine/Pathfinding/NodeValue.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: NodeValue
    path: ../ShapeEngine/ShapeEngine/Pathfinding/NodeValue.cs
    startLine: 2
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Pathfinding
  syntax:
    content: public readonly struct NodeValue
    content.vb: Public Structure NodeValue
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: ShapeEngine.Pathfinding.NodeValue.Value
  commentId: F:ShapeEngine.Pathfinding.NodeValue.Value
  id: Value
  parent: ShapeEngine.Pathfinding.NodeValue
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: NodeValue.Value
  fullName: ShapeEngine.Pathfinding.NodeValue.Value
  type: Field
  source:
    remote:
      path: ShapeEngine/Pathfinding/NodeValue.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Value
    path: ../ShapeEngine/ShapeEngine/Pathfinding/NodeValue.cs
    startLine: 10
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Pathfinding
  summary: >-
    Higher numbers mean the cell is more favorable

    Smaller numbers mean the cell is less favorable

    BaseValue/Flat/Bonus of 0 is default

    A value of 5 makes the cell distance 5 timer shorter, a value -5 make the cell distance 5 timer longer
  example: []
  syntax:
    content: public readonly float Value
    return:
      type: System.Single
    content.vb: Public ReadOnly Value As Single
- uid: ShapeEngine.Pathfinding.NodeValue.Type
  commentId: F:ShapeEngine.Pathfinding.NodeValue.Type
  id: Type
  parent: ShapeEngine.Pathfinding.NodeValue
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: NodeValue.Type
  fullName: ShapeEngine.Pathfinding.NodeValue.Type
  type: Field
  source:
    remote:
      path: ShapeEngine/Pathfinding/NodeValue.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Type
    path: ../ShapeEngine/ShapeEngine/Pathfinding/NodeValue.cs
    startLine: 11
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Pathfinding
  syntax:
    content: public readonly NodeValueType Type
    return:
      type: ShapeEngine.Pathfinding.NodeValueType
    content.vb: Public ReadOnly Type As NodeValueType
- uid: ShapeEngine.Pathfinding.NodeValue.Layer
  commentId: F:ShapeEngine.Pathfinding.NodeValue.Layer
  id: Layer
  parent: ShapeEngine.Pathfinding.NodeValue
  langs:
  - csharp
  - vb
  name: Layer
  nameWithType: NodeValue.Layer
  fullName: ShapeEngine.Pathfinding.NodeValue.Layer
  type: Field
  source:
    remote:
      path: ShapeEngine/Pathfinding/NodeValue.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Layer
    path: ../ShapeEngine/ShapeEngine/Pathfinding/NodeValue.cs
    startLine: 12
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Pathfinding
  syntax:
    content: public readonly uint Layer
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Layer As UInteger
- uid: ShapeEngine.Pathfinding.NodeValue.Valid
  commentId: P:ShapeEngine.Pathfinding.NodeValue.Valid
  id: Valid
  parent: ShapeEngine.Pathfinding.NodeValue
  langs:
  - csharp
  - vb
  name: Valid
  nameWithType: NodeValue.Valid
  fullName: ShapeEngine.Pathfinding.NodeValue.Valid
  type: Property
  source:
    remote:
      path: ShapeEngine/Pathfinding/NodeValue.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Valid
    path: ../ShapeEngine/ShapeEngine/Pathfinding/NodeValue.cs
    startLine: 14
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Pathfinding
  syntax:
    content: public bool Valid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Valid As Boolean
  overload: ShapeEngine.Pathfinding.NodeValue.Valid*
- uid: ShapeEngine.Pathfinding.NodeValue.#ctor
  commentId: M:ShapeEngine.Pathfinding.NodeValue.#ctor
  id: '#ctor'
  parent: ShapeEngine.Pathfinding.NodeValue
  langs:
  - csharp
  - vb
  name: NodeValue()
  nameWithType: NodeValue.NodeValue()
  fullName: ShapeEngine.Pathfinding.NodeValue.NodeValue()
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Pathfinding/NodeValue.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Pathfinding/NodeValue.cs
    startLine: 16
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Pathfinding
  syntax:
    content: public NodeValue()
    content.vb: Public Sub New()
  overload: ShapeEngine.Pathfinding.NodeValue.#ctor*
  nameWithType.vb: NodeValue.New()
  fullName.vb: ShapeEngine.Pathfinding.NodeValue.New()
  name.vb: New()
- uid: ShapeEngine.Pathfinding.NodeValue.#ctor(ShapeEngine.Pathfinding.NodeValueType)
  commentId: M:ShapeEngine.Pathfinding.NodeValue.#ctor(ShapeEngine.Pathfinding.NodeValueType)
  id: '#ctor(ShapeEngine.Pathfinding.NodeValueType)'
  parent: ShapeEngine.Pathfinding.NodeValue
  langs:
  - csharp
  - vb
  name: NodeValue(NodeValueType)
  nameWithType: NodeValue.NodeValue(NodeValueType)
  fullName: ShapeEngine.Pathfinding.NodeValue.NodeValue(ShapeEngine.Pathfinding.NodeValueType)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Pathfinding/NodeValue.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Pathfinding/NodeValue.cs
    startLine: 22
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Pathfinding
  syntax:
    content: public NodeValue(NodeValueType type)
    parameters:
    - id: type
      type: ShapeEngine.Pathfinding.NodeValueType
    content.vb: Public Sub New(type As NodeValueType)
  overload: ShapeEngine.Pathfinding.NodeValue.#ctor*
  nameWithType.vb: NodeValue.New(NodeValueType)
  fullName.vb: ShapeEngine.Pathfinding.NodeValue.New(ShapeEngine.Pathfinding.NodeValueType)
  name.vb: New(NodeValueType)
- uid: ShapeEngine.Pathfinding.NodeValue.#ctor(ShapeEngine.Pathfinding.NodeValueType,System.UInt32)
  commentId: M:ShapeEngine.Pathfinding.NodeValue.#ctor(ShapeEngine.Pathfinding.NodeValueType,System.UInt32)
  id: '#ctor(ShapeEngine.Pathfinding.NodeValueType,System.UInt32)'
  parent: ShapeEngine.Pathfinding.NodeValue
  langs:
  - csharp
  - vb
  name: NodeValue(NodeValueType, uint)
  nameWithType: NodeValue.NodeValue(NodeValueType, uint)
  fullName: ShapeEngine.Pathfinding.NodeValue.NodeValue(ShapeEngine.Pathfinding.NodeValueType, uint)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Pathfinding/NodeValue.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Pathfinding/NodeValue.cs
    startLine: 28
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Pathfinding
  syntax:
    content: public NodeValue(NodeValueType type, uint layer)
    parameters:
    - id: type
      type: ShapeEngine.Pathfinding.NodeValueType
    - id: layer
      type: System.UInt32
    content.vb: Public Sub New(type As NodeValueType, layer As UInteger)
  overload: ShapeEngine.Pathfinding.NodeValue.#ctor*
  nameWithType.vb: NodeValue.New(NodeValueType, UInteger)
  fullName.vb: ShapeEngine.Pathfinding.NodeValue.New(ShapeEngine.Pathfinding.NodeValueType, UInteger)
  name.vb: New(NodeValueType, UInteger)
- uid: ShapeEngine.Pathfinding.NodeValue.#ctor(System.Single,ShapeEngine.Pathfinding.NodeValueType)
  commentId: M:ShapeEngine.Pathfinding.NodeValue.#ctor(System.Single,ShapeEngine.Pathfinding.NodeValueType)
  id: '#ctor(System.Single,ShapeEngine.Pathfinding.NodeValueType)'
  parent: ShapeEngine.Pathfinding.NodeValue
  langs:
  - csharp
  - vb
  name: NodeValue(float, NodeValueType)
  nameWithType: NodeValue.NodeValue(float, NodeValueType)
  fullName: ShapeEngine.Pathfinding.NodeValue.NodeValue(float, ShapeEngine.Pathfinding.NodeValueType)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Pathfinding/NodeValue.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Pathfinding/NodeValue.cs
    startLine: 34
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Pathfinding
  syntax:
    content: public NodeValue(float value, NodeValueType type)
    parameters:
    - id: value
      type: System.Single
    - id: type
      type: ShapeEngine.Pathfinding.NodeValueType
    content.vb: Public Sub New(value As Single, type As NodeValueType)
  overload: ShapeEngine.Pathfinding.NodeValue.#ctor*
  nameWithType.vb: NodeValue.New(Single, NodeValueType)
  fullName.vb: ShapeEngine.Pathfinding.NodeValue.New(Single, ShapeEngine.Pathfinding.NodeValueType)
  name.vb: New(Single, NodeValueType)
- uid: ShapeEngine.Pathfinding.NodeValue.#ctor(System.Single,ShapeEngine.Pathfinding.NodeValueType,System.UInt32)
  commentId: M:ShapeEngine.Pathfinding.NodeValue.#ctor(System.Single,ShapeEngine.Pathfinding.NodeValueType,System.UInt32)
  id: '#ctor(System.Single,ShapeEngine.Pathfinding.NodeValueType,System.UInt32)'
  parent: ShapeEngine.Pathfinding.NodeValue
  langs:
  - csharp
  - vb
  name: NodeValue(float, NodeValueType, uint)
  nameWithType: NodeValue.NodeValue(float, NodeValueType, uint)
  fullName: ShapeEngine.Pathfinding.NodeValue.NodeValue(float, ShapeEngine.Pathfinding.NodeValueType, uint)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Pathfinding/NodeValue.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Pathfinding/NodeValue.cs
    startLine: 41
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Pathfinding
  syntax:
    content: public NodeValue(float value, NodeValueType type, uint layer)
    parameters:
    - id: value
      type: System.Single
    - id: type
      type: ShapeEngine.Pathfinding.NodeValueType
    - id: layer
      type: System.UInt32
    content.vb: Public Sub New(value As Single, type As NodeValueType, layer As UInteger)
  overload: ShapeEngine.Pathfinding.NodeValue.#ctor*
  nameWithType.vb: NodeValue.New(Single, NodeValueType, UInteger)
  fullName.vb: ShapeEngine.Pathfinding.NodeValue.New(Single, ShapeEngine.Pathfinding.NodeValueType, UInteger)
  name.vb: New(Single, NodeValueType, UInteger)
references:
- uid: ShapeEngine.Pathfinding
  commentId: N:ShapeEngine.Pathfinding
  href: ShapeEngine.html
  name: ShapeEngine.Pathfinding
  nameWithType: ShapeEngine.Pathfinding
  fullName: ShapeEngine.Pathfinding
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Pathfinding
    name: Pathfinding
    href: ShapeEngine.Pathfinding.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Pathfinding
    name: Pathfinding
    href: ShapeEngine.Pathfinding.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: ShapeEngine.Pathfinding.NodeValueType
  commentId: T:ShapeEngine.Pathfinding.NodeValueType
  parent: ShapeEngine.Pathfinding
  href: ShapeEngine.Pathfinding.NodeValueType.html
  name: NodeValueType
  nameWithType: NodeValueType
  fullName: ShapeEngine.Pathfinding.NodeValueType
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: ShapeEngine.Pathfinding.NodeValue.Valid*
  commentId: Overload:ShapeEngine.Pathfinding.NodeValue.Valid
  href: ShapeEngine.Pathfinding.NodeValue.html#ShapeEngine_Pathfinding_NodeValue_Valid
  name: Valid
  nameWithType: NodeValue.Valid
  fullName: ShapeEngine.Pathfinding.NodeValue.Valid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ShapeEngine.Pathfinding.NodeValue.#ctor*
  commentId: Overload:ShapeEngine.Pathfinding.NodeValue.#ctor
  href: ShapeEngine.Pathfinding.NodeValue.html#ShapeEngine_Pathfinding_NodeValue__ctor
  name: NodeValue
  nameWithType: NodeValue.NodeValue
  fullName: ShapeEngine.Pathfinding.NodeValue.NodeValue
  nameWithType.vb: NodeValue.New
  fullName.vb: ShapeEngine.Pathfinding.NodeValue.New
  name.vb: New
