### YamlMime:ManagedReference
items:
- uid: ShapeEngine.Core.Shapes.Segments
  commentId: T:ShapeEngine.Core.Shapes.Segments
  id: Segments
  parent: ShapeEngine.Core.Shapes
  children:
  - ShapeEngine.Core.Shapes.Segments.#ctor
  - ShapeEngine.Core.Shapes.Segments.#ctor(System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Segment})
  - ShapeEngine.Core.Shapes.Segments.#ctor(System.Int32)
  - ShapeEngine.Core.Shapes.Segments.ApplyOffset(ShapeEngine.Core.Structs.Transform2D,System.Single)
  - ShapeEngine.Core.Shapes.Segments.ApplyOffsetCopy(ShapeEngine.Core.Structs.Transform2D,System.Single)
  - ShapeEngine.Core.Shapes.Segments.ChangeLength(System.Single,System.Single)
  - ShapeEngine.Core.Shapes.Segments.ChangeLengthCopy(System.Single,System.Single)
  - ShapeEngine.Core.Shapes.Segments.ChangePosition(System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Segments.ChangePositionCopy(System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Segments.ChangeRotation(System.Single,System.Single)
  - ShapeEngine.Core.Shapes.Segments.ChangeRotationCopy(System.Single,System.Single)
  - ShapeEngine.Core.Shapes.Segments.ContainsSegment(ShapeEngine.Core.Shapes.Segment)
  - ShapeEngine.Core.Shapes.Segments.ContainsSegmentSimilar(ShapeEngine.Core.Shapes.Segment)
  - ShapeEngine.Core.Shapes.Segments.Equals(ShapeEngine.Core.Shapes.Segments)
  - ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Circle)
  - ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Line)
  - ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Polygon)
  - ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Polyline)
  - ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Quad)
  - ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Ray)
  - ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Rect)
  - ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Segment)
  - ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Segments)
  - ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Triangle)
  - ShapeEngine.Core.Shapes.Segments.GetClosestPoint(System.Numerics.Vector2,System.Single@)
  - ShapeEngine.Core.Shapes.Segments.GetClosestPoint(System.Numerics.Vector2,System.Single@,System.Int32@)
  - ShapeEngine.Core.Shapes.Segments.GetClosestPointSegmentsPoint(System.Collections.Generic.List{System.Numerics.Vector2},System.Numerics.Vector2,System.Single@)
  - ShapeEngine.Core.Shapes.Segments.GetClosestSegment(System.Numerics.Vector2,System.Single@)
  - ShapeEngine.Core.Shapes.Segments.GetClosestVertex(System.Numerics.Vector2,System.Single@,System.Int32@)
  - ShapeEngine.Core.Shapes.Segments.GetCount(ShapeEngine.Core.Shapes.Segment)
  - ShapeEngine.Core.Shapes.Segments.GetCountSimilar(ShapeEngine.Core.Shapes.Segment)
  - ShapeEngine.Core.Shapes.Segments.GetHashCode
  - ShapeEngine.Core.Shapes.Segments.GetRandomPoint
  - ShapeEngine.Core.Shapes.Segments.GetRandomPoints(System.Int32)
  - ShapeEngine.Core.Shapes.Segments.GetRandomSegment
  - ShapeEngine.Core.Shapes.Segments.GetSegment(System.Int32)
  - ShapeEngine.Core.Shapes.Segments.GetUniquePoints
  - ShapeEngine.Core.Shapes.Segments.GetUniqueSegments
  - ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Circle)
  - ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Circle,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  - ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Line)
  - ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Line,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  - ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Ray)
  - ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Ray,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  - ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Segment)
  - ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  - ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Segments)
  - ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Segments,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  - ShapeEngine.Core.Shapes.Segments.OverlapCircle(System.Numerics.Vector2,System.Single)
  - ShapeEngine.Core.Shapes.Segments.OverlapLine(System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Segments.OverlapPolygon(System.Collections.Generic.List{System.Numerics.Vector2})
  - ShapeEngine.Core.Shapes.Segments.OverlapPolyline(System.Collections.Generic.List{System.Numerics.Vector2})
  - ShapeEngine.Core.Shapes.Segments.OverlapQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Segments.OverlapRay(System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Segments.OverlapRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Segments.OverlapSegment(System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Segments.OverlapSegments(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment})
  - ShapeEngine.Core.Shapes.Segments.OverlapSegmentsCircle(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Single)
  - ShapeEngine.Core.Shapes.Segments.OverlapSegmentsLine(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Segments.OverlapSegmentsPolygon(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Collections.Generic.List{System.Numerics.Vector2})
  - ShapeEngine.Core.Shapes.Segments.OverlapSegmentsPolyline(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Collections.Generic.List{System.Numerics.Vector2})
  - ShapeEngine.Core.Shapes.Segments.OverlapSegmentsQuad(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Segments.OverlapSegmentsRay(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Segments.OverlapSegmentsRect(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Segments.OverlapSegmentsSegment(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Segments.OverlapSegmentsSegments(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment})
  - ShapeEngine.Core.Shapes.Segments.OverlapSegmentsTriangle(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Circle)
  - ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Line)
  - ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Polygon)
  - ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Polyline)
  - ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Quad)
  - ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Ray)
  - ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Rect)
  - ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Segment)
  - ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Segments)
  - ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Triangle)
  - ShapeEngine.Core.Shapes.Segments.OverlapTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Segments.ScaleLength(ShapeEngine.Core.Structs.Size,System.Single)
  - ShapeEngine.Core.Shapes.Segments.ScaleLength(System.Single,System.Single)
  - ShapeEngine.Core.Shapes.Segments.ScaleLengthCopy(ShapeEngine.Core.Structs.Size,System.Single)
  - ShapeEngine.Core.Shapes.Segments.ScaleLengthCopy(System.Single,System.Single)
  - ShapeEngine.Core.Shapes.Segments.SetLengthCopy(System.Single,System.Single)
  - ShapeEngine.Core.Shapes.Segments.SetPosition(System.Numerics.Vector2,System.Single)
  - ShapeEngine.Core.Shapes.Segments.SetPositionCopy(System.Numerics.Vector2,System.Single)
  - ShapeEngine.Core.Shapes.Segments.SetRotation(System.Single,System.Single)
  - ShapeEngine.Core.Shapes.Segments.SetRotationCopy(System.Single,System.Single)
  - ShapeEngine.Core.Shapes.Segments.SetSize(System.Single,System.Single)
  - ShapeEngine.Core.Shapes.Segments.SetTransform(ShapeEngine.Core.Structs.Transform2D,System.Single)
  - ShapeEngine.Core.Shapes.Segments.SetTransformCopy(ShapeEngine.Core.Structs.Transform2D,System.Single)
  langs:
  - csharp
  - vb
  name: Segments
  nameWithType: Segments
  fullName: ShapeEngine.Core.Shapes.Segments
  type: Class
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Segments
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 8
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: 'public class Segments : ShapeList<Segment>, IList<Segment>, ICollection<Segment>, IReadOnlyList<Segment>, IReadOnlyCollection<Segment>, IEnumerable<Segment>, IList, ICollection, IEnumerable'
    content.vb: Public Class Segments Inherits ShapeList(Of Segment) Implements IList(Of Segment), ICollection(Of Segment), IReadOnlyList(Of Segment), IReadOnlyCollection(Of Segment), IEnumerable(Of Segment), IList, ICollection, IEnumerable
  inheritance:
  - System.Object
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  - ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}
  implements:
  - System.Collections.Generic.IList{ShapeEngine.Core.Shapes.Segment}
  - System.Collections.Generic.ICollection{ShapeEngine.Core.Shapes.Segment}
  - System.Collections.Generic.IReadOnlyList{ShapeEngine.Core.Shapes.Segment}
  - System.Collections.Generic.IReadOnlyCollection{ShapeEngine.Core.Shapes.Segment}
  - System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Segment}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.AddRange(ShapeEngine.Core.Shapes.Segment[])
  - ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.Copy
  - ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.IsIndexValid(System.Int32)
  - ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetRandomItem
  - ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetRandomItems(System.Int32)
  - ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetItem(System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Add(ShapeEngine.Core.Shapes.Segment)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.AddRange(System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.AsReadOnly
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.BinarySearch(System.Int32,System.Int32,ShapeEngine.Core.Shapes.Segment,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.BinarySearch(ShapeEngine.Core.Shapes.Segment)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.BinarySearch(ShapeEngine.Core.Shapes.Segment,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Clear
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Contains(ShapeEngine.Core.Shapes.Segment)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.ConvertAll``1(System.Converter{ShapeEngine.Core.Shapes.Segment,{TOutput}})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.CopyTo(System.Int32,ShapeEngine.Core.Shapes.Segment[],System.Int32,System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.CopyTo(ShapeEngine.Core.Shapes.Segment[])
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.CopyTo(ShapeEngine.Core.Shapes.Segment[],System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.EnsureCapacity(System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Exists(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Find(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindAll(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindIndex(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLast(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLastIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLastIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLastIndex(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.ForEach(System.Action{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.GetEnumerator
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.GetRange(System.Int32,System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.IndexOf(ShapeEngine.Core.Shapes.Segment)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.IndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.IndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32,System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Insert(System.Int32,ShapeEngine.Core.Shapes.Segment)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.LastIndexOf(ShapeEngine.Core.Shapes.Segment)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.LastIndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.LastIndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32,System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Remove(ShapeEngine.Core.Shapes.Segment)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.RemoveAll(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.RemoveAt(System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.RemoveRange(System.Int32,System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Reverse
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Reverse(System.Int32,System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Slice(System.Int32,System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort(System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort(System.Comparison{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.ToArray
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.TrimExcess
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.TrueForAll(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Capacity
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Count
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Item(System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - ShapeEngine.Core.Shapes.Segments.ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Structs.LineDrawingInfo)
  - ShapeEngine.Core.Shapes.Segments.ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(System.Single,System.Collections.Generic.List{ShapeEngine.Color.ColorRgba},ShapeEngine.Core.Structs.LineCapType,System.Int32)
  - ShapeEngine.Core.Shapes.Segments.ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.DrawGlow(System.Single,System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Color.ColorRgba,System.Int32,ShapeEngine.Core.Structs.LineCapType,System.Int32)
- uid: ShapeEngine.Core.Shapes.Segments.#ctor
  commentId: M:ShapeEngine.Core.Shapes.Segments.#ctor
  id: '#ctor'
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: Segments()
  nameWithType: Segments.Segments()
  fullName: ShapeEngine.Core.Shapes.Segments.Segments()
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 11
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Segments()
    content.vb: Public Sub New()
  overload: ShapeEngine.Core.Shapes.Segments.#ctor*
  nameWithType.vb: Segments.New()
  fullName.vb: ShapeEngine.Core.Shapes.Segments.New()
  name.vb: New()
- uid: ShapeEngine.Core.Shapes.Segments.#ctor(System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.Segments.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: Segments(int)
  nameWithType: Segments.Segments(int)
  fullName: ShapeEngine.Core.Shapes.Segments.Segments(int)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 12
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Segments(int capacity)
    parameters:
    - id: capacity
      type: System.Int32
    content.vb: Public Sub New(capacity As Integer)
  overload: ShapeEngine.Core.Shapes.Segments.#ctor*
  nameWithType.vb: Segments.New(Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.New(Integer)
  name.vb: New(Integer)
- uid: ShapeEngine.Core.Shapes.Segments.#ctor(System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Segment})
  commentId: M:ShapeEngine.Core.Shapes.Segments.#ctor(System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Segment})
  id: '#ctor(System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Segment})'
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: Segments(IEnumerable<Segment>)
  nameWithType: Segments.Segments(IEnumerable<Segment>)
  fullName: ShapeEngine.Core.Shapes.Segments.Segments(System.Collections.Generic.IEnumerable<ShapeEngine.Core.Shapes.Segment>)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 14
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Segments(IEnumerable<Segment> edges)
    parameters:
    - id: edges
      type: System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Segment}
    content.vb: Public Sub New(edges As IEnumerable(Of Segment))
  overload: ShapeEngine.Core.Shapes.Segments.#ctor*
  nameWithType.vb: Segments.New(IEnumerable(Of Segment))
  fullName.vb: ShapeEngine.Core.Shapes.Segments.New(System.Collections.Generic.IEnumerable(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: New(IEnumerable(Of Segment))
- uid: ShapeEngine.Core.Shapes.Segments.Equals(ShapeEngine.Core.Shapes.Segments)
  commentId: M:ShapeEngine.Core.Shapes.Segments.Equals(ShapeEngine.Core.Shapes.Segments)
  id: Equals(ShapeEngine.Core.Shapes.Segments)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: Equals(Segments?)
  nameWithType: Segments.Equals(Segments?)
  fullName: ShapeEngine.Core.Shapes.Segments.Equals(ShapeEngine.Core.Shapes.Segments?)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Equals
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 18
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool Equals(Segments? other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Segments
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Segments) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.Equals*
  nameWithType.vb: Segments.Equals(Segments)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.Equals(ShapeEngine.Core.Shapes.Segments)
  name.vb: Equals(Segments)
- uid: ShapeEngine.Core.Shapes.Segments.GetHashCode
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetHashCode
  id: GetHashCode
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Segments.GetHashCode()
  fullName: ShapeEngine.Core.Shapes.Segments.GetHashCode()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetHashCode
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 28
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetHashCode
  overload: ShapeEngine.Core.Shapes.Segments.GetHashCode*
- uid: ShapeEngine.Core.Shapes.Segments.GetSegment(System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetSegment(System.Int32)
  id: GetSegment(System.Int32)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetSegment(int)
  nameWithType: Segments.GetSegment(int)
  fullName: ShapeEngine.Core.Shapes.Segments.GetSegment(int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetSegment
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 34
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Segment GetSegment(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: ShapeEngine.Core.Shapes.Segment
    content.vb: Public Function GetSegment(index As Integer) As Segment
  overload: ShapeEngine.Core.Shapes.Segments.GetSegment*
  nameWithType.vb: Segments.GetSegment(Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.GetSegment(Integer)
  name.vb: GetSegment(Integer)
- uid: ShapeEngine.Core.Shapes.Segments.GetUniquePoints
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetUniquePoints
  id: GetUniquePoints
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetUniquePoints()
  nameWithType: Segments.GetUniquePoints()
  fullName: ShapeEngine.Core.Shapes.Segments.GetUniquePoints()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetUniquePoints
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 42
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Points GetUniquePoints()
    return:
      type: ShapeEngine.Core.Shapes.Points
    content.vb: Public Function GetUniquePoints() As Points
  overload: ShapeEngine.Core.Shapes.Segments.GetUniquePoints*
- uid: ShapeEngine.Core.Shapes.Segments.GetUniqueSegments
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetUniqueSegments
  id: GetUniqueSegments
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetUniqueSegments()
  nameWithType: Segments.GetUniqueSegments()
  fullName: ShapeEngine.Core.Shapes.Segments.GetUniqueSegments()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetUniqueSegments
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 54
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Segments GetUniqueSegments()
    return:
      type: ShapeEngine.Core.Shapes.Segments
    content.vb: Public Function GetUniqueSegments() As Segments
  overload: ShapeEngine.Core.Shapes.Segments.GetUniqueSegments*
- uid: ShapeEngine.Core.Shapes.Segments.GetRandomSegment
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetRandomSegment
  id: GetRandomSegment
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetRandomSegment()
  nameWithType: Segments.GetRandomSegment()
  fullName: ShapeEngine.Core.Shapes.Segments.GetRandomSegment()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetRandomSegment
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 66
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Segment GetRandomSegment()
    return:
      type: ShapeEngine.Core.Shapes.Segment
    content.vb: Public Function GetRandomSegment() As Segment
  overload: ShapeEngine.Core.Shapes.Segments.GetRandomSegment*
- uid: ShapeEngine.Core.Shapes.Segments.GetRandomPoint
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetRandomPoint
  id: GetRandomPoint
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetRandomPoint()
  nameWithType: Segments.GetRandomPoint()
  fullName: ShapeEngine.Core.Shapes.Segments.GetRandomPoint()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetRandomPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 76
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Vector2 GetRandomPoint()
    return:
      type: System.Numerics.Vector2
    content.vb: Public Function GetRandomPoint() As Vector2
  overload: ShapeEngine.Core.Shapes.Segments.GetRandomPoint*
- uid: ShapeEngine.Core.Shapes.Segments.GetRandomPoints(System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetRandomPoints(System.Int32)
  id: GetRandomPoints(System.Int32)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetRandomPoints(int)
  nameWithType: Segments.GetRandomPoints(int)
  fullName: ShapeEngine.Core.Shapes.Segments.GetRandomPoints(int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetRandomPoints
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 77
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Points GetRandomPoints(int amount)
    parameters:
    - id: amount
      type: System.Int32
    return:
      type: ShapeEngine.Core.Shapes.Points
    content.vb: Public Function GetRandomPoints(amount As Integer) As Points
  overload: ShapeEngine.Core.Shapes.Segments.GetRandomPoints*
  nameWithType.vb: Segments.GetRandomPoints(Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.GetRandomPoints(Integer)
  name.vb: GetRandomPoints(Integer)
- uid: ShapeEngine.Core.Shapes.Segments.GetCount(ShapeEngine.Core.Shapes.Segment)
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetCount(ShapeEngine.Core.Shapes.Segment)
  id: GetCount(ShapeEngine.Core.Shapes.Segment)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetCount(Segment)
  nameWithType: Segments.GetCount(Segment)
  fullName: ShapeEngine.Core.Shapes.Segments.GetCount(ShapeEngine.Core.Shapes.Segment)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetCount
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 99
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Counts how often the specified segment appears in the list.
  example: []
  syntax:
    content: public int GetCount(Segment seg)
    parameters:
    - id: seg
      type: ShapeEngine.Core.Shapes.Segment
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function GetCount(seg As Segment) As Integer
  overload: ShapeEngine.Core.Shapes.Segments.GetCount*
- uid: ShapeEngine.Core.Shapes.Segments.GetCountSimilar(ShapeEngine.Core.Shapes.Segment)
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetCountSimilar(ShapeEngine.Core.Shapes.Segment)
  id: GetCountSimilar(ShapeEngine.Core.Shapes.Segment)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetCountSimilar(Segment)
  nameWithType: Segments.GetCountSimilar(Segment)
  fullName: ShapeEngine.Core.Shapes.Segments.GetCountSimilar(ShapeEngine.Core.Shapes.Segment)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetCountSimilar
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 106
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Counts how often the specified segment appears in the list disregarding the direction of each segment.
  example: []
  syntax:
    content: public int GetCountSimilar(Segment seg)
    parameters:
    - id: seg
      type: ShapeEngine.Core.Shapes.Segment
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function GetCountSimilar(seg As Segment) As Integer
  overload: ShapeEngine.Core.Shapes.Segments.GetCountSimilar*
- uid: ShapeEngine.Core.Shapes.Segments.ContainsSegment(ShapeEngine.Core.Shapes.Segment)
  commentId: M:ShapeEngine.Core.Shapes.Segments.ContainsSegment(ShapeEngine.Core.Shapes.Segment)
  id: ContainsSegment(ShapeEngine.Core.Shapes.Segment)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: ContainsSegment(Segment)
  nameWithType: Segments.ContainsSegment(Segment)
  fullName: ShapeEngine.Core.Shapes.Segments.ContainsSegment(ShapeEngine.Core.Shapes.Segment)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ContainsSegment
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 113
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: ''
  example: []
  syntax:
    content: public bool ContainsSegment(Segment seg)
    parameters:
    - id: seg
      type: ShapeEngine.Core.Shapes.Segment
      description: ''
    return:
      type: System.Boolean
      description: Returns true if seg is already in the list.
    content.vb: Public Function ContainsSegment(seg As Segment) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.ContainsSegment*
- uid: ShapeEngine.Core.Shapes.Segments.ContainsSegmentSimilar(ShapeEngine.Core.Shapes.Segment)
  commentId: M:ShapeEngine.Core.Shapes.Segments.ContainsSegmentSimilar(ShapeEngine.Core.Shapes.Segment)
  id: ContainsSegmentSimilar(ShapeEngine.Core.Shapes.Segment)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: ContainsSegmentSimilar(Segment)
  nameWithType: Segments.ContainsSegmentSimilar(Segment)
  fullName: ShapeEngine.Core.Shapes.Segments.ContainsSegmentSimilar(ShapeEngine.Core.Shapes.Segment)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ContainsSegmentSimilar
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 123
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: ''
  example: []
  syntax:
    content: public bool ContainsSegmentSimilar(Segment seg)
    parameters:
    - id: seg
      type: ShapeEngine.Core.Shapes.Segment
      description: ''
    return:
      type: System.Boolean
      description: Returns true if similar segment is already in the list.
    content.vb: Public Function ContainsSegmentSimilar(seg As Segment) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.ContainsSegmentSimilar*
- uid: ShapeEngine.Core.Shapes.Segments.ChangeRotation(System.Single,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.ChangeRotation(System.Single,System.Single)
  id: ChangeRotation(System.Single,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: ChangeRotation(float, float)
  nameWithType: Segments.ChangeRotation(float, float)
  fullName: ShapeEngine.Core.Shapes.Segments.ChangeRotation(float, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChangeRotation
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 133
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void ChangeRotation(float rad, float originF = 0.5)
    parameters:
    - id: rad
      type: System.Single
    - id: originF
      type: System.Single
    content.vb: Public Sub ChangeRotation(rad As Single, originF As Single = 0.5)
  overload: ShapeEngine.Core.Shapes.Segments.ChangeRotation*
  nameWithType.vb: Segments.ChangeRotation(Single, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.ChangeRotation(Single, Single)
  name.vb: ChangeRotation(Single, Single)
- uid: ShapeEngine.Core.Shapes.Segments.SetRotation(System.Single,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.SetRotation(System.Single,System.Single)
  id: SetRotation(System.Single,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: SetRotation(float, float)
  nameWithType: Segments.SetRotation(float, float)
  fullName: ShapeEngine.Core.Shapes.Segments.SetRotation(float, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetRotation
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 140
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void SetRotation(float rad, float originF = 0.5)
    parameters:
    - id: rad
      type: System.Single
    - id: originF
      type: System.Single
    content.vb: Public Sub SetRotation(rad As Single, originF As Single = 0.5)
  overload: ShapeEngine.Core.Shapes.Segments.SetRotation*
  nameWithType.vb: Segments.SetRotation(Single, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.SetRotation(Single, Single)
  name.vb: SetRotation(Single, Single)
- uid: ShapeEngine.Core.Shapes.Segments.ScaleLength(System.Single,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.ScaleLength(System.Single,System.Single)
  id: ScaleLength(System.Single,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: ScaleLength(float, float)
  nameWithType: Segments.ScaleLength(float, float)
  fullName: ShapeEngine.Core.Shapes.Segments.ScaleLength(float, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ScaleLength
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 148
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void ScaleLength(float scale, float originF = 0.5)
    parameters:
    - id: scale
      type: System.Single
    - id: originF
      type: System.Single
    content.vb: Public Sub ScaleLength(scale As Single, originF As Single = 0.5)
  overload: ShapeEngine.Core.Shapes.Segments.ScaleLength*
  nameWithType.vb: Segments.ScaleLength(Single, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.ScaleLength(Single, Single)
  name.vb: ScaleLength(Single, Single)
- uid: ShapeEngine.Core.Shapes.Segments.ScaleLength(ShapeEngine.Core.Structs.Size,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.ScaleLength(ShapeEngine.Core.Structs.Size,System.Single)
  id: ScaleLength(ShapeEngine.Core.Structs.Size,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: ScaleLength(Size, float)
  nameWithType: Segments.ScaleLength(Size, float)
  fullName: ShapeEngine.Core.Shapes.Segments.ScaleLength(ShapeEngine.Core.Structs.Size, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ScaleLength
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 155
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void ScaleLength(Size scale, float originF = 0.5)
    parameters:
    - id: scale
      type: ShapeEngine.Core.Structs.Size
    - id: originF
      type: System.Single
    content.vb: Public Sub ScaleLength(scale As Size, originF As Single = 0.5)
  overload: ShapeEngine.Core.Shapes.Segments.ScaleLength*
  nameWithType.vb: Segments.ScaleLength(Size, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.ScaleLength(ShapeEngine.Core.Structs.Size, Single)
  name.vb: ScaleLength(Size, Single)
- uid: ShapeEngine.Core.Shapes.Segments.ChangeLength(System.Single,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.ChangeLength(System.Single,System.Single)
  id: ChangeLength(System.Single,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: ChangeLength(float, float)
  nameWithType: Segments.ChangeLength(float, float)
  fullName: ShapeEngine.Core.Shapes.Segments.ChangeLength(float, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChangeLength
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 163
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void ChangeLength(float amount, float originF = 0.5)
    parameters:
    - id: amount
      type: System.Single
    - id: originF
      type: System.Single
    content.vb: Public Sub ChangeLength(amount As Single, originF As Single = 0.5)
  overload: ShapeEngine.Core.Shapes.Segments.ChangeLength*
  nameWithType.vb: Segments.ChangeLength(Single, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.ChangeLength(Single, Single)
  name.vb: ChangeLength(Single, Single)
- uid: ShapeEngine.Core.Shapes.Segments.SetSize(System.Single,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.SetSize(System.Single,System.Single)
  id: SetSize(System.Single,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: SetSize(float, float)
  nameWithType: Segments.SetSize(float, float)
  fullName: ShapeEngine.Core.Shapes.Segments.SetSize(float, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetSize
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 170
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void SetSize(float length, float originF = 0.5)
    parameters:
    - id: length
      type: System.Single
    - id: originF
      type: System.Single
    content.vb: Public Sub SetSize(length As Single, originF As Single = 0.5)
  overload: ShapeEngine.Core.Shapes.Segments.SetSize*
  nameWithType.vb: Segments.SetSize(Single, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.SetSize(Single, Single)
  name.vb: SetSize(Single, Single)
- uid: ShapeEngine.Core.Shapes.Segments.ChangePosition(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Segments.ChangePosition(System.Numerics.Vector2)
  id: ChangePosition(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: ChangePosition(Vector2)
  nameWithType: Segments.ChangePosition(Vector2)
  fullName: ShapeEngine.Core.Shapes.Segments.ChangePosition(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChangePosition
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 178
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void ChangePosition(Vector2 offset)
    parameters:
    - id: offset
      type: System.Numerics.Vector2
    content.vb: Public Sub ChangePosition(offset As Vector2)
  overload: ShapeEngine.Core.Shapes.Segments.ChangePosition*
- uid: ShapeEngine.Core.Shapes.Segments.SetPosition(System.Numerics.Vector2,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.SetPosition(System.Numerics.Vector2,System.Single)
  id: SetPosition(System.Numerics.Vector2,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: SetPosition(Vector2, float)
  nameWithType: Segments.SetPosition(Vector2, float)
  fullName: ShapeEngine.Core.Shapes.Segments.SetPosition(System.Numerics.Vector2, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetPosition
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 185
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void SetPosition(Vector2 position, float originF = 0.5)
    parameters:
    - id: position
      type: System.Numerics.Vector2
    - id: originF
      type: System.Single
    content.vb: Public Sub SetPosition(position As Vector2, originF As Single = 0.5)
  overload: ShapeEngine.Core.Shapes.Segments.SetPosition*
  nameWithType.vb: Segments.SetPosition(Vector2, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.SetPosition(System.Numerics.Vector2, Single)
  name.vb: SetPosition(Vector2, Single)
- uid: ShapeEngine.Core.Shapes.Segments.ApplyOffset(ShapeEngine.Core.Structs.Transform2D,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.ApplyOffset(ShapeEngine.Core.Structs.Transform2D,System.Single)
  id: ApplyOffset(ShapeEngine.Core.Structs.Transform2D,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: ApplyOffset(Transform2D, float)
  nameWithType: Segments.ApplyOffset(Transform2D, float)
  fullName: ShapeEngine.Core.Shapes.Segments.ApplyOffset(ShapeEngine.Core.Structs.Transform2D, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ApplyOffset
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 193
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void ApplyOffset(Transform2D offset, float originF = 0.5)
    parameters:
    - id: offset
      type: ShapeEngine.Core.Structs.Transform2D
    - id: originF
      type: System.Single
    content.vb: Public Sub ApplyOffset(offset As Transform2D, originF As Single = 0.5)
  overload: ShapeEngine.Core.Shapes.Segments.ApplyOffset*
  nameWithType.vb: Segments.ApplyOffset(Transform2D, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.ApplyOffset(ShapeEngine.Core.Structs.Transform2D, Single)
  name.vb: ApplyOffset(Transform2D, Single)
- uid: ShapeEngine.Core.Shapes.Segments.SetTransform(ShapeEngine.Core.Structs.Transform2D,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.SetTransform(ShapeEngine.Core.Structs.Transform2D,System.Single)
  id: SetTransform(ShapeEngine.Core.Structs.Transform2D,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: SetTransform(Transform2D, float)
  nameWithType: Segments.SetTransform(Transform2D, float)
  fullName: ShapeEngine.Core.Shapes.Segments.SetTransform(ShapeEngine.Core.Structs.Transform2D, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetTransform
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 200
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void SetTransform(Transform2D transform, float originF = 0.5)
    parameters:
    - id: transform
      type: ShapeEngine.Core.Structs.Transform2D
    - id: originF
      type: System.Single
    content.vb: Public Sub SetTransform(transform As Transform2D, originF As Single = 0.5)
  overload: ShapeEngine.Core.Shapes.Segments.SetTransform*
  nameWithType.vb: Segments.SetTransform(Transform2D, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.SetTransform(ShapeEngine.Core.Structs.Transform2D, Single)
  name.vb: SetTransform(Transform2D, Single)
- uid: ShapeEngine.Core.Shapes.Segments.ChangeRotationCopy(System.Single,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.ChangeRotationCopy(System.Single,System.Single)
  id: ChangeRotationCopy(System.Single,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: ChangeRotationCopy(float, float)
  nameWithType: Segments.ChangeRotationCopy(float, float)
  fullName: ShapeEngine.Core.Shapes.Segments.ChangeRotationCopy(float, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChangeRotationCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 210
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Segments ChangeRotationCopy(float rad, float originF = 0.5)
    parameters:
    - id: rad
      type: System.Single
    - id: originF
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Segments
    content.vb: Public Function ChangeRotationCopy(rad As Single, originF As Single = 0.5) As Segments
  overload: ShapeEngine.Core.Shapes.Segments.ChangeRotationCopy*
  nameWithType.vb: Segments.ChangeRotationCopy(Single, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.ChangeRotationCopy(Single, Single)
  name.vb: ChangeRotationCopy(Single, Single)
- uid: ShapeEngine.Core.Shapes.Segments.SetRotationCopy(System.Single,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.SetRotationCopy(System.Single,System.Single)
  id: SetRotationCopy(System.Single,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: SetRotationCopy(float, float)
  nameWithType: Segments.SetRotationCopy(float, float)
  fullName: ShapeEngine.Core.Shapes.Segments.SetRotationCopy(float, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetRotationCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 221
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Segments SetRotationCopy(float rad, float originF = 0.5)
    parameters:
    - id: rad
      type: System.Single
    - id: originF
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Segments
    content.vb: Public Function SetRotationCopy(rad As Single, originF As Single = 0.5) As Segments
  overload: ShapeEngine.Core.Shapes.Segments.SetRotationCopy*
  nameWithType.vb: Segments.SetRotationCopy(Single, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.SetRotationCopy(Single, Single)
  name.vb: SetRotationCopy(Single, Single)
- uid: ShapeEngine.Core.Shapes.Segments.ScaleLengthCopy(System.Single,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.ScaleLengthCopy(System.Single,System.Single)
  id: ScaleLengthCopy(System.Single,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: ScaleLengthCopy(float, float)
  nameWithType: Segments.ScaleLengthCopy(float, float)
  fullName: ShapeEngine.Core.Shapes.Segments.ScaleLengthCopy(float, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ScaleLengthCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 232
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Segments ScaleLengthCopy(float scale, float originF = 0.5)
    parameters:
    - id: scale
      type: System.Single
    - id: originF
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Segments
    content.vb: Public Function ScaleLengthCopy(scale As Single, originF As Single = 0.5) As Segments
  overload: ShapeEngine.Core.Shapes.Segments.ScaleLengthCopy*
  nameWithType.vb: Segments.ScaleLengthCopy(Single, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.ScaleLengthCopy(Single, Single)
  name.vb: ScaleLengthCopy(Single, Single)
- uid: ShapeEngine.Core.Shapes.Segments.ScaleLengthCopy(ShapeEngine.Core.Structs.Size,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.ScaleLengthCopy(ShapeEngine.Core.Structs.Size,System.Single)
  id: ScaleLengthCopy(ShapeEngine.Core.Structs.Size,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: ScaleLengthCopy(Size, float)
  nameWithType: Segments.ScaleLengthCopy(Size, float)
  fullName: ShapeEngine.Core.Shapes.Segments.ScaleLengthCopy(ShapeEngine.Core.Structs.Size, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ScaleLengthCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 242
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Segments ScaleLengthCopy(Size scale, float originF = 0.5)
    parameters:
    - id: scale
      type: ShapeEngine.Core.Structs.Size
    - id: originF
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Segments
    content.vb: Public Function ScaleLengthCopy(scale As Size, originF As Single = 0.5) As Segments
  overload: ShapeEngine.Core.Shapes.Segments.ScaleLengthCopy*
  nameWithType.vb: Segments.ScaleLengthCopy(Size, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.ScaleLengthCopy(ShapeEngine.Core.Structs.Size, Single)
  name.vb: ScaleLengthCopy(Size, Single)
- uid: ShapeEngine.Core.Shapes.Segments.ChangeLengthCopy(System.Single,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.ChangeLengthCopy(System.Single,System.Single)
  id: ChangeLengthCopy(System.Single,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: ChangeLengthCopy(float, float)
  nameWithType: Segments.ChangeLengthCopy(float, float)
  fullName: ShapeEngine.Core.Shapes.Segments.ChangeLengthCopy(float, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChangeLengthCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 253
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Segments ChangeLengthCopy(float amount, float originF = 0.5)
    parameters:
    - id: amount
      type: System.Single
    - id: originF
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Segments
    content.vb: Public Function ChangeLengthCopy(amount As Single, originF As Single = 0.5) As Segments
  overload: ShapeEngine.Core.Shapes.Segments.ChangeLengthCopy*
  nameWithType.vb: Segments.ChangeLengthCopy(Single, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.ChangeLengthCopy(Single, Single)
  name.vb: ChangeLengthCopy(Single, Single)
- uid: ShapeEngine.Core.Shapes.Segments.SetLengthCopy(System.Single,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.SetLengthCopy(System.Single,System.Single)
  id: SetLengthCopy(System.Single,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: SetLengthCopy(float, float)
  nameWithType: Segments.SetLengthCopy(float, float)
  fullName: ShapeEngine.Core.Shapes.Segments.SetLengthCopy(float, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetLengthCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 264
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Segments SetLengthCopy(float size, float originF = 0.5)
    parameters:
    - id: size
      type: System.Single
    - id: originF
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Segments
    content.vb: Public Function SetLengthCopy(size As Single, originF As Single = 0.5) As Segments
  overload: ShapeEngine.Core.Shapes.Segments.SetLengthCopy*
  nameWithType.vb: Segments.SetLengthCopy(Single, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.SetLengthCopy(Single, Single)
  name.vb: SetLengthCopy(Single, Single)
- uid: ShapeEngine.Core.Shapes.Segments.ChangePositionCopy(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Segments.ChangePositionCopy(System.Numerics.Vector2)
  id: ChangePositionCopy(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: ChangePositionCopy(Vector2)
  nameWithType: Segments.ChangePositionCopy(Vector2)
  fullName: ShapeEngine.Core.Shapes.Segments.ChangePositionCopy(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChangePositionCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 275
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Segments ChangePositionCopy(Vector2 offset)
    parameters:
    - id: offset
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Shapes.Segments
    content.vb: Public Function ChangePositionCopy(offset As Vector2) As Segments
  overload: ShapeEngine.Core.Shapes.Segments.ChangePositionCopy*
- uid: ShapeEngine.Core.Shapes.Segments.SetPositionCopy(System.Numerics.Vector2,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.SetPositionCopy(System.Numerics.Vector2,System.Single)
  id: SetPositionCopy(System.Numerics.Vector2,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: SetPositionCopy(Vector2, float)
  nameWithType: Segments.SetPositionCopy(Vector2, float)
  fullName: ShapeEngine.Core.Shapes.Segments.SetPositionCopy(System.Numerics.Vector2, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetPositionCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 285
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Segments SetPositionCopy(Vector2 position, float originF = 0.5)
    parameters:
    - id: position
      type: System.Numerics.Vector2
    - id: originF
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Segments
    content.vb: Public Function SetPositionCopy(position As Vector2, originF As Single = 0.5) As Segments
  overload: ShapeEngine.Core.Shapes.Segments.SetPositionCopy*
  nameWithType.vb: Segments.SetPositionCopy(Vector2, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.SetPositionCopy(System.Numerics.Vector2, Single)
  name.vb: SetPositionCopy(Vector2, Single)
- uid: ShapeEngine.Core.Shapes.Segments.ApplyOffsetCopy(ShapeEngine.Core.Structs.Transform2D,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.ApplyOffsetCopy(ShapeEngine.Core.Structs.Transform2D,System.Single)
  id: ApplyOffsetCopy(ShapeEngine.Core.Structs.Transform2D,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: ApplyOffsetCopy(Transform2D, float)
  nameWithType: Segments.ApplyOffsetCopy(Transform2D, float)
  fullName: ShapeEngine.Core.Shapes.Segments.ApplyOffsetCopy(ShapeEngine.Core.Structs.Transform2D, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ApplyOffsetCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 296
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Segments ApplyOffsetCopy(Transform2D offset, float originF = 0.5)
    parameters:
    - id: offset
      type: ShapeEngine.Core.Structs.Transform2D
    - id: originF
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Segments
    content.vb: Public Function ApplyOffsetCopy(offset As Transform2D, originF As Single = 0.5) As Segments
  overload: ShapeEngine.Core.Shapes.Segments.ApplyOffsetCopy*
  nameWithType.vb: Segments.ApplyOffsetCopy(Transform2D, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.ApplyOffsetCopy(ShapeEngine.Core.Structs.Transform2D, Single)
  name.vb: ApplyOffsetCopy(Transform2D, Single)
- uid: ShapeEngine.Core.Shapes.Segments.SetTransformCopy(ShapeEngine.Core.Structs.Transform2D,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.SetTransformCopy(ShapeEngine.Core.Structs.Transform2D,System.Single)
  id: SetTransformCopy(ShapeEngine.Core.Structs.Transform2D,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: SetTransformCopy(Transform2D, float)
  nameWithType: Segments.SetTransformCopy(Transform2D, float)
  fullName: ShapeEngine.Core.Shapes.Segments.SetTransformCopy(ShapeEngine.Core.Structs.Transform2D, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetTransformCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 306
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Segments SetTransformCopy(Transform2D transform, float originF = 0.5)
    parameters:
    - id: transform
      type: ShapeEngine.Core.Structs.Transform2D
    - id: originF
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Segments
    content.vb: Public Function SetTransformCopy(transform As Transform2D, originF As Single = 0.5) As Segments
  overload: ShapeEngine.Core.Shapes.Segments.SetTransformCopy*
  nameWithType.vb: Segments.SetTransformCopy(Transform2D, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.SetTransformCopy(ShapeEngine.Core.Structs.Transform2D, Single)
  name.vb: SetTransformCopy(Transform2D, Single)
- uid: ShapeEngine.Core.Shapes.Segments.GetClosestPointSegmentsPoint(System.Collections.Generic.List{System.Numerics.Vector2},System.Numerics.Vector2,System.Single@)
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetClosestPointSegmentsPoint(System.Collections.Generic.List{System.Numerics.Vector2},System.Numerics.Vector2,System.Single@)
  id: GetClosestPointSegmentsPoint(System.Collections.Generic.List{System.Numerics.Vector2},System.Numerics.Vector2,System.Single@)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetClosestPointSegmentsPoint(List<Vector2>, Vector2, out float)
  nameWithType: Segments.GetClosestPointSegmentsPoint(List<Vector2>, Vector2, out float)
  fullName: ShapeEngine.Core.Shapes.Segments.GetClosestPointSegmentsPoint(System.Collections.Generic.List<System.Numerics.Vector2>, System.Numerics.Vector2, out float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPointSegmentsPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 321
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static Vector2 GetClosestPointSegmentsPoint(List<Vector2> points, Vector2 p, out float disSquared)
    parameters:
    - id: points
      type: System.Collections.Generic.List{System.Numerics.Vector2}
    - id: p
      type: System.Numerics.Vector2
    - id: disSquared
      type: System.Single
    return:
      type: System.Numerics.Vector2
    content.vb: Public Shared Function GetClosestPointSegmentsPoint(points As List(Of Vector2), p As Vector2, disSquared As Single) As Vector2
  overload: ShapeEngine.Core.Shapes.Segments.GetClosestPointSegmentsPoint*
  nameWithType.vb: Segments.GetClosestPointSegmentsPoint(List(Of Vector2), Vector2, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.GetClosestPointSegmentsPoint(System.Collections.Generic.List(Of System.Numerics.Vector2), System.Numerics.Vector2, Single)
  name.vb: GetClosestPointSegmentsPoint(List(Of Vector2), Vector2, Single)
- uid: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(System.Numerics.Vector2,System.Single@)
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetClosestPoint(System.Numerics.Vector2,System.Single@)
  id: GetClosestPoint(System.Numerics.Vector2,System.Single@)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Vector2, out float)
  nameWithType: Segments.GetClosestPoint(Vector2, out float)
  fullName: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(System.Numerics.Vector2, out float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 346
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoint GetClosestPoint(Vector2 p, out float disSquared)
    parameters:
    - id: p
      type: System.Numerics.Vector2
    - id: disSquared
      type: System.Single
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Function GetClosestPoint(p As Vector2, disSquared As Single) As CollisionPoint
  overload: ShapeEngine.Core.Shapes.Segments.GetClosestPoint*
  nameWithType.vb: Segments.GetClosestPoint(Vector2, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(System.Numerics.Vector2, Single)
  name.vb: GetClosestPoint(Vector2, Single)
- uid: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(System.Numerics.Vector2,System.Single@,System.Int32@)
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetClosestPoint(System.Numerics.Vector2,System.Single@,System.Int32@)
  id: GetClosestPoint(System.Numerics.Vector2,System.Single@,System.Int32@)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Vector2, out float, out int)
  nameWithType: Segments.GetClosestPoint(Vector2, out float, out int)
  fullName: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(System.Numerics.Vector2, out float, out int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 370
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoint GetClosestPoint(Vector2 p, out float disSquared, out int index)
    parameters:
    - id: p
      type: System.Numerics.Vector2
    - id: disSquared
      type: System.Single
    - id: index
      type: System.Int32
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Function GetClosestPoint(p As Vector2, disSquared As Single, index As Integer) As CollisionPoint
  overload: ShapeEngine.Core.Shapes.Segments.GetClosestPoint*
  nameWithType.vb: Segments.GetClosestPoint(Vector2, Single, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(System.Numerics.Vector2, Single, Integer)
  name.vb: GetClosestPoint(Vector2, Single, Integer)
- uid: ShapeEngine.Core.Shapes.Segments.GetClosestVertex(System.Numerics.Vector2,System.Single@,System.Int32@)
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetClosestVertex(System.Numerics.Vector2,System.Single@,System.Int32@)
  id: GetClosestVertex(System.Numerics.Vector2,System.Single@,System.Int32@)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetClosestVertex(Vector2, out float, out int)
  nameWithType: Segments.GetClosestVertex(Vector2, out float, out int)
  fullName: ShapeEngine.Core.Shapes.Segments.GetClosestVertex(System.Numerics.Vector2, out float, out int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestVertex
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 396
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Vector2 GetClosestVertex(Vector2 p, out float disSquared, out int index)
    parameters:
    - id: p
      type: System.Numerics.Vector2
    - id: disSquared
      type: System.Single
    - id: index
      type: System.Int32
    return:
      type: System.Numerics.Vector2
    content.vb: Public Function GetClosestVertex(p As Vector2, disSquared As Single, index As Integer) As Vector2
  overload: ShapeEngine.Core.Shapes.Segments.GetClosestVertex*
  nameWithType.vb: Segments.GetClosestVertex(Vector2, Single, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.GetClosestVertex(System.Numerics.Vector2, Single, Integer)
  name.vb: GetClosestVertex(Vector2, Single, Integer)
- uid: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Line)
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Line)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Line)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Line)
  nameWithType: Segments.GetClosestPoint(Line)
  fullName: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Line)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 436
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Line other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Line
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Line) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Segments.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Ray)
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Ray)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Ray)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Ray)
  nameWithType: Segments.GetClosestPoint(Ray)
  fullName: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Ray)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 464
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Ray other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Ray
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Ray) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Segments.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Segment)
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Segment)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Segment)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Segment)
  nameWithType: Segments.GetClosestPoint(Segment)
  fullName: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Segment)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 493
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Segment other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Segment
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Segment) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Segments.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Circle)
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Circle)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Circle)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Circle)
  nameWithType: Segments.GetClosestPoint(Circle)
  fullName: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Circle)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 522
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Circle other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Circle
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Circle) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Segments.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Triangle)
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Triangle)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Triangle)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Triangle)
  nameWithType: Segments.GetClosestPoint(Triangle)
  fullName: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Triangle)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 551
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Triangle other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Triangle
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Triangle) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Segments.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Quad)
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Quad)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Quad)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Quad)
  nameWithType: Segments.GetClosestPoint(Quad)
  fullName: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Quad)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 608
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Quad other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Quad
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Quad) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Segments.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Rect)
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Rect)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Rect)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Rect)
  nameWithType: Segments.GetClosestPoint(Rect)
  fullName: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Rect)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 676
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Rect other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Rect
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Rect) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Segments.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Polygon)
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Polygon)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Polygon)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Polygon)
  nameWithType: Segments.GetClosestPoint(Polygon)
  fullName: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Polygon)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 744
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Polygon other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Polygon
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Polygon) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Segments.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Polyline)
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Polyline)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Polyline)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Polyline)
  nameWithType: Segments.GetClosestPoint(Polyline)
  fullName: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Polyline)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 784
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Polyline other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Polyline
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Polyline) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Segments.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Segments)
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Segments)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Segments)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Segments)
  nameWithType: Segments.GetClosestPoint(Segments)
  fullName: ShapeEngine.Core.Shapes.Segments.GetClosestPoint(ShapeEngine.Core.Shapes.Segments)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 824
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Segments other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Segments
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Segments) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Segments.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Segments.GetClosestSegment(System.Numerics.Vector2,System.Single@)
  commentId: M:ShapeEngine.Core.Shapes.Segments.GetClosestSegment(System.Numerics.Vector2,System.Single@)
  id: GetClosestSegment(System.Numerics.Vector2,System.Single@)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: GetClosestSegment(Vector2, out float)
  nameWithType: Segments.GetClosestSegment(Vector2, out float)
  fullName: ShapeEngine.Core.Shapes.Segments.GetClosestSegment(System.Numerics.Vector2, out float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestSegment
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 864
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public (Segment segment, CollisionPoint segmentPoint) GetClosestSegment(Vector2 p, out float disSquared)
    parameters:
    - id: p
      type: System.Numerics.Vector2
    - id: disSquared
      type: System.Single
    return:
      type: System.ValueTuple{ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.Structs.CollisionPoint}
    content.vb: Public Function GetClosestSegment(p As Vector2, disSquared As Single) As (segment As Segment, segmentPoint As CollisionPoint)
  overload: ShapeEngine.Core.Shapes.Segments.GetClosestSegment*
  nameWithType.vb: Segments.GetClosestSegment(Vector2, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.GetClosestSegment(System.Numerics.Vector2, Single)
  name.vb: GetClosestSegment(Vector2, Single)
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsSegment(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsSegment(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapSegmentsSegment(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapSegmentsSegment(List<Segment>, Vector2, Vector2)
  nameWithType: Segments.OverlapSegmentsSegment(List<Segment>, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsSegment(System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapSegmentsSegment
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 892
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapSegmentsSegment(List<Segment> segments, Vector2 segmentStart, Vector2 segmentEnd)
    parameters:
    - id: segments
      type: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
    - id: segmentStart
      type: System.Numerics.Vector2
    - id: segmentEnd
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapSegmentsSegment(segments As List(Of Segment), segmentStart As Vector2, segmentEnd As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsSegment*
  nameWithType.vb: Segments.OverlapSegmentsSegment(List(Of Segment), Vector2, Vector2)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsSegment(System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment), System.Numerics.Vector2, System.Numerics.Vector2)
  name.vb: OverlapSegmentsSegment(List(Of Segment), Vector2, Vector2)
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsLine(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsLine(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapSegmentsLine(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapSegmentsLine(List<Segment>, Vector2, Vector2)
  nameWithType: Segments.OverlapSegmentsLine(List<Segment>, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsLine(System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapSegmentsLine
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 896
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapSegmentsLine(List<Segment> segments, Vector2 linePoint, Vector2 lineDirection)
    parameters:
    - id: segments
      type: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
    - id: linePoint
      type: System.Numerics.Vector2
    - id: lineDirection
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapSegmentsLine(segments As List(Of Segment), linePoint As Vector2, lineDirection As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsLine*
  nameWithType.vb: Segments.OverlapSegmentsLine(List(Of Segment), Vector2, Vector2)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsLine(System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment), System.Numerics.Vector2, System.Numerics.Vector2)
  name.vb: OverlapSegmentsLine(List(Of Segment), Vector2, Vector2)
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsRay(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsRay(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapSegmentsRay(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapSegmentsRay(List<Segment>, Vector2, Vector2)
  nameWithType: Segments.OverlapSegmentsRay(List<Segment>, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsRay(System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapSegmentsRay
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 900
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapSegmentsRay(List<Segment> segments, Vector2 rayPoint, Vector2 rayDirection)
    parameters:
    - id: segments
      type: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapSegmentsRay(segments As List(Of Segment), rayPoint As Vector2, rayDirection As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsRay*
  nameWithType.vb: Segments.OverlapSegmentsRay(List(Of Segment), Vector2, Vector2)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsRay(System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment), System.Numerics.Vector2, System.Numerics.Vector2)
  name.vb: OverlapSegmentsRay(List(Of Segment), Vector2, Vector2)
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsCircle(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsCircle(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Single)
  id: OverlapSegmentsCircle(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapSegmentsCircle(List<Segment>, Vector2, float)
  nameWithType: Segments.OverlapSegmentsCircle(List<Segment>, Vector2, float)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsCircle(System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>, System.Numerics.Vector2, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapSegmentsCircle
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 904
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapSegmentsCircle(List<Segment> segments, Vector2 circleCenter, float circleRadius)
    parameters:
    - id: segments
      type: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
    - id: circleCenter
      type: System.Numerics.Vector2
    - id: circleRadius
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapSegmentsCircle(segments As List(Of Segment), circleCenter As Vector2, circleRadius As Single) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsCircle*
  nameWithType.vb: Segments.OverlapSegmentsCircle(List(Of Segment), Vector2, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsCircle(System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment), System.Numerics.Vector2, Single)
  name.vb: OverlapSegmentsCircle(List(Of Segment), Vector2, Single)
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsTriangle(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsTriangle(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapSegmentsTriangle(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapSegmentsTriangle(List<Segment>, Vector2, Vector2, Vector2)
  nameWithType: Segments.OverlapSegmentsTriangle(List<Segment>, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsTriangle(System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapSegmentsTriangle
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 908
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapSegmentsTriangle(List<Segment> segments, Vector2 ta, Vector2 tb, Vector2 tc)
    parameters:
    - id: segments
      type: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
    - id: ta
      type: System.Numerics.Vector2
    - id: tb
      type: System.Numerics.Vector2
    - id: tc
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapSegmentsTriangle(segments As List(Of Segment), ta As Vector2, tb As Vector2, tc As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsTriangle*
  nameWithType.vb: Segments.OverlapSegmentsTriangle(List(Of Segment), Vector2, Vector2, Vector2)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsTriangle(System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment), System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  name.vb: OverlapSegmentsTriangle(List(Of Segment), Vector2, Vector2, Vector2)
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsQuad(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsQuad(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapSegmentsQuad(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapSegmentsQuad(List<Segment>, Vector2, Vector2, Vector2, Vector2)
  nameWithType: Segments.OverlapSegmentsQuad(List<Segment>, Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsQuad(System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapSegmentsQuad
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 913
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapSegmentsQuad(List<Segment> segments, Vector2 qa, Vector2 qb, Vector2 qc, Vector2 qd)
    parameters:
    - id: segments
      type: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
    - id: qa
      type: System.Numerics.Vector2
    - id: qb
      type: System.Numerics.Vector2
    - id: qc
      type: System.Numerics.Vector2
    - id: qd
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapSegmentsQuad(segments As List(Of Segment), qa As Vector2, qb As Vector2, qc As Vector2, qd As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsQuad*
  nameWithType.vb: Segments.OverlapSegmentsQuad(List(Of Segment), Vector2, Vector2, Vector2, Vector2)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsQuad(System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment), System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  name.vb: OverlapSegmentsQuad(List(Of Segment), Vector2, Vector2, Vector2, Vector2)
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsRect(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsRect(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapSegmentsRect(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapSegmentsRect(List<Segment>, Vector2, Vector2, Vector2, Vector2)
  nameWithType: Segments.OverlapSegmentsRect(List<Segment>, Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsRect(System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapSegmentsRect
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 917
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapSegmentsRect(List<Segment> segments, Vector2 ra, Vector2 rb, Vector2 rc, Vector2 rd)
    parameters:
    - id: segments
      type: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
    - id: ra
      type: System.Numerics.Vector2
    - id: rb
      type: System.Numerics.Vector2
    - id: rc
      type: System.Numerics.Vector2
    - id: rd
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapSegmentsRect(segments As List(Of Segment), ra As Vector2, rb As Vector2, rc As Vector2, rd As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsRect*
  nameWithType.vb: Segments.OverlapSegmentsRect(List(Of Segment), Vector2, Vector2, Vector2, Vector2)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsRect(System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment), System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  name.vb: OverlapSegmentsRect(List(Of Segment), Vector2, Vector2, Vector2, Vector2)
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsPolygon(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Collections.Generic.List{System.Numerics.Vector2})
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsPolygon(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Collections.Generic.List{System.Numerics.Vector2})
  id: OverlapSegmentsPolygon(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Collections.Generic.List{System.Numerics.Vector2})
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapSegmentsPolygon(List<Segment>, List<Vector2>)
  nameWithType: Segments.OverlapSegmentsPolygon(List<Segment>, List<Vector2>)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsPolygon(System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>, System.Collections.Generic.List<System.Numerics.Vector2>)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapSegmentsPolygon
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 921
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapSegmentsPolygon(List<Segment> segments, List<Vector2> points)
    parameters:
    - id: segments
      type: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
    - id: points
      type: System.Collections.Generic.List{System.Numerics.Vector2}
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapSegmentsPolygon(segments As List(Of Segment), points As List(Of Vector2)) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsPolygon*
  nameWithType.vb: Segments.OverlapSegmentsPolygon(List(Of Segment), List(Of Vector2))
  fullName.vb: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsPolygon(System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment), System.Collections.Generic.List(Of System.Numerics.Vector2))
  name.vb: OverlapSegmentsPolygon(List(Of Segment), List(Of Vector2))
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsPolyline(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Collections.Generic.List{System.Numerics.Vector2})
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsPolyline(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Collections.Generic.List{System.Numerics.Vector2})
  id: OverlapSegmentsPolyline(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Collections.Generic.List{System.Numerics.Vector2})
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapSegmentsPolyline(List<Segment>, List<Vector2>)
  nameWithType: Segments.OverlapSegmentsPolyline(List<Segment>, List<Vector2>)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsPolyline(System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>, System.Collections.Generic.List<System.Numerics.Vector2>)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapSegmentsPolyline
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 925
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapSegmentsPolyline(List<Segment> segments, List<Vector2> points)
    parameters:
    - id: segments
      type: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
    - id: points
      type: System.Collections.Generic.List{System.Numerics.Vector2}
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapSegmentsPolyline(segments As List(Of Segment), points As List(Of Vector2)) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsPolyline*
  nameWithType.vb: Segments.OverlapSegmentsPolyline(List(Of Segment), List(Of Vector2))
  fullName.vb: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsPolyline(System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment), System.Collections.Generic.List(Of System.Numerics.Vector2))
  name.vb: OverlapSegmentsPolyline(List(Of Segment), List(Of Vector2))
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsSegments(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment})
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsSegments(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment})
  id: OverlapSegmentsSegments(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment})
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapSegmentsSegments(List<Segment>, List<Segment>)
  nameWithType: Segments.OverlapSegmentsSegments(List<Segment>, List<Segment>)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsSegments(System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>, System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapSegmentsSegments
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 929
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapSegmentsSegments(List<Segment> segments1, List<Segment> segments2)
    parameters:
    - id: segments1
      type: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
    - id: segments2
      type: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapSegmentsSegments(segments1 As List(Of Segment), segments2 As List(Of Segment)) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsSegments*
  nameWithType.vb: Segments.OverlapSegmentsSegments(List(Of Segment), List(Of Segment))
  fullName.vb: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsSegments(System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment), System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: OverlapSegmentsSegments(List(Of Segment), List(Of Segment))
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegment(System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapSegment(System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapSegment(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapSegment(Vector2, Vector2)
  nameWithType: Segments.OverlapSegment(Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegment(System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapSegment
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 942
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapSegment(Vector2 segmentStart, Vector2 segmentEnd)
    parameters:
    - id: segmentStart
      type: System.Numerics.Vector2
    - id: segmentEnd
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function OverlapSegment(segmentStart As Vector2, segmentEnd As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapSegment*
- uid: ShapeEngine.Core.Shapes.Segments.OverlapLine(System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapLine(System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapLine(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapLine(Vector2, Vector2)
  nameWithType: Segments.OverlapLine(Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapLine(System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapLine
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 943
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapLine(Vector2 linePoint, Vector2 lineDirection)
    parameters:
    - id: linePoint
      type: System.Numerics.Vector2
    - id: lineDirection
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function OverlapLine(linePoint As Vector2, lineDirection As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapLine*
- uid: ShapeEngine.Core.Shapes.Segments.OverlapRay(System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapRay(System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapRay(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapRay(Vector2, Vector2)
  nameWithType: Segments.OverlapRay(Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapRay(System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapRay
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 944
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapRay(Vector2 rayPoint, Vector2 rayDirection)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function OverlapRay(rayPoint As Vector2, rayDirection As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapRay*
- uid: ShapeEngine.Core.Shapes.Segments.OverlapCircle(System.Numerics.Vector2,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapCircle(System.Numerics.Vector2,System.Single)
  id: OverlapCircle(System.Numerics.Vector2,System.Single)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapCircle(Vector2, float)
  nameWithType: Segments.OverlapCircle(Vector2, float)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapCircle(System.Numerics.Vector2, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapCircle
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 945
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapCircle(Vector2 circleCenter, float circleRadius)
    parameters:
    - id: circleCenter
      type: System.Numerics.Vector2
    - id: circleRadius
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function OverlapCircle(circleCenter As Vector2, circleRadius As Single) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapCircle*
  nameWithType.vb: Segments.OverlapCircle(Vector2, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.OverlapCircle(System.Numerics.Vector2, Single)
  name.vb: OverlapCircle(Vector2, Single)
- uid: ShapeEngine.Core.Shapes.Segments.OverlapTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapTriangle(Vector2, Vector2, Vector2)
  nameWithType: Segments.OverlapTriangle(Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapTriangle(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapTriangle
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 946
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapTriangle(Vector2 a, Vector2 b, Vector2 c)
    parameters:
    - id: a
      type: System.Numerics.Vector2
    - id: b
      type: System.Numerics.Vector2
    - id: c
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function OverlapTriangle(a As Vector2, b As Vector2, c As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapTriangle*
- uid: ShapeEngine.Core.Shapes.Segments.OverlapQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapQuad(Vector2, Vector2, Vector2, Vector2)
  nameWithType: Segments.OverlapQuad(Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapQuad(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapQuad
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 947
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapQuad(Vector2 a, Vector2 b, Vector2 c, Vector2 d)
    parameters:
    - id: a
      type: System.Numerics.Vector2
    - id: b
      type: System.Numerics.Vector2
    - id: c
      type: System.Numerics.Vector2
    - id: d
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function OverlapQuad(a As Vector2, b As Vector2, c As Vector2, d As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapQuad*
- uid: ShapeEngine.Core.Shapes.Segments.OverlapRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapRect(Vector2, Vector2, Vector2, Vector2)
  nameWithType: Segments.OverlapRect(Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapRect(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapRect
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 948
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapRect(Vector2 a, Vector2 b, Vector2 c, Vector2 d)
    parameters:
    - id: a
      type: System.Numerics.Vector2
    - id: b
      type: System.Numerics.Vector2
    - id: c
      type: System.Numerics.Vector2
    - id: d
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function OverlapRect(a As Vector2, b As Vector2, c As Vector2, d As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapRect*
- uid: ShapeEngine.Core.Shapes.Segments.OverlapPolygon(System.Collections.Generic.List{System.Numerics.Vector2})
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapPolygon(System.Collections.Generic.List{System.Numerics.Vector2})
  id: OverlapPolygon(System.Collections.Generic.List{System.Numerics.Vector2})
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapPolygon(List<Vector2>)
  nameWithType: Segments.OverlapPolygon(List<Vector2>)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapPolygon(System.Collections.Generic.List<System.Numerics.Vector2>)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapPolygon
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 949
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapPolygon(List<Vector2> points)
    parameters:
    - id: points
      type: System.Collections.Generic.List{System.Numerics.Vector2}
    return:
      type: System.Boolean
    content.vb: Public Function OverlapPolygon(points As List(Of Vector2)) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapPolygon*
  nameWithType.vb: Segments.OverlapPolygon(List(Of Vector2))
  fullName.vb: ShapeEngine.Core.Shapes.Segments.OverlapPolygon(System.Collections.Generic.List(Of System.Numerics.Vector2))
  name.vb: OverlapPolygon(List(Of Vector2))
- uid: ShapeEngine.Core.Shapes.Segments.OverlapPolyline(System.Collections.Generic.List{System.Numerics.Vector2})
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapPolyline(System.Collections.Generic.List{System.Numerics.Vector2})
  id: OverlapPolyline(System.Collections.Generic.List{System.Numerics.Vector2})
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapPolyline(List<Vector2>)
  nameWithType: Segments.OverlapPolyline(List<Vector2>)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapPolyline(System.Collections.Generic.List<System.Numerics.Vector2>)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapPolyline
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 950
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapPolyline(List<Vector2> points)
    parameters:
    - id: points
      type: System.Collections.Generic.List{System.Numerics.Vector2}
    return:
      type: System.Boolean
    content.vb: Public Function OverlapPolyline(points As List(Of Vector2)) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapPolyline*
  nameWithType.vb: Segments.OverlapPolyline(List(Of Vector2))
  fullName.vb: ShapeEngine.Core.Shapes.Segments.OverlapPolyline(System.Collections.Generic.List(Of System.Numerics.Vector2))
  name.vb: OverlapPolyline(List(Of Vector2))
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegments(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment})
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapSegments(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment})
  id: OverlapSegments(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment})
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapSegments(List<Segment>)
  nameWithType: Segments.OverlapSegments(List<Segment>)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegments(System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapSegments
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 951
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapSegments(List<Segment> segments)
    parameters:
    - id: segments
      type: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
    return:
      type: System.Boolean
    content.vb: Public Function OverlapSegments(segments As List(Of Segment)) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapSegments*
  nameWithType.vb: Segments.OverlapSegments(List(Of Segment))
  fullName.vb: ShapeEngine.Core.Shapes.Segments.OverlapSegments(System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: OverlapSegments(List(Of Segment))
- uid: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Line)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Line)
  id: OverlapShape(ShapeEngine.Core.Shapes.Line)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapShape(Line)
  nameWithType: Segments.OverlapShape(Line)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Line)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 953
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Line line)
    parameters:
    - id: line
      type: ShapeEngine.Core.Shapes.Line
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(line As Line) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Ray)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Ray)
  id: OverlapShape(ShapeEngine.Core.Shapes.Ray)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapShape(Ray)
  nameWithType: Segments.OverlapShape(Ray)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Ray)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 954
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Ray ray)
    parameters:
    - id: ray
      type: ShapeEngine.Core.Shapes.Ray
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(ray As Ray) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Segments)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Segments)
  id: OverlapShape(ShapeEngine.Core.Shapes.Segments)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapShape(Segments)
  nameWithType: Segments.OverlapShape(Segments)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Segments)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 956
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Segments b)
    parameters:
    - id: b
      type: ShapeEngine.Core.Shapes.Segments
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(b As Segments) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Segment)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Segment)
  id: OverlapShape(ShapeEngine.Core.Shapes.Segment)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapShape(Segment)
  nameWithType: Segments.OverlapShape(Segment)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Segment)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 968
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Segment s)
    parameters:
    - id: s
      type: ShapeEngine.Core.Shapes.Segment
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(s As Segment) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Circle)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Circle)
  id: OverlapShape(ShapeEngine.Core.Shapes.Circle)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapShape(Circle)
  nameWithType: Segments.OverlapShape(Circle)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Circle)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 977
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Circle c)
    parameters:
    - id: c
      type: ShapeEngine.Core.Shapes.Circle
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(c As Circle) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Triangle)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Triangle)
  id: OverlapShape(ShapeEngine.Core.Shapes.Triangle)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapShape(Triangle)
  nameWithType: Segments.OverlapShape(Triangle)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Triangle)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 985
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Triangle t)
    parameters:
    - id: t
      type: ShapeEngine.Core.Shapes.Triangle
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(t As Triangle) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Quad)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Quad)
  id: OverlapShape(ShapeEngine.Core.Shapes.Quad)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapShape(Quad)
  nameWithType: Segments.OverlapShape(Quad)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Quad)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 986
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Quad q)
    parameters:
    - id: q
      type: ShapeEngine.Core.Shapes.Quad
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(q As Quad) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Rect)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Rect)
  id: OverlapShape(ShapeEngine.Core.Shapes.Rect)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapShape(Rect)
  nameWithType: Segments.OverlapShape(Rect)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Rect)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 987
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Rect r)
    parameters:
    - id: r
      type: ShapeEngine.Core.Shapes.Rect
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(r As Rect) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Polyline)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Polyline)
  id: OverlapShape(ShapeEngine.Core.Shapes.Polyline)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapShape(Polyline)
  nameWithType: Segments.OverlapShape(Polyline)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Polyline)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 988
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Polyline pl)
    parameters:
    - id: pl
      type: ShapeEngine.Core.Shapes.Polyline
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(pl As Polyline) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Polygon)
  commentId: M:ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Polygon)
  id: OverlapShape(ShapeEngine.Core.Shapes.Polygon)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: OverlapShape(Polygon)
  nameWithType: Segments.OverlapShape(Polygon)
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapShape(ShapeEngine.Core.Shapes.Polygon)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 989
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Polygon p)
    parameters:
    - id: p
      type: ShapeEngine.Core.Shapes.Polygon
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(p As Polygon) As Boolean
  overload: ShapeEngine.Core.Shapes.Segments.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Ray)
  commentId: M:ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Ray)
  id: IntersectShape(ShapeEngine.Core.Shapes.Ray)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: IntersectShape(Ray)
  nameWithType: Segments.IntersectShape(Ray)
  fullName: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Ray)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 994
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectShape(Ray r)
    parameters:
    - id: r
      type: ShapeEngine.Core.Shapes.Ray
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectShape(r As Ray) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Segments.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Line)
  commentId: M:ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Line)
  id: IntersectShape(ShapeEngine.Core.Shapes.Line)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: IntersectShape(Line)
  nameWithType: Segments.IntersectShape(Line)
  fullName: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Line)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 1010
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectShape(Line l)
    parameters:
    - id: l
      type: ShapeEngine.Core.Shapes.Line
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectShape(l As Line) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Segments.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Segment)
  commentId: M:ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Segment)
  id: IntersectShape(ShapeEngine.Core.Shapes.Segment)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: IntersectShape(Segment)
  nameWithType: Segments.IntersectShape(Segment)
  fullName: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Segment)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 1026
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectShape(Segment s)
    parameters:
    - id: s
      type: ShapeEngine.Core.Shapes.Segment
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectShape(s As Segment) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Segments.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Circle)
  commentId: M:ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Circle)
  id: IntersectShape(ShapeEngine.Core.Shapes.Circle)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: IntersectShape(Circle)
  nameWithType: Segments.IntersectShape(Circle)
  fullName: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Circle)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 1043
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectShape(Circle c)
    parameters:
    - id: c
      type: ShapeEngine.Core.Shapes.Circle
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectShape(c As Circle) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Segments.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Segments)
  commentId: M:ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Segments)
  id: IntersectShape(ShapeEngine.Core.Shapes.Segments)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: IntersectShape(Segments)
  nameWithType: Segments.IntersectShape(Segments)
  fullName: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Segments)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 1059
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectShape(Segments shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Segments
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectShape(shape As Segments) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Segments.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Ray,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  commentId: M:ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Ray,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  id: IntersectShape(ShapeEngine.Core.Shapes.Ray,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: IntersectShape(Ray, ref CollisionPoints, bool)
  nameWithType: Segments.IntersectShape(Ray, ref CollisionPoints, bool)
  fullName: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Ray, ref ShapeEngine.Core.CollisionSystem.CollisionPoints, bool)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 1080
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public int IntersectShape(Ray r, ref CollisionPoints points, bool returnAfterFirstValid = false)
    parameters:
    - id: r
      type: ShapeEngine.Core.Shapes.Ray
    - id: points
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    - id: returnAfterFirstValid
      type: System.Boolean
    return:
      type: System.Int32
    content.vb: Public Function IntersectShape(r As Ray, points As CollisionPoints, returnAfterFirstValid As Boolean = False) As Integer
  overload: ShapeEngine.Core.Shapes.Segments.IntersectShape*
  nameWithType.vb: Segments.IntersectShape(Ray, CollisionPoints, Boolean)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Ray, ShapeEngine.Core.CollisionSystem.CollisionPoints, Boolean)
  name.vb: IntersectShape(Ray, CollisionPoints, Boolean)
- uid: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Line,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  commentId: M:ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Line,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  id: IntersectShape(ShapeEngine.Core.Shapes.Line,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: IntersectShape(Line, ref CollisionPoints, bool)
  nameWithType: Segments.IntersectShape(Line, ref CollisionPoints, bool)
  fullName: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Line, ref ShapeEngine.Core.CollisionSystem.CollisionPoints, bool)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 1097
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public int IntersectShape(Line l, ref CollisionPoints points, bool returnAfterFirstValid = false)
    parameters:
    - id: l
      type: ShapeEngine.Core.Shapes.Line
    - id: points
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    - id: returnAfterFirstValid
      type: System.Boolean
    return:
      type: System.Int32
    content.vb: Public Function IntersectShape(l As Line, points As CollisionPoints, returnAfterFirstValid As Boolean = False) As Integer
  overload: ShapeEngine.Core.Shapes.Segments.IntersectShape*
  nameWithType.vb: Segments.IntersectShape(Line, CollisionPoints, Boolean)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Line, ShapeEngine.Core.CollisionSystem.CollisionPoints, Boolean)
  name.vb: IntersectShape(Line, CollisionPoints, Boolean)
- uid: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  commentId: M:ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  id: IntersectShape(ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: IntersectShape(Segment, ref CollisionPoints, bool)
  nameWithType: Segments.IntersectShape(Segment, ref CollisionPoints, bool)
  fullName: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Segment, ref ShapeEngine.Core.CollisionSystem.CollisionPoints, bool)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 1114
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public int IntersectShape(Segment s, ref CollisionPoints points, bool returnAfterFirstValid = false)
    parameters:
    - id: s
      type: ShapeEngine.Core.Shapes.Segment
    - id: points
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    - id: returnAfterFirstValid
      type: System.Boolean
    return:
      type: System.Int32
    content.vb: Public Function IntersectShape(s As Segment, points As CollisionPoints, returnAfterFirstValid As Boolean = False) As Integer
  overload: ShapeEngine.Core.Shapes.Segments.IntersectShape*
  nameWithType.vb: Segments.IntersectShape(Segment, CollisionPoints, Boolean)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Segment, ShapeEngine.Core.CollisionSystem.CollisionPoints, Boolean)
  name.vb: IntersectShape(Segment, CollisionPoints, Boolean)
- uid: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Circle,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  commentId: M:ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Circle,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  id: IntersectShape(ShapeEngine.Core.Shapes.Circle,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: IntersectShape(Circle, ref CollisionPoints, bool)
  nameWithType: Segments.IntersectShape(Circle, ref CollisionPoints, bool)
  fullName: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Circle, ref ShapeEngine.Core.CollisionSystem.CollisionPoints, bool)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 1131
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public int IntersectShape(Circle c, ref CollisionPoints points, bool returnAfterFirstValid = false)
    parameters:
    - id: c
      type: ShapeEngine.Core.Shapes.Circle
    - id: points
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    - id: returnAfterFirstValid
      type: System.Boolean
    return:
      type: System.Int32
    content.vb: Public Function IntersectShape(c As Circle, points As CollisionPoints, returnAfterFirstValid As Boolean = False) As Integer
  overload: ShapeEngine.Core.Shapes.Segments.IntersectShape*
  nameWithType.vb: Segments.IntersectShape(Circle, CollisionPoints, Boolean)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Circle, ShapeEngine.Core.CollisionSystem.CollisionPoints, Boolean)
  name.vb: IntersectShape(Circle, CollisionPoints, Boolean)
- uid: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Segments,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  commentId: M:ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Segments,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  id: IntersectShape(ShapeEngine.Core.Shapes.Segments,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  parent: ShapeEngine.Core.Shapes.Segments
  langs:
  - csharp
  - vb
  name: IntersectShape(Segments, ref CollisionPoints, bool)
  nameWithType: Segments.IntersectShape(Segments, ref CollisionPoints, bool)
  fullName: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Segments, ref ShapeEngine.Core.CollisionSystem.CollisionPoints, bool)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Segments.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Segments.cs
    startLine: 1154
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public int IntersectShape(Segments shape, ref CollisionPoints points, bool returnAfterFirstValid = false)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Segments
    - id: points
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    - id: returnAfterFirstValid
      type: System.Boolean
    return:
      type: System.Int32
    content.vb: Public Function IntersectShape(shape As Segments, points As CollisionPoints, returnAfterFirstValid As Boolean = False) As Integer
  overload: ShapeEngine.Core.Shapes.Segments.IntersectShape*
  nameWithType.vb: Segments.IntersectShape(Segments, CollisionPoints, Boolean)
  fullName.vb: ShapeEngine.Core.Shapes.Segments.IntersectShape(ShapeEngine.Core.Shapes.Segments, ShapeEngine.Core.CollisionSystem.CollisionPoints, Boolean)
  name.vb: IntersectShape(Segments, CollisionPoints, Boolean)
references:
- uid: ShapeEngine.Core.Shapes
  commentId: N:ShapeEngine.Core.Shapes
  href: ShapeEngine.html
  name: ShapeEngine.Core.Shapes
  nameWithType: ShapeEngine.Core.Shapes
  fullName: ShapeEngine.Core.Shapes
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Shapes
    name: Shapes
    href: ShapeEngine.Core.Shapes.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Shapes
    name: Shapes
    href: ShapeEngine.Core.Shapes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  commentId: T:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Segment>
  nameWithType: List<Segment>
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>
  nameWithType.vb: List(Of Segment)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment)
  name.vb: List(Of Segment)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}
  commentId: T:ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}
  parent: ShapeEngine.Core.Shapes
  definition: ShapeEngine.Core.Shapes.ShapeList`1
  href: ShapeEngine.Core.Shapes.ShapeList-1.html
  name: ShapeList<Segment>
  nameWithType: ShapeList<Segment>
  fullName: ShapeEngine.Core.Shapes.ShapeList<ShapeEngine.Core.Shapes.Segment>
  nameWithType.vb: ShapeList(Of Segment)
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of ShapeEngine.Core.Shapes.Segment)
  name.vb: ShapeList(Of Segment)
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1
    name: ShapeList
    href: ShapeEngine.Core.Shapes.ShapeList-1.html
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1
    name: ShapeList
    href: ShapeEngine.Core.Shapes.ShapeList-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
- uid: System.Collections.Generic.IList{ShapeEngine.Core.Shapes.Segment}
  commentId: T:System.Collections.Generic.IList{ShapeEngine.Core.Shapes.Segment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<Segment>
  nameWithType: IList<Segment>
  fullName: System.Collections.Generic.IList<ShapeEngine.Core.Shapes.Segment>
  nameWithType.vb: IList(Of Segment)
  fullName.vb: System.Collections.Generic.IList(Of ShapeEngine.Core.Shapes.Segment)
  name.vb: IList(Of Segment)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
- uid: System.Collections.Generic.ICollection{ShapeEngine.Core.Shapes.Segment}
  commentId: T:System.Collections.Generic.ICollection{ShapeEngine.Core.Shapes.Segment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<Segment>
  nameWithType: ICollection<Segment>
  fullName: System.Collections.Generic.ICollection<ShapeEngine.Core.Shapes.Segment>
  nameWithType.vb: ICollection(Of Segment)
  fullName.vb: System.Collections.Generic.ICollection(Of ShapeEngine.Core.Shapes.Segment)
  name.vb: ICollection(Of Segment)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyList{ShapeEngine.Core.Shapes.Segment}
  commentId: T:System.Collections.Generic.IReadOnlyList{ShapeEngine.Core.Shapes.Segment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<Segment>
  nameWithType: IReadOnlyList<Segment>
  fullName: System.Collections.Generic.IReadOnlyList<ShapeEngine.Core.Shapes.Segment>
  nameWithType.vb: IReadOnlyList(Of Segment)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of ShapeEngine.Core.Shapes.Segment)
  name.vb: IReadOnlyList(Of Segment)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection{ShapeEngine.Core.Shapes.Segment}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{ShapeEngine.Core.Shapes.Segment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<Segment>
  nameWithType: IReadOnlyCollection<Segment>
  fullName: System.Collections.Generic.IReadOnlyCollection<ShapeEngine.Core.Shapes.Segment>
  nameWithType.vb: IReadOnlyCollection(Of Segment)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of ShapeEngine.Core.Shapes.Segment)
  name.vb: IReadOnlyCollection(Of Segment)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
- uid: System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Segment}
  commentId: T:System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Segment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Segment>
  nameWithType: IEnumerable<Segment>
  fullName: System.Collections.Generic.IEnumerable<ShapeEngine.Core.Shapes.Segment>
  nameWithType.vb: IEnumerable(Of Segment)
  fullName.vb: System.Collections.Generic.IEnumerable(Of ShapeEngine.Core.Shapes.Segment)
  name.vb: IEnumerable(Of Segment)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.icollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.AddRange(ShapeEngine.Core.Shapes.Segment[])
  commentId: M:ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.AddRange(ShapeEngine.Core.Shapes.Segment[])
  parent: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}
  definition: ShapeEngine.Core.Shapes.ShapeList`1.AddRange(`0[])
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_AddRange__0___
  name: AddRange(params Segment[])
  nameWithType: ShapeList<Segment>.AddRange(params Segment[])
  fullName: ShapeEngine.Core.Shapes.ShapeList<ShapeEngine.Core.Shapes.Segment>.AddRange(params ShapeEngine.Core.Shapes.Segment[])
  nameWithType.vb: ShapeList(Of Segment).AddRange(ParamArray Segment())
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of ShapeEngine.Core.Shapes.Segment).AddRange(ParamArray ShapeEngine.Core.Shapes.Segment())
  name.vb: AddRange(ParamArray Segment())
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.AddRange(ShapeEngine.Core.Shapes.Segment[])
    name: AddRange
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_AddRange__0___
  - name: (
  - name: params
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.AddRange(ShapeEngine.Core.Shapes.Segment[])
    name: AddRange
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_AddRange__0___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: (
  - name: )
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.Copy
  commentId: M:ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.Copy
  parent: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}
  definition: ShapeEngine.Core.Shapes.ShapeList`1.Copy
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_Copy
  name: Copy()
  nameWithType: ShapeList<Segment>.Copy()
  fullName: ShapeEngine.Core.Shapes.ShapeList<ShapeEngine.Core.Shapes.Segment>.Copy()
  nameWithType.vb: ShapeList(Of Segment).Copy()
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of ShapeEngine.Core.Shapes.Segment).Copy()
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.Copy
    name: Copy
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_Copy
  - name: (
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.Copy
    name: Copy
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_Copy
  - name: (
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.IsIndexValid(System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.IsIndexValid(System.Int32)
  parent: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}
  definition: ShapeEngine.Core.Shapes.ShapeList`1.IsIndexValid(System.Int32)
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_IsIndexValid_System_Int32_
  name: IsIndexValid(int)
  nameWithType: ShapeList<Segment>.IsIndexValid(int)
  fullName: ShapeEngine.Core.Shapes.ShapeList<ShapeEngine.Core.Shapes.Segment>.IsIndexValid(int)
  nameWithType.vb: ShapeList(Of Segment).IsIndexValid(Integer)
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of ShapeEngine.Core.Shapes.Segment).IsIndexValid(Integer)
  name.vb: IsIndexValid(Integer)
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.IsIndexValid(System.Int32)
    name: IsIndexValid
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_IsIndexValid_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.IsIndexValid(System.Int32)
    name: IsIndexValid
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_IsIndexValid_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetRandomItem
  commentId: M:ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetRandomItem
  parent: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}
  definition: ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItem
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItem
  name: GetRandomItem()
  nameWithType: ShapeList<Segment>.GetRandomItem()
  fullName: ShapeEngine.Core.Shapes.ShapeList<ShapeEngine.Core.Shapes.Segment>.GetRandomItem()
  nameWithType.vb: ShapeList(Of Segment).GetRandomItem()
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of ShapeEngine.Core.Shapes.Segment).GetRandomItem()
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetRandomItem
    name: GetRandomItem
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItem
  - name: (
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetRandomItem
    name: GetRandomItem
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItem
  - name: (
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetRandomItems(System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetRandomItems(System.Int32)
  parent: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}
  definition: ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItems(System.Int32)
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItems_System_Int32_
  name: GetRandomItems(int)
  nameWithType: ShapeList<Segment>.GetRandomItems(int)
  fullName: ShapeEngine.Core.Shapes.ShapeList<ShapeEngine.Core.Shapes.Segment>.GetRandomItems(int)
  nameWithType.vb: ShapeList(Of Segment).GetRandomItems(Integer)
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of ShapeEngine.Core.Shapes.Segment).GetRandomItems(Integer)
  name.vb: GetRandomItems(Integer)
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetRandomItems(System.Int32)
    name: GetRandomItems
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItems_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetRandomItems(System.Int32)
    name: GetRandomItems
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItems_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetItem(System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetItem(System.Int32)
  parent: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}
  definition: ShapeEngine.Core.Shapes.ShapeList`1.GetItem(System.Int32)
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetItem_System_Int32_
  name: GetItem(int)
  nameWithType: ShapeList<Segment>.GetItem(int)
  fullName: ShapeEngine.Core.Shapes.ShapeList<ShapeEngine.Core.Shapes.Segment>.GetItem(int)
  nameWithType.vb: ShapeList(Of Segment).GetItem(Integer)
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of ShapeEngine.Core.Shapes.Segment).GetItem(Integer)
  name.vb: GetItem(Integer)
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetItem(System.Int32)
    name: GetItem
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetItem_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetItem(System.Int32)
    name: GetItem
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetItem_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Add(ShapeEngine.Core.Shapes.Segment)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Add(ShapeEngine.Core.Shapes.Segment)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.Add(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.add
  name: Add(Segment)
  nameWithType: List<Segment>.Add(Segment)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.Add(ShapeEngine.Core.Shapes.Segment)
  nameWithType.vb: List(Of Segment).Add(Segment)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).Add(ShapeEngine.Core.Shapes.Segment)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Add(ShapeEngine.Core.Shapes.Segment)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.add
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Add(ShapeEngine.Core.Shapes.Segment)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.add
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.AddRange(System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.AddRange(System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.addrange
  name: AddRange(IEnumerable<Segment>)
  nameWithType: List<Segment>.AddRange(IEnumerable<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.AddRange(System.Collections.Generic.IEnumerable<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).AddRange(IEnumerable(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).AddRange(System.Collections.Generic.IEnumerable(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: AddRange(IEnumerable(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.AddRange(System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Segment})
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.addrange
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.AddRange(System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Segment})
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.addrange
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.AsReadOnly
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.AsReadOnly
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.AsReadOnly
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.asreadonly
  name: AsReadOnly()
  nameWithType: List<Segment>.AsReadOnly()
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.AsReadOnly()
  nameWithType.vb: List(Of Segment).AsReadOnly()
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).AsReadOnly()
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.AsReadOnly
    name: AsReadOnly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.asreadonly
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.AsReadOnly
    name: AsReadOnly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.asreadonly
  - name: (
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.BinarySearch(System.Int32,System.Int32,ShapeEngine.Core.Shapes.Segment,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.BinarySearch(System.Int32,System.Int32,ShapeEngine.Core.Shapes.Segment,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(system-int32-system-int32-0-system-collections-generic-icomparer((-0)))
  name: BinarySearch(int, int, Segment, IComparer<Segment>)
  nameWithType: List<Segment>.BinarySearch(int, int, Segment, IComparer<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.BinarySearch(int, int, ShapeEngine.Core.Shapes.Segment, System.Collections.Generic.IComparer<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).BinarySearch(Integer, Integer, Segment, IComparer(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).BinarySearch(Integer, Integer, ShapeEngine.Core.Shapes.Segment, System.Collections.Generic.IComparer(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: BinarySearch(Integer, Integer, Segment, IComparer(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.BinarySearch(System.Int32,System.Int32,ShapeEngine.Core.Shapes.Segment,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(system-int32-system-int32-0-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.BinarySearch(System.Int32,System.Int32,ShapeEngine.Core.Shapes.Segment,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(system-int32-system-int32-0-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.BinarySearch(ShapeEngine.Core.Shapes.Segment)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.BinarySearch(ShapeEngine.Core.Shapes.Segment)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.BinarySearch(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0)
  name: BinarySearch(Segment)
  nameWithType: List<Segment>.BinarySearch(Segment)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.BinarySearch(ShapeEngine.Core.Shapes.Segment)
  nameWithType.vb: List(Of Segment).BinarySearch(Segment)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).BinarySearch(ShapeEngine.Core.Shapes.Segment)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.BinarySearch(ShapeEngine.Core.Shapes.Segment)
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.BinarySearch(ShapeEngine.Core.Shapes.Segment)
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.BinarySearch(ShapeEngine.Core.Shapes.Segment,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.BinarySearch(ShapeEngine.Core.Shapes.Segment,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0-system-collections-generic-icomparer((-0)))
  name: BinarySearch(Segment, IComparer<Segment>)
  nameWithType: List<Segment>.BinarySearch(Segment, IComparer<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.BinarySearch(ShapeEngine.Core.Shapes.Segment, System.Collections.Generic.IComparer<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).BinarySearch(Segment, IComparer(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).BinarySearch(ShapeEngine.Core.Shapes.Segment, System.Collections.Generic.IComparer(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: BinarySearch(Segment, IComparer(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.BinarySearch(ShapeEngine.Core.Shapes.Segment,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.BinarySearch(ShapeEngine.Core.Shapes.Segment,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Clear
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Clear
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.clear
  name: Clear()
  nameWithType: List<Segment>.Clear()
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.Clear()
  nameWithType.vb: List(Of Segment).Clear()
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Contains(ShapeEngine.Core.Shapes.Segment)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Contains(ShapeEngine.Core.Shapes.Segment)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.Contains(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.contains
  name: Contains(Segment)
  nameWithType: List<Segment>.Contains(Segment)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.Contains(ShapeEngine.Core.Shapes.Segment)
  nameWithType.vb: List(Of Segment).Contains(Segment)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).Contains(ShapeEngine.Core.Shapes.Segment)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Contains(ShapeEngine.Core.Shapes.Segment)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.contains
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Contains(ShapeEngine.Core.Shapes.Segment)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.contains
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.ConvertAll``1(System.Converter{ShapeEngine.Core.Shapes.Segment,{TOutput}})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.ConvertAll``1(System.Converter{ShapeEngine.Core.Shapes.Segment,``0})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.convertall
  name: ConvertAll<TOutput>(Converter<Segment, TOutput>)
  nameWithType: List<Segment>.ConvertAll<TOutput>(Converter<Segment, TOutput>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.ConvertAll<TOutput>(System.Converter<ShapeEngine.Core.Shapes.Segment, TOutput>)
  nameWithType.vb: List(Of Segment).ConvertAll(Of TOutput)(Converter(Of Segment, TOutput))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).ConvertAll(Of TOutput)(System.Converter(Of ShapeEngine.Core.Shapes.Segment, TOutput))
  name.vb: ConvertAll(Of TOutput)(Converter(Of Segment, TOutput))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.ConvertAll``1(System.Converter{ShapeEngine.Core.Shapes.Segment,``0})
    name: ConvertAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.convertall
  - name: <
  - name: TOutput
  - name: '>'
  - name: (
  - uid: System.Converter`2
    name: Converter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.converter-2
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: ','
  - name: " "
  - name: TOutput
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.ConvertAll``1(System.Converter{ShapeEngine.Core.Shapes.Segment,``0})
    name: ConvertAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.convertall
  - name: (
  - name: Of
  - name: " "
  - name: TOutput
  - name: )
  - name: (
  - uid: System.Converter`2
    name: Converter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.converter-2
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: ','
  - name: " "
  - name: TOutput
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.CopyTo(System.Int32,ShapeEngine.Core.Shapes.Segment[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.CopyTo(System.Int32,ShapeEngine.Core.Shapes.Segment[],System.Int32,System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(system-int32-0()-system-int32-system-int32)
  name: CopyTo(int, Segment[], int, int)
  nameWithType: List<Segment>.CopyTo(int, Segment[], int, int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.CopyTo(int, ShapeEngine.Core.Shapes.Segment[], int, int)
  nameWithType.vb: List(Of Segment).CopyTo(Integer, Segment(), Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).CopyTo(Integer, ShapeEngine.Core.Shapes.Segment(), Integer, Integer)
  name.vb: CopyTo(Integer, Segment(), Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.CopyTo(System.Int32,ShapeEngine.Core.Shapes.Segment[],System.Int32,System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(system-int32-0()-system-int32-system-int32)
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.CopyTo(System.Int32,ShapeEngine.Core.Shapes.Segment[],System.Int32,System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(system-int32-0()-system-int32-system-int32)
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.CopyTo(ShapeEngine.Core.Shapes.Segment[])
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.CopyTo(ShapeEngine.Core.Shapes.Segment[])
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.CopyTo(`0[])
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0())
  name: CopyTo(Segment[])
  nameWithType: List<Segment>.CopyTo(Segment[])
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.CopyTo(ShapeEngine.Core.Shapes.Segment[])
  nameWithType.vb: List(Of Segment).CopyTo(Segment())
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).CopyTo(ShapeEngine.Core.Shapes.Segment())
  name.vb: CopyTo(Segment())
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.CopyTo(ShapeEngine.Core.Shapes.Segment[])
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0())
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.CopyTo(ShapeEngine.Core.Shapes.Segment[])
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0())
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: (
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.CopyTo(ShapeEngine.Core.Shapes.Segment[],System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.CopyTo(ShapeEngine.Core.Shapes.Segment[],System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0()-system-int32)
  name: CopyTo(Segment[], int)
  nameWithType: List<Segment>.CopyTo(Segment[], int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.CopyTo(ShapeEngine.Core.Shapes.Segment[], int)
  nameWithType.vb: List(Of Segment).CopyTo(Segment(), Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).CopyTo(ShapeEngine.Core.Shapes.Segment(), Integer)
  name.vb: CopyTo(Segment(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.CopyTo(ShapeEngine.Core.Shapes.Segment[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0()-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.CopyTo(ShapeEngine.Core.Shapes.Segment[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0()-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.EnsureCapacity(System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.EnsureCapacity(System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.EnsureCapacity(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.ensurecapacity
  name: EnsureCapacity(int)
  nameWithType: List<Segment>.EnsureCapacity(int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.EnsureCapacity(int)
  nameWithType.vb: List(Of Segment).EnsureCapacity(Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).EnsureCapacity(Integer)
  name.vb: EnsureCapacity(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.ensurecapacity
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.ensurecapacity
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Exists(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Exists(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.exists
  name: Exists(Predicate<Segment>)
  nameWithType: List<Segment>.Exists(Predicate<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.Exists(System.Predicate<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).Exists(Predicate(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).Exists(System.Predicate(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: Exists(Predicate(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Exists(System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: Exists
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.exists
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Exists(System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: Exists
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.exists
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Find(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Find(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.Find(System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.find
  name: Find(Predicate<Segment>)
  nameWithType: List<Segment>.Find(Predicate<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.Find(System.Predicate<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).Find(Predicate(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).Find(System.Predicate(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: Find(Predicate(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Find(System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: Find
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.find
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Find(System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: Find
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.find
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindAll(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindAll(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findall
  name: FindAll(Predicate<Segment>)
  nameWithType: List<Segment>.FindAll(Predicate<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.FindAll(System.Predicate<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).FindAll(Predicate(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).FindAll(System.Predicate(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: FindAll(Predicate(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindAll(System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: FindAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindAll(System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: FindAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-int32-system-predicate((-0)))
  name: FindIndex(int, int, Predicate<Segment>)
  nameWithType: List<Segment>.FindIndex(int, int, Predicate<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.FindIndex(int, int, System.Predicate<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).FindIndex(Integer, Integer, Predicate(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).FindIndex(Integer, Integer, System.Predicate(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: FindIndex(Integer, Integer, Predicate(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-predicate((-0)))
  name: FindIndex(int, Predicate<Segment>)
  nameWithType: List<Segment>.FindIndex(int, Predicate<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.FindIndex(int, System.Predicate<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).FindIndex(Integer, Predicate(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).FindIndex(Integer, System.Predicate(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: FindIndex(Integer, Predicate(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindIndex(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindIndex(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-predicate((-0)))
  name: FindIndex(Predicate<Segment>)
  nameWithType: List<Segment>.FindIndex(Predicate<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.FindIndex(System.Predicate<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).FindIndex(Predicate(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).FindIndex(System.Predicate(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: FindIndex(Predicate(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindIndex(System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-predicate((-0)))
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindIndex(System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-predicate((-0)))
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLast(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLast(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlast
  name: FindLast(Predicate<Segment>)
  nameWithType: List<Segment>.FindLast(Predicate<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.FindLast(System.Predicate<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).FindLast(Predicate(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).FindLast(System.Predicate(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: FindLast(Predicate(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLast(System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: FindLast
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlast
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLast(System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: FindLast
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlast
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLastIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLastIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-int32-system-predicate((-0)))
  name: FindLastIndex(int, int, Predicate<Segment>)
  nameWithType: List<Segment>.FindLastIndex(int, int, Predicate<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.FindLastIndex(int, int, System.Predicate<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).FindLastIndex(Integer, Integer, Predicate(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).FindLastIndex(Integer, Integer, System.Predicate(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: FindLastIndex(Integer, Integer, Predicate(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLastIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLastIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLastIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLastIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-predicate((-0)))
  name: FindLastIndex(int, Predicate<Segment>)
  nameWithType: List<Segment>.FindLastIndex(int, Predicate<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.FindLastIndex(int, System.Predicate<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).FindLastIndex(Integer, Predicate(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).FindLastIndex(Integer, System.Predicate(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: FindLastIndex(Integer, Predicate(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLastIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLastIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLastIndex(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLastIndex(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-predicate((-0)))
  name: FindLastIndex(Predicate<Segment>)
  nameWithType: List<Segment>.FindLastIndex(Predicate<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.FindLastIndex(System.Predicate<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).FindLastIndex(Predicate(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).FindLastIndex(System.Predicate(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: FindLastIndex(Predicate(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLastIndex(System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-predicate((-0)))
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.FindLastIndex(System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-predicate((-0)))
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.ForEach(System.Action{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.ForEach(System.Action{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.ForEach(System.Action{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.foreach
  name: ForEach(Action<Segment>)
  nameWithType: List<Segment>.ForEach(Action<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.ForEach(System.Action<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).ForEach(Action(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).ForEach(System.Action(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: ForEach(Action(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.ForEach(System.Action{ShapeEngine.Core.Shapes.Segment})
    name: ForEach
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.foreach
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.ForEach(System.Action{ShapeEngine.Core.Shapes.Segment})
    name: ForEach
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.foreach
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.GetEnumerator
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.GetEnumerator
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getenumerator
  name: GetEnumerator()
  nameWithType: List<Segment>.GetEnumerator()
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.GetEnumerator()
  nameWithType.vb: List(Of Segment).GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.GetRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getrange
  name: GetRange(int, int)
  nameWithType: List<Segment>.GetRange(int, int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.GetRange(int, int)
  nameWithType.vb: List(Of Segment).GetRange(Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).GetRange(Integer, Integer)
  name.vb: GetRange(Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.GetRange(System.Int32,System.Int32)
    name: GetRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getrange
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.GetRange(System.Int32,System.Int32)
    name: GetRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getrange
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.IndexOf(ShapeEngine.Core.Shapes.Segment)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.IndexOf(ShapeEngine.Core.Shapes.Segment)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.IndexOf(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0)
  name: IndexOf(Segment)
  nameWithType: List<Segment>.IndexOf(Segment)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.IndexOf(ShapeEngine.Core.Shapes.Segment)
  nameWithType.vb: List(Of Segment).IndexOf(Segment)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).IndexOf(ShapeEngine.Core.Shapes.Segment)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.IndexOf(ShapeEngine.Core.Shapes.Segment)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.IndexOf(ShapeEngine.Core.Shapes.Segment)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.IndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.IndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32)
  name: IndexOf(Segment, int)
  nameWithType: List<Segment>.IndexOf(Segment, int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.IndexOf(ShapeEngine.Core.Shapes.Segment, int)
  nameWithType.vb: List(Of Segment).IndexOf(Segment, Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).IndexOf(ShapeEngine.Core.Shapes.Segment, Integer)
  name.vb: IndexOf(Segment, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.IndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.IndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.IndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.IndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32,System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32-system-int32)
  name: IndexOf(Segment, int, int)
  nameWithType: List<Segment>.IndexOf(Segment, int, int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.IndexOf(ShapeEngine.Core.Shapes.Segment, int, int)
  nameWithType.vb: List(Of Segment).IndexOf(Segment, Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).IndexOf(ShapeEngine.Core.Shapes.Segment, Integer, Integer)
  name.vb: IndexOf(Segment, Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.IndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32,System.Int32)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.IndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32,System.Int32)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Insert(System.Int32,ShapeEngine.Core.Shapes.Segment)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Insert(System.Int32,ShapeEngine.Core.Shapes.Segment)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.Insert(System.Int32,`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insert
  name: Insert(int, Segment)
  nameWithType: List<Segment>.Insert(int, Segment)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.Insert(int, ShapeEngine.Core.Shapes.Segment)
  nameWithType.vb: List(Of Segment).Insert(Integer, Segment)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).Insert(Integer, ShapeEngine.Core.Shapes.Segment)
  name.vb: Insert(Integer, Segment)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Insert(System.Int32,ShapeEngine.Core.Shapes.Segment)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Insert(System.Int32,ShapeEngine.Core.Shapes.Segment)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insertrange
  name: InsertRange(int, IEnumerable<Segment>)
  nameWithType: List<Segment>.InsertRange(int, IEnumerable<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.InsertRange(int, System.Collections.Generic.IEnumerable<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).InsertRange(Integer, IEnumerable(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).InsertRange(Integer, System.Collections.Generic.IEnumerable(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: InsertRange(Integer, IEnumerable(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Segment})
    name: InsertRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insertrange
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Segment})
    name: InsertRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insertrange
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.LastIndexOf(ShapeEngine.Core.Shapes.Segment)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.LastIndexOf(ShapeEngine.Core.Shapes.Segment)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0)
  name: LastIndexOf(Segment)
  nameWithType: List<Segment>.LastIndexOf(Segment)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.LastIndexOf(ShapeEngine.Core.Shapes.Segment)
  nameWithType.vb: List(Of Segment).LastIndexOf(Segment)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).LastIndexOf(ShapeEngine.Core.Shapes.Segment)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.LastIndexOf(ShapeEngine.Core.Shapes.Segment)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.LastIndexOf(ShapeEngine.Core.Shapes.Segment)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.LastIndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.LastIndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32)
  name: LastIndexOf(Segment, int)
  nameWithType: List<Segment>.LastIndexOf(Segment, int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.LastIndexOf(ShapeEngine.Core.Shapes.Segment, int)
  nameWithType.vb: List(Of Segment).LastIndexOf(Segment, Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).LastIndexOf(ShapeEngine.Core.Shapes.Segment, Integer)
  name.vb: LastIndexOf(Segment, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.LastIndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.LastIndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.LastIndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.LastIndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32,System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32-system-int32)
  name: LastIndexOf(Segment, int, int)
  nameWithType: List<Segment>.LastIndexOf(Segment, int, int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.LastIndexOf(ShapeEngine.Core.Shapes.Segment, int, int)
  nameWithType.vb: List(Of Segment).LastIndexOf(Segment, Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).LastIndexOf(ShapeEngine.Core.Shapes.Segment, Integer, Integer)
  name.vb: LastIndexOf(Segment, Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.LastIndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32,System.Int32)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.LastIndexOf(ShapeEngine.Core.Shapes.Segment,System.Int32,System.Int32)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Remove(ShapeEngine.Core.Shapes.Segment)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Remove(ShapeEngine.Core.Shapes.Segment)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.remove
  name: Remove(Segment)
  nameWithType: List<Segment>.Remove(Segment)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.Remove(ShapeEngine.Core.Shapes.Segment)
  nameWithType.vb: List(Of Segment).Remove(Segment)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).Remove(ShapeEngine.Core.Shapes.Segment)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Remove(ShapeEngine.Core.Shapes.Segment)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.remove
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Remove(ShapeEngine.Core.Shapes.Segment)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.remove
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.RemoveAll(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.RemoveAll(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeall
  name: RemoveAll(Predicate<Segment>)
  nameWithType: List<Segment>.RemoveAll(Predicate<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.RemoveAll(System.Predicate<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).RemoveAll(Predicate(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).RemoveAll(System.Predicate(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: RemoveAll(Predicate(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.RemoveAll(System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: RemoveAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.RemoveAll(System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: RemoveAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.RemoveAt(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeat
  name: RemoveAt(int)
  nameWithType: List<Segment>.RemoveAt(int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.RemoveAt(int)
  nameWithType.vb: List(Of Segment).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.RemoveRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removerange
  name: RemoveRange(int, int)
  nameWithType: List<Segment>.RemoveRange(int, int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.RemoveRange(int, int)
  nameWithType.vb: List(Of Segment).RemoveRange(Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).RemoveRange(Integer, Integer)
  name.vb: RemoveRange(Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removerange
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removerange
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Reverse
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Reverse
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.Reverse
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse
  name: Reverse()
  nameWithType: List<Segment>.Reverse()
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.Reverse()
  nameWithType.vb: List(Of Segment).Reverse()
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).Reverse()
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Reverse
    name: Reverse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Reverse
    name: Reverse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse
  - name: (
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Reverse(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse(system-int32-system-int32)
  name: Reverse(int, int)
  nameWithType: List<Segment>.Reverse(int, int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.Reverse(int, int)
  nameWithType.vb: List(Of Segment).Reverse(Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).Reverse(Integer, Integer)
  name.vb: Reverse(Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Reverse(System.Int32,System.Int32)
    name: Reverse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse(system-int32-system-int32)
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Reverse(System.Int32,System.Int32)
    name: Reverse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse(system-int32-system-int32)
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Slice(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Slice(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.Slice(System.Int32,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.slice
  name: Slice(int, int)
  nameWithType: List<Segment>.Slice(int, int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.Slice(int, int)
  nameWithType.vb: List(Of Segment).Slice(Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).Slice(Integer, Integer)
  name.vb: Slice(Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Slice(System.Int32,System.Int32)
    name: Slice
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.slice
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Slice(System.Int32,System.Int32)
    name: Slice
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.slice
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.Sort
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort
  name: Sort()
  nameWithType: List<Segment>.Sort()
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.Sort()
  nameWithType.vb: List(Of Segment).Sort()
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).Sort()
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort
  - name: (
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort(System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort(System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-collections-generic-icomparer((-0)))
  name: Sort(IComparer<Segment>)
  nameWithType: List<Segment>.Sort(IComparer<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.Sort(System.Collections.Generic.IComparer<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).Sort(IComparer(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).Sort(System.Collections.Generic.IComparer(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: Sort(IComparer(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort(System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort(System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort(System.Comparison{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort(System.Comparison{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-comparison((-0)))
  name: Sort(Comparison<Segment>)
  nameWithType: List<Segment>.Sort(Comparison<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.Sort(System.Comparison<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).Sort(Comparison(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).Sort(System.Comparison(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: Sort(Comparison(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort(System.Comparison{ShapeEngine.Core.Shapes.Segment})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-comparison((-0)))
  - name: (
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort(System.Comparison{ShapeEngine.Core.Shapes.Segment})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-comparison((-0)))
  - name: (
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-int32-system-int32-system-collections-generic-icomparer((-0)))
  name: Sort(int, int, IComparer<Segment>)
  nameWithType: List<Segment>.Sort(int, int, IComparer<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.Sort(int, int, System.Collections.Generic.IComparer<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).Sort(Integer, Integer, IComparer(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).Sort(Integer, Integer, System.Collections.Generic.IComparer(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: Sort(Integer, Integer, IComparer(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-int32-system-int32-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Segment})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-int32-system-int32-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.ToArray
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.ToArray
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.ToArray
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.toarray
  name: ToArray()
  nameWithType: List<Segment>.ToArray()
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.ToArray()
  nameWithType.vb: List(Of Segment).ToArray()
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.ToArray
    name: ToArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.toarray
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.ToArray
    name: ToArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.toarray
  - name: (
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.TrimExcess
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.TrimExcess
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.TrimExcess
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trimexcess
  name: TrimExcess()
  nameWithType: List<Segment>.TrimExcess()
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.TrimExcess()
  nameWithType.vb: List(Of Segment).TrimExcess()
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.TrimExcess
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trimexcess
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.TrimExcess
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trimexcess
  - name: (
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.TrueForAll(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.TrueForAll(System.Predicate{ShapeEngine.Core.Shapes.Segment})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trueforall
  name: TrueForAll(Predicate<Segment>)
  nameWithType: List<Segment>.TrueForAll(Predicate<Segment>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.TrueForAll(System.Predicate<ShapeEngine.Core.Shapes.Segment>)
  nameWithType.vb: List(Of Segment).TrueForAll(Predicate(Of Segment))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).TrueForAll(System.Predicate(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: TrueForAll(Predicate(Of Segment))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.TrueForAll(System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: TrueForAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trueforall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.TrueForAll(System.Predicate{ShapeEngine.Core.Shapes.Segment})
    name: TrueForAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trueforall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Capacity
  commentId: P:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Capacity
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.Capacity
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.capacity
  name: Capacity
  nameWithType: List<Segment>.Capacity
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.Capacity
  nameWithType.vb: List(Of Segment).Capacity
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).Capacity
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Count
  commentId: P:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Count
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.count
  name: Count
  nameWithType: List<Segment>.Count
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.Count
  nameWithType.vb: List(Of Segment).Count
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).Count
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Item(System.Int32)
  commentId: P:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Item(System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  definition: System.Collections.Generic.List`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: List<Segment>.this[int]
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>.this[int]
  nameWithType.vb: List(Of Segment).this[](Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: ShapeEngine.Core.Shapes.Segments.ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Structs.LineDrawingInfo)
  commentId: M:ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments,ShapeEngine.Core.Structs.LineDrawingInfo)
  parent: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing
  definition: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments,ShapeEngine.Core.Structs.LineDrawingInfo)
  href: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeSegmentDrawing_Draw_ShapeEngine_Core_Shapes_Segments_ShapeEngine_Core_Structs_LineDrawingInfo_
  name: Draw(Segments, LineDrawingInfo)
  nameWithType: ShapeSegmentDrawing.Draw(Segments, LineDrawingInfo)
  fullName: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments, ShapeEngine.Core.Structs.LineDrawingInfo)
  spec.csharp:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments,ShapeEngine.Core.Structs.LineDrawingInfo)
    name: Draw
    href: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeSegmentDrawing_Draw_ShapeEngine_Core_Shapes_Segments_ShapeEngine_Core_Structs_LineDrawingInfo_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segments
    name: Segments
    href: ShapeEngine.Core.Shapes.Segments.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineDrawingInfo
    name: LineDrawingInfo
    href: ShapeEngine.Core.Structs.LineDrawingInfo.html
  - name: )
  spec.vb:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments,ShapeEngine.Core.Structs.LineDrawingInfo)
    name: Draw
    href: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeSegmentDrawing_Draw_ShapeEngine_Core_Shapes_Segments_ShapeEngine_Core_Structs_LineDrawingInfo_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segments
    name: Segments
    href: ShapeEngine.Core.Shapes.Segments.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineDrawingInfo
    name: LineDrawingInfo
    href: ShapeEngine.Core.Structs.LineDrawingInfo.html
  - name: )
- uid: ShapeEngine.Core.Shapes.Segments.ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(System.Single,System.Collections.Generic.List{ShapeEngine.Color.ColorRgba},ShapeEngine.Core.Structs.LineCapType,System.Int32)
  commentId: M:ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments,System.Single,System.Collections.Generic.List{ShapeEngine.Color.ColorRgba},ShapeEngine.Core.Structs.LineCapType,System.Int32)
  parent: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing
  definition: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments,System.Single,System.Collections.Generic.List{ShapeEngine.Color.ColorRgba},ShapeEngine.Core.Structs.LineCapType,System.Int32)
  href: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeSegmentDrawing_Draw_ShapeEngine_Core_Shapes_Segments_System_Single_System_Collections_Generic_List_ShapeEngine_Color_ColorRgba__ShapeEngine_Core_Structs_LineCapType_System_Int32_
  name: Draw(Segments, float, List<ColorRgba>, LineCapType, int)
  nameWithType: ShapeSegmentDrawing.Draw(Segments, float, List<ColorRgba>, LineCapType, int)
  fullName: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments, float, System.Collections.Generic.List<ShapeEngine.Color.ColorRgba>, ShapeEngine.Core.Structs.LineCapType, int)
  nameWithType.vb: ShapeSegmentDrawing.Draw(Segments, Single, List(Of ColorRgba), LineCapType, Integer)
  fullName.vb: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments, Single, System.Collections.Generic.List(Of ShapeEngine.Color.ColorRgba), ShapeEngine.Core.Structs.LineCapType, Integer)
  name.vb: Draw(Segments, Single, List(Of ColorRgba), LineCapType, Integer)
  spec.csharp:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments,System.Single,System.Collections.Generic.List{ShapeEngine.Color.ColorRgba},ShapeEngine.Core.Structs.LineCapType,System.Int32)
    name: Draw
    href: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeSegmentDrawing_Draw_ShapeEngine_Core_Shapes_Segments_System_Single_System_Collections_Generic_List_ShapeEngine_Color_ColorRgba__ShapeEngine_Core_Structs_LineCapType_System_Int32_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segments
    name: Segments
    href: ShapeEngine.Core.Shapes.Segments.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineCapType
    name: LineCapType
    href: ShapeEngine.Core.Structs.LineCapType.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments,System.Single,System.Collections.Generic.List{ShapeEngine.Color.ColorRgba},ShapeEngine.Core.Structs.LineCapType,System.Int32)
    name: Draw
    href: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeSegmentDrawing_Draw_ShapeEngine_Core_Shapes_Segments_System_Single_System_Collections_Generic_List_ShapeEngine_Color_ColorRgba__ShapeEngine_Core_Structs_LineCapType_System_Int32_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segments
    name: Segments
    href: ShapeEngine.Core.Shapes.Segments.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: )
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineCapType
    name: LineCapType
    href: ShapeEngine.Core.Structs.LineCapType.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ShapeEngine.Core.Shapes.Segments.ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.DrawGlow(System.Single,System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Color.ColorRgba,System.Int32,ShapeEngine.Core.Structs.LineCapType,System.Int32)
  commentId: M:ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.DrawGlow(ShapeEngine.Core.Shapes.Segments,System.Single,System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Color.ColorRgba,System.Int32,ShapeEngine.Core.Structs.LineCapType,System.Int32)
  parent: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing
  definition: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.DrawGlow(ShapeEngine.Core.Shapes.Segments,System.Single,System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Color.ColorRgba,System.Int32,ShapeEngine.Core.Structs.LineCapType,System.Int32)
  href: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeSegmentDrawing_DrawGlow_ShapeEngine_Core_Shapes_Segments_System_Single_System_Single_ShapeEngine_Color_ColorRgba_ShapeEngine_Color_ColorRgba_System_Int32_ShapeEngine_Core_Structs_LineCapType_System_Int32_
  name: DrawGlow(Segments, float, float, ColorRgba, ColorRgba, int, LineCapType, int)
  nameWithType: ShapeSegmentDrawing.DrawGlow(Segments, float, float, ColorRgba, ColorRgba, int, LineCapType, int)
  fullName: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.DrawGlow(ShapeEngine.Core.Shapes.Segments, float, float, ShapeEngine.Color.ColorRgba, ShapeEngine.Color.ColorRgba, int, ShapeEngine.Core.Structs.LineCapType, int)
  nameWithType.vb: ShapeSegmentDrawing.DrawGlow(Segments, Single, Single, ColorRgba, ColorRgba, Integer, LineCapType, Integer)
  fullName.vb: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.DrawGlow(ShapeEngine.Core.Shapes.Segments, Single, Single, ShapeEngine.Color.ColorRgba, ShapeEngine.Color.ColorRgba, Integer, ShapeEngine.Core.Structs.LineCapType, Integer)
  name.vb: DrawGlow(Segments, Single, Single, ColorRgba, ColorRgba, Integer, LineCapType, Integer)
  spec.csharp:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.DrawGlow(ShapeEngine.Core.Shapes.Segments,System.Single,System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Color.ColorRgba,System.Int32,ShapeEngine.Core.Structs.LineCapType,System.Int32)
    name: DrawGlow
    href: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeSegmentDrawing_DrawGlow_ShapeEngine_Core_Shapes_Segments_System_Single_System_Single_ShapeEngine_Color_ColorRgba_ShapeEngine_Color_ColorRgba_System_Int32_ShapeEngine_Core_Structs_LineCapType_System_Int32_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segments
    name: Segments
    href: ShapeEngine.Core.Shapes.Segments.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineCapType
    name: LineCapType
    href: ShapeEngine.Core.Structs.LineCapType.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.DrawGlow(ShapeEngine.Core.Shapes.Segments,System.Single,System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Color.ColorRgba,System.Int32,ShapeEngine.Core.Structs.LineCapType,System.Int32)
    name: DrawGlow
    href: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeSegmentDrawing_DrawGlow_ShapeEngine_Core_Shapes_Segments_System_Single_System_Single_ShapeEngine_Color_ColorRgba_ShapeEngine_Color_ColorRgba_System_Int32_ShapeEngine_Core_Structs_LineCapType_System_Int32_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segments
    name: Segments
    href: ShapeEngine.Core.Shapes.Segments.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineCapType
    name: LineCapType
    href: ShapeEngine.Core.Structs.LineCapType.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: ShapeEngine.Core.Shapes.ShapeList`1
  commentId: T:ShapeEngine.Core.Shapes.ShapeList`1
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.ShapeList-1.html
  name: ShapeList<T>
  nameWithType: ShapeList<T>
  fullName: ShapeEngine.Core.Shapes.ShapeList<T>
  nameWithType.vb: ShapeList(Of T)
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of T)
  name.vb: ShapeList(Of T)
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1
    name: ShapeList
    href: ShapeEngine.Core.Shapes.ShapeList-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1
    name: ShapeList
    href: ShapeEngine.Core.Shapes.ShapeList-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: ShapeEngine.Core.Shapes.ShapeList`1.AddRange(`0[])
  commentId: M:ShapeEngine.Core.Shapes.ShapeList`1.AddRange(`0[])
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_AddRange__0___
  name: AddRange(params T[])
  nameWithType: ShapeList<T>.AddRange(params T[])
  fullName: ShapeEngine.Core.Shapes.ShapeList<T>.AddRange(params T[])
  nameWithType.vb: ShapeList(Of T).AddRange(ParamArray T())
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of T).AddRange(ParamArray T())
  name.vb: AddRange(ParamArray T())
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.AddRange(`0[])
    name: AddRange
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_AddRange__0___
  - name: (
  - name: params
  - name: " "
  - name: T
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.AddRange(`0[])
    name: AddRange
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_AddRange__0___
  - name: (
  - name: ParamArray
  - name: " "
  - name: T
  - name: (
  - name: )
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList`1.Copy
  commentId: M:ShapeEngine.Core.Shapes.ShapeList`1.Copy
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_Copy
  name: Copy()
  nameWithType: ShapeList<T>.Copy()
  fullName: ShapeEngine.Core.Shapes.ShapeList<T>.Copy()
  nameWithType.vb: ShapeList(Of T).Copy()
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of T).Copy()
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.Copy
    name: Copy
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_Copy
  - name: (
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.Copy
    name: Copy
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_Copy
  - name: (
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList`1.IsIndexValid(System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.ShapeList`1.IsIndexValid(System.Int32)
  isExternal: true
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_IsIndexValid_System_Int32_
  name: IsIndexValid(int)
  nameWithType: ShapeList<T>.IsIndexValid(int)
  fullName: ShapeEngine.Core.Shapes.ShapeList<T>.IsIndexValid(int)
  nameWithType.vb: ShapeList(Of T).IsIndexValid(Integer)
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of T).IsIndexValid(Integer)
  name.vb: IsIndexValid(Integer)
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.IsIndexValid(System.Int32)
    name: IsIndexValid
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_IsIndexValid_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.IsIndexValid(System.Int32)
    name: IsIndexValid
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_IsIndexValid_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItem
  commentId: M:ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItem
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItem
  name: GetRandomItem()
  nameWithType: ShapeList<T>.GetRandomItem()
  fullName: ShapeEngine.Core.Shapes.ShapeList<T>.GetRandomItem()
  nameWithType.vb: ShapeList(Of T).GetRandomItem()
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of T).GetRandomItem()
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItem
    name: GetRandomItem
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItem
  - name: (
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItem
    name: GetRandomItem
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItem
  - name: (
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItems(System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItems(System.Int32)
  isExternal: true
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItems_System_Int32_
  name: GetRandomItems(int)
  nameWithType: ShapeList<T>.GetRandomItems(int)
  fullName: ShapeEngine.Core.Shapes.ShapeList<T>.GetRandomItems(int)
  nameWithType.vb: ShapeList(Of T).GetRandomItems(Integer)
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of T).GetRandomItems(Integer)
  name.vb: GetRandomItems(Integer)
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItems(System.Int32)
    name: GetRandomItems
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItems_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItems(System.Int32)
    name: GetRandomItems
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItems_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList`1.GetItem(System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.ShapeList`1.GetItem(System.Int32)
  isExternal: true
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetItem_System_Int32_
  name: GetItem(int)
  nameWithType: ShapeList<T>.GetItem(int)
  fullName: ShapeEngine.Core.Shapes.ShapeList<T>.GetItem(int)
  nameWithType.vb: ShapeList(Of T).GetItem(Integer)
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of T).GetItem(Integer)
  name.vb: GetItem(Integer)
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.GetItem(System.Int32)
    name: GetItem
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetItem_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.GetItem(System.Int32)
    name: GetItem
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetItem_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.Add(`0)
  commentId: M:System.Collections.Generic.List`1.Add(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.add
  name: Add(T)
  nameWithType: List<T>.Add(T)
  fullName: System.Collections.Generic.List<T>.Add(T)
  nameWithType.vb: List(Of T).Add(T)
  fullName.vb: System.Collections.Generic.List(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.add
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.addrange
  name: AddRange(IEnumerable<T>)
  nameWithType: List<T>.AddRange(IEnumerable<T>)
  fullName: System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: List(Of T).AddRange(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.addrange
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.addrange
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.AsReadOnly
  commentId: M:System.Collections.Generic.List`1.AsReadOnly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.asreadonly
  name: AsReadOnly()
  nameWithType: List<T>.AsReadOnly()
  fullName: System.Collections.Generic.List<T>.AsReadOnly()
  nameWithType.vb: List(Of T).AsReadOnly()
  fullName.vb: System.Collections.Generic.List(Of T).AsReadOnly()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.asreadonly
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.asreadonly
  - name: (
  - name: )
- uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(system-int32-system-int32-0-system-collections-generic-icomparer((-0)))
  name: BinarySearch(int, int, T, IComparer<T>)
  nameWithType: List<T>.BinarySearch(int, int, T, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.BinarySearch(int, int, T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).BinarySearch(Integer, Integer, T, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(Integer, Integer, T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(Integer, Integer, T, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(system-int32-system-int32-0-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(system-int32-system-int32-0-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.BinarySearch(`0)
  commentId: M:System.Collections.Generic.List`1.BinarySearch(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0)
  name: BinarySearch(T)
  nameWithType: List<T>.BinarySearch(T)
  fullName: System.Collections.Generic.List<T>.BinarySearch(T)
  nameWithType.vb: List(Of T).BinarySearch(T)
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0)
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0)
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0-system-collections-generic-icomparer((-0)))
  name: BinarySearch(T, IComparer<T>)
  nameWithType: List<T>.BinarySearch(T, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.BinarySearch(T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).BinarySearch(T, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(T, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0-system-collections-generic-icomparer((-0)))
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0-system-collections-generic-icomparer((-0)))
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.Clear
  commentId: M:System.Collections.Generic.List`1.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.clear
  name: Clear()
  nameWithType: List<T>.Clear()
  fullName: System.Collections.Generic.List<T>.Clear()
  nameWithType.vb: List(Of T).Clear()
  fullName.vb: System.Collections.Generic.List(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.List`1.Contains(`0)
  commentId: M:System.Collections.Generic.List`1.Contains(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.contains
  name: Contains(T)
  nameWithType: List<T>.Contains(T)
  fullName: System.Collections.Generic.List<T>.Contains(T)
  nameWithType.vb: List(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.List(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.contains
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  commentId: M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.convertall
  name: ConvertAll<TOutput>(Converter<T, TOutput>)
  nameWithType: List<T>.ConvertAll<TOutput>(Converter<T, TOutput>)
  fullName: System.Collections.Generic.List<T>.ConvertAll<TOutput>(System.Converter<T, TOutput>)
  nameWithType.vb: List(Of T).ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  fullName.vb: System.Collections.Generic.List(Of T).ConvertAll(Of TOutput)(System.Converter(Of T, TOutput))
  name.vb: ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.convertall
  - name: <
  - name: TOutput
  - name: '>'
  - name: (
  - uid: System.Converter`2
    name: Converter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.converter-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TOutput
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.convertall
  - name: (
  - name: Of
  - name: " "
  - name: TOutput
  - name: )
  - name: (
  - uid: System.Converter`2
    name: Converter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.converter-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TOutput
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(system-int32-0()-system-int32-system-int32)
  name: CopyTo(int, T[], int, int)
  nameWithType: List<T>.CopyTo(int, T[], int, int)
  fullName: System.Collections.Generic.List<T>.CopyTo(int, T[], int, int)
  nameWithType.vb: List(Of T).CopyTo(Integer, T(), Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(Integer, T(), Integer, Integer)
  name.vb: CopyTo(Integer, T(), Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(system-int32-0()-system-int32-system-int32)
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(system-int32-0()-system-int32-system-int32)
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.CopyTo(`0[])
  commentId: M:System.Collections.Generic.List`1.CopyTo(`0[])
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0())
  name: CopyTo(T[])
  nameWithType: List<T>.CopyTo(T[])
  fullName: System.Collections.Generic.List<T>.CopyTo(T[])
  nameWithType.vb: List(Of T).CopyTo(T())
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T())
  name.vb: CopyTo(T())
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0())
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0())
  - name: (
  - name: T
  - name: (
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0()-system-int32)
  name: CopyTo(T[], int)
  nameWithType: List<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.List<T>.CopyTo(T[], int)
  nameWithType.vb: List(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0()-system-int32)
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0()-system-int32)
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.EnsureCapacity(System.Int32)
  commentId: M:System.Collections.Generic.List`1.EnsureCapacity(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.ensurecapacity
  name: EnsureCapacity(int)
  nameWithType: List<T>.EnsureCapacity(int)
  fullName: System.Collections.Generic.List<T>.EnsureCapacity(int)
  nameWithType.vb: List(Of T).EnsureCapacity(Integer)
  fullName.vb: System.Collections.Generic.List(Of T).EnsureCapacity(Integer)
  name.vb: EnsureCapacity(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.ensurecapacity
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.ensurecapacity
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.exists
  name: Exists(Predicate<T>)
  nameWithType: List<T>.Exists(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.Exists(System.Predicate<T>)
  nameWithType.vb: List(Of T).Exists(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Exists(System.Predicate(Of T))
  name.vb: Exists(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.exists
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.exists
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.Find(System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.find
  name: Find(Predicate<T>)
  nameWithType: List<T>.Find(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.Find(System.Predicate<T>)
  nameWithType.vb: List(Of T).Find(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Find(System.Predicate(Of T))
  name.vb: Find(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.find
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.find
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findall
  name: FindAll(Predicate<T>)
  nameWithType: List<T>.FindAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindAll(System.Predicate(Of T))
  name.vb: FindAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-int32-system-predicate((-0)))
  name: FindIndex(int, int, Predicate<T>)
  nameWithType: List<T>.FindIndex(int, int, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(int, int, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Integer, Integer, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(Integer, Integer, System.Predicate(Of T))
  name.vb: FindIndex(Integer, Integer, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-predicate((-0)))
  name: FindIndex(int, Predicate<T>)
  nameWithType: List<T>.FindIndex(int, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(int, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Integer, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(Integer, System.Predicate(Of T))
  name.vb: FindIndex(Integer, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-predicate((-0)))
  name: FindIndex(Predicate<T>)
  nameWithType: List<T>.FindIndex(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Predicate(Of T))
  name.vb: FindIndex(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-predicate((-0)))
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-predicate((-0)))
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlast
  name: FindLast(Predicate<T>)
  nameWithType: List<T>.FindLast(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLast(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLast(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLast(System.Predicate(Of T))
  name.vb: FindLast(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlast
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlast
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-int32-system-predicate((-0)))
  name: FindLastIndex(int, int, Predicate<T>)
  nameWithType: List<T>.FindLastIndex(int, int, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(int, int, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Integer, Integer, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(Integer, Integer, System.Predicate(Of T))
  name.vb: FindLastIndex(Integer, Integer, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-predicate((-0)))
  name: FindLastIndex(int, Predicate<T>)
  nameWithType: List<T>.FindLastIndex(int, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(int, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Integer, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(Integer, System.Predicate(Of T))
  name.vb: FindLastIndex(Integer, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-predicate((-0)))
  name: FindLastIndex(Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Predicate(Of T))
  name.vb: FindLastIndex(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-predicate((-0)))
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-predicate((-0)))
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
  commentId: M:System.Collections.Generic.List`1.ForEach(System.Action{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.foreach
  name: ForEach(Action<T>)
  nameWithType: List<T>.ForEach(Action<T>)
  fullName: System.Collections.Generic.List<T>.ForEach(System.Action<T>)
  nameWithType.vb: List(Of T).ForEach(Action(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).ForEach(System.Action(Of T))
  name.vb: ForEach(Action(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.foreach
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.foreach
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.GetEnumerator
  commentId: M:System.Collections.Generic.List`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getenumerator
  name: GetEnumerator()
  nameWithType: List<T>.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.GetEnumerator()
  nameWithType.vb: List(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getrange
  name: GetRange(int, int)
  nameWithType: List<T>.GetRange(int, int)
  fullName: System.Collections.Generic.List<T>.GetRange(int, int)
  nameWithType.vb: List(Of T).GetRange(Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of T).GetRange(Integer, Integer)
  name.vb: GetRange(Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getrange
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getrange
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0)
  name: IndexOf(T)
  nameWithType: List<T>.IndexOf(T)
  fullName: System.Collections.Generic.List<T>.IndexOf(T)
  nameWithType.vb: List(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0)
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0)
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32)
  name: IndexOf(T, int)
  nameWithType: List<T>.IndexOf(T, int)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, int)
  nameWithType.vb: List(Of T).IndexOf(T, Integer)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, Integer)
  name.vb: IndexOf(T, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32)
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32)
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32-system-int32)
  name: IndexOf(T, int, int)
  nameWithType: List<T>.IndexOf(T, int, int)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, int, int)
  nameWithType.vb: List(Of T).IndexOf(T, Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, Integer, Integer)
  name.vb: IndexOf(T, Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32-system-int32)
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32-system-int32)
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.List`1.Insert(System.Int32,`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insert
  name: Insert(int, T)
  nameWithType: List<T>.Insert(int, T)
  fullName: System.Collections.Generic.List<T>.Insert(int, T)
  nameWithType.vb: List(Of T).Insert(Integer, T)
  fullName.vb: System.Collections.Generic.List(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insertrange
  name: InsertRange(int, IEnumerable<T>)
  nameWithType: List<T>.InsertRange(int, IEnumerable<T>)
  fullName: System.Collections.Generic.List<T>.InsertRange(int, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: List(Of T).InsertRange(Integer, IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).InsertRange(Integer, System.Collections.Generic.IEnumerable(Of T))
  name.vb: InsertRange(Integer, IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insertrange
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insertrange
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0)
  name: LastIndexOf(T)
  nameWithType: List<T>.LastIndexOf(T)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T)
  nameWithType.vb: List(Of T).LastIndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0)
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0)
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32)
  name: LastIndexOf(T, int)
  nameWithType: List<T>.LastIndexOf(T, int)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, int)
  nameWithType.vb: List(Of T).LastIndexOf(T, Integer)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, Integer)
  name.vb: LastIndexOf(T, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32)
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32)
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32-system-int32)
  name: LastIndexOf(T, int, int)
  nameWithType: List<T>.LastIndexOf(T, int, int)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, int, int)
  nameWithType.vb: List(Of T).LastIndexOf(T, Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, Integer, Integer)
  name.vb: LastIndexOf(T, Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32-system-int32)
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32-system-int32)
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.Remove(`0)
  commentId: M:System.Collections.Generic.List`1.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.remove
  name: Remove(T)
  nameWithType: List<T>.Remove(T)
  fullName: System.Collections.Generic.List<T>.Remove(T)
  nameWithType.vb: List(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.List(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.remove
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeall
  name: RemoveAll(Predicate<T>)
  nameWithType: List<T>.RemoveAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).RemoveAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAll(System.Predicate(Of T))
  name.vb: RemoveAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.List`1.RemoveAt(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeat
  name: RemoveAt(int)
  nameWithType: List<T>.RemoveAt(int)
  fullName: System.Collections.Generic.List<T>.RemoveAt(int)
  nameWithType.vb: List(Of T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removerange
  name: RemoveRange(int, int)
  nameWithType: List<T>.RemoveRange(int, int)
  fullName: System.Collections.Generic.List<T>.RemoveRange(int, int)
  nameWithType.vb: List(Of T).RemoveRange(Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveRange(Integer, Integer)
  name.vb: RemoveRange(Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removerange
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removerange
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.Reverse
  commentId: M:System.Collections.Generic.List`1.Reverse
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse
  name: Reverse()
  nameWithType: List<T>.Reverse()
  fullName: System.Collections.Generic.List<T>.Reverse()
  nameWithType.vb: List(Of T).Reverse()
  fullName.vb: System.Collections.Generic.List(Of T).Reverse()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse
  - name: (
  - name: )
- uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse(system-int32-system-int32)
  name: Reverse(int, int)
  nameWithType: List<T>.Reverse(int, int)
  fullName: System.Collections.Generic.List<T>.Reverse(int, int)
  nameWithType.vb: List(Of T).Reverse(Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of T).Reverse(Integer, Integer)
  name.vb: Reverse(Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse(system-int32-system-int32)
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse(system-int32-system-int32)
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.Slice(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.Slice(System.Int32,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.slice
  name: Slice(int, int)
  nameWithType: List<T>.Slice(int, int)
  fullName: System.Collections.Generic.List<T>.Slice(int, int)
  nameWithType.vb: List(Of T).Slice(Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of T).Slice(Integer, Integer)
  name.vb: Slice(Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Slice(System.Int32,System.Int32)
    name: Slice
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.slice
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Slice(System.Int32,System.Int32)
    name: Slice
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.slice
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.Sort
  commentId: M:System.Collections.Generic.List`1.Sort
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort
  name: Sort()
  nameWithType: List<T>.Sort()
  fullName: System.Collections.Generic.List<T>.Sort()
  nameWithType.vb: List(Of T).Sort()
  fullName.vb: System.Collections.Generic.List(Of T).Sort()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort
  - name: (
  - name: )
- uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-collections-generic-icomparer((-0)))
  name: Sort(IComparer<T>)
  nameWithType: List<T>.Sort(IComparer<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).Sort(IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-comparison((-0)))
  name: Sort(Comparison<T>)
  nameWithType: List<T>.Sort(Comparison<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Comparison<T>)
  nameWithType.vb: List(Of T).Sort(Comparison(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Comparison(Of T))
  name.vb: Sort(Comparison(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-comparison((-0)))
  - name: (
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-comparison((-0)))
  - name: (
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-int32-system-int32-system-collections-generic-icomparer((-0)))
  name: Sort(int, int, IComparer<T>)
  nameWithType: List<T>.Sort(int, int, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.Sort(int, int, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).Sort(Integer, Integer, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(Integer, Integer, System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(Integer, Integer, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-int32-system-int32-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-int32-system-int32-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.ToArray
  commentId: M:System.Collections.Generic.List`1.ToArray
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.toarray
  name: ToArray()
  nameWithType: List<T>.ToArray()
  fullName: System.Collections.Generic.List<T>.ToArray()
  nameWithType.vb: List(Of T).ToArray()
  fullName.vb: System.Collections.Generic.List(Of T).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.toarray
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.toarray
  - name: (
  - name: )
- uid: System.Collections.Generic.List`1.TrimExcess
  commentId: M:System.Collections.Generic.List`1.TrimExcess
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trimexcess
  name: TrimExcess()
  nameWithType: List<T>.TrimExcess()
  fullName: System.Collections.Generic.List<T>.TrimExcess()
  nameWithType.vb: List(Of T).TrimExcess()
  fullName.vb: System.Collections.Generic.List(Of T).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trimexcess
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trimexcess
  - name: (
  - name: )
- uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trueforall
  name: TrueForAll(Predicate<T>)
  nameWithType: List<T>.TrueForAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.TrueForAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).TrueForAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).TrueForAll(System.Predicate(Of T))
  name.vb: TrueForAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trueforall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trueforall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.Capacity
  commentId: P:System.Collections.Generic.List`1.Capacity
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.capacity
  name: Capacity
  nameWithType: List<T>.Capacity
  fullName: System.Collections.Generic.List<T>.Capacity
  nameWithType.vb: List(Of T).Capacity
  fullName.vb: System.Collections.Generic.List(Of T).Capacity
- uid: System.Collections.Generic.List`1.Count
  commentId: P:System.Collections.Generic.List`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.count
  name: Count
  nameWithType: List<T>.Count
  fullName: System.Collections.Generic.List<T>.Count
  nameWithType.vb: List(Of T).Count
  fullName.vb: System.Collections.Generic.List(Of T).Count
- uid: System.Collections.Generic.List`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.List`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: List<T>.this[int]
  fullName: System.Collections.Generic.List<T>.this[int]
  nameWithType.vb: List(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.List(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments,ShapeEngine.Core.Structs.LineDrawingInfo)
  commentId: M:ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments,ShapeEngine.Core.Structs.LineDrawingInfo)
  href: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeSegmentDrawing_Draw_ShapeEngine_Core_Shapes_Segments_ShapeEngine_Core_Structs_LineDrawingInfo_
  name: Draw(Segments, LineDrawingInfo)
  nameWithType: ShapeSegmentDrawing.Draw(Segments, LineDrawingInfo)
  fullName: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments, ShapeEngine.Core.Structs.LineDrawingInfo)
  spec.csharp:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments,ShapeEngine.Core.Structs.LineDrawingInfo)
    name: Draw
    href: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeSegmentDrawing_Draw_ShapeEngine_Core_Shapes_Segments_ShapeEngine_Core_Structs_LineDrawingInfo_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segments
    name: Segments
    href: ShapeEngine.Core.Shapes.Segments.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineDrawingInfo
    name: LineDrawingInfo
    href: ShapeEngine.Core.Structs.LineDrawingInfo.html
  - name: )
  spec.vb:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments,ShapeEngine.Core.Structs.LineDrawingInfo)
    name: Draw
    href: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeSegmentDrawing_Draw_ShapeEngine_Core_Shapes_Segments_ShapeEngine_Core_Structs_LineDrawingInfo_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segments
    name: Segments
    href: ShapeEngine.Core.Shapes.Segments.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineDrawingInfo
    name: LineDrawingInfo
    href: ShapeEngine.Core.Structs.LineDrawingInfo.html
  - name: )
- uid: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing
  commentId: T:ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing
  parent: ShapeEngine.StaticLib.Drawing
  href: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.html
  name: ShapeSegmentDrawing
  nameWithType: ShapeSegmentDrawing
  fullName: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing
- uid: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments,System.Single,System.Collections.Generic.List{ShapeEngine.Color.ColorRgba},ShapeEngine.Core.Structs.LineCapType,System.Int32)
  commentId: M:ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments,System.Single,System.Collections.Generic.List{ShapeEngine.Color.ColorRgba},ShapeEngine.Core.Structs.LineCapType,System.Int32)
  isExternal: true
  href: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeSegmentDrawing_Draw_ShapeEngine_Core_Shapes_Segments_System_Single_System_Collections_Generic_List_ShapeEngine_Color_ColorRgba__ShapeEngine_Core_Structs_LineCapType_System_Int32_
  name: Draw(Segments, float, List<ColorRgba>, LineCapType, int)
  nameWithType: ShapeSegmentDrawing.Draw(Segments, float, List<ColorRgba>, LineCapType, int)
  fullName: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments, float, System.Collections.Generic.List<ShapeEngine.Color.ColorRgba>, ShapeEngine.Core.Structs.LineCapType, int)
  nameWithType.vb: ShapeSegmentDrawing.Draw(Segments, Single, List(Of ColorRgba), LineCapType, Integer)
  fullName.vb: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments, Single, System.Collections.Generic.List(Of ShapeEngine.Color.ColorRgba), ShapeEngine.Core.Structs.LineCapType, Integer)
  name.vb: Draw(Segments, Single, List(Of ColorRgba), LineCapType, Integer)
  spec.csharp:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments,System.Single,System.Collections.Generic.List{ShapeEngine.Color.ColorRgba},ShapeEngine.Core.Structs.LineCapType,System.Int32)
    name: Draw
    href: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeSegmentDrawing_Draw_ShapeEngine_Core_Shapes_Segments_System_Single_System_Collections_Generic_List_ShapeEngine_Color_ColorRgba__ShapeEngine_Core_Structs_LineCapType_System_Int32_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segments
    name: Segments
    href: ShapeEngine.Core.Shapes.Segments.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineCapType
    name: LineCapType
    href: ShapeEngine.Core.Structs.LineCapType.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.Draw(ShapeEngine.Core.Shapes.Segments,System.Single,System.Collections.Generic.List{ShapeEngine.Color.ColorRgba},ShapeEngine.Core.Structs.LineCapType,System.Int32)
    name: Draw
    href: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeSegmentDrawing_Draw_ShapeEngine_Core_Shapes_Segments_System_Single_System_Collections_Generic_List_ShapeEngine_Color_ColorRgba__ShapeEngine_Core_Structs_LineCapType_System_Int32_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segments
    name: Segments
    href: ShapeEngine.Core.Shapes.Segments.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: )
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineCapType
    name: LineCapType
    href: ShapeEngine.Core.Structs.LineCapType.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.DrawGlow(ShapeEngine.Core.Shapes.Segments,System.Single,System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Color.ColorRgba,System.Int32,ShapeEngine.Core.Structs.LineCapType,System.Int32)
  commentId: M:ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.DrawGlow(ShapeEngine.Core.Shapes.Segments,System.Single,System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Color.ColorRgba,System.Int32,ShapeEngine.Core.Structs.LineCapType,System.Int32)
  isExternal: true
  href: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeSegmentDrawing_DrawGlow_ShapeEngine_Core_Shapes_Segments_System_Single_System_Single_ShapeEngine_Color_ColorRgba_ShapeEngine_Color_ColorRgba_System_Int32_ShapeEngine_Core_Structs_LineCapType_System_Int32_
  name: DrawGlow(Segments, float, float, ColorRgba, ColorRgba, int, LineCapType, int)
  nameWithType: ShapeSegmentDrawing.DrawGlow(Segments, float, float, ColorRgba, ColorRgba, int, LineCapType, int)
  fullName: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.DrawGlow(ShapeEngine.Core.Shapes.Segments, float, float, ShapeEngine.Color.ColorRgba, ShapeEngine.Color.ColorRgba, int, ShapeEngine.Core.Structs.LineCapType, int)
  nameWithType.vb: ShapeSegmentDrawing.DrawGlow(Segments, Single, Single, ColorRgba, ColorRgba, Integer, LineCapType, Integer)
  fullName.vb: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.DrawGlow(ShapeEngine.Core.Shapes.Segments, Single, Single, ShapeEngine.Color.ColorRgba, ShapeEngine.Color.ColorRgba, Integer, ShapeEngine.Core.Structs.LineCapType, Integer)
  name.vb: DrawGlow(Segments, Single, Single, ColorRgba, ColorRgba, Integer, LineCapType, Integer)
  spec.csharp:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.DrawGlow(ShapeEngine.Core.Shapes.Segments,System.Single,System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Color.ColorRgba,System.Int32,ShapeEngine.Core.Structs.LineCapType,System.Int32)
    name: DrawGlow
    href: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeSegmentDrawing_DrawGlow_ShapeEngine_Core_Shapes_Segments_System_Single_System_Single_ShapeEngine_Color_ColorRgba_ShapeEngine_Color_ColorRgba_System_Int32_ShapeEngine_Core_Structs_LineCapType_System_Int32_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segments
    name: Segments
    href: ShapeEngine.Core.Shapes.Segments.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineCapType
    name: LineCapType
    href: ShapeEngine.Core.Structs.LineCapType.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.DrawGlow(ShapeEngine.Core.Shapes.Segments,System.Single,System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Color.ColorRgba,System.Int32,ShapeEngine.Core.Structs.LineCapType,System.Int32)
    name: DrawGlow
    href: ShapeEngine.StaticLib.Drawing.ShapeSegmentDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeSegmentDrawing_DrawGlow_ShapeEngine_Core_Shapes_Segments_System_Single_System_Single_ShapeEngine_Color_ColorRgba_ShapeEngine_Color_ColorRgba_System_Int32_ShapeEngine_Core_Structs_LineCapType_System_Int32_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segments
    name: Segments
    href: ShapeEngine.Core.Shapes.Segments.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineCapType
    name: LineCapType
    href: ShapeEngine.Core.Structs.LineCapType.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ShapeEngine.StaticLib.Drawing
  commentId: N:ShapeEngine.StaticLib.Drawing
  href: ShapeEngine.html
  name: ShapeEngine.StaticLib.Drawing
  nameWithType: ShapeEngine.StaticLib.Drawing
  fullName: ShapeEngine.StaticLib.Drawing
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.StaticLib
    name: StaticLib
    href: ShapeEngine.StaticLib.html
  - name: .
  - uid: ShapeEngine.StaticLib.Drawing
    name: Drawing
    href: ShapeEngine.StaticLib.Drawing.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.StaticLib
    name: StaticLib
    href: ShapeEngine.StaticLib.html
  - name: .
  - uid: ShapeEngine.StaticLib.Drawing
    name: Drawing
    href: ShapeEngine.StaticLib.Drawing.html
- uid: ShapeEngine.Core.Shapes.Segments.#ctor*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.#ctor
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments__ctor
  name: Segments
  nameWithType: Segments.Segments
  fullName: ShapeEngine.Core.Shapes.Segments.Segments
  nameWithType.vb: Segments.New
  fullName.vb: ShapeEngine.Core.Shapes.Segments.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ShapeEngine.Core.Shapes.Segments.Equals*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.Equals
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_Equals_ShapeEngine_Core_Shapes_Segments_
  name: Equals
  nameWithType: Segments.Equals
  fullName: ShapeEngine.Core.Shapes.Segments.Equals
- uid: ShapeEngine.Core.Shapes.Segments
  commentId: T:ShapeEngine.Core.Shapes.Segments
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Segments.html
  name: Segments
  nameWithType: Segments
  fullName: ShapeEngine.Core.Shapes.Segments
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetHashCode
  commentId: M:ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetHashCode
  parent: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}
  definition: ShapeEngine.Core.Shapes.ShapeList`1.GetHashCode
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetHashCode
  name: GetHashCode()
  nameWithType: ShapeList<Segment>.GetHashCode()
  fullName: ShapeEngine.Core.Shapes.ShapeList<ShapeEngine.Core.Shapes.Segment>.GetHashCode()
  nameWithType.vb: ShapeList(Of Segment).GetHashCode()
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of ShapeEngine.Core.Shapes.Segment).GetHashCode()
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetHashCode
    name: GetHashCode
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Segment}.GetHashCode
    name: GetHashCode
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetHashCode
  - name: (
  - name: )
- uid: ShapeEngine.Core.Shapes.Segments.GetHashCode*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.GetHashCode
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_GetHashCode
  name: GetHashCode
  nameWithType: Segments.GetHashCode
  fullName: ShapeEngine.Core.Shapes.Segments.GetHashCode
- uid: ShapeEngine.Core.Shapes.ShapeList`1.GetHashCode
  commentId: M:ShapeEngine.Core.Shapes.ShapeList`1.GetHashCode
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetHashCode
  name: GetHashCode()
  nameWithType: ShapeList<T>.GetHashCode()
  fullName: ShapeEngine.Core.Shapes.ShapeList<T>.GetHashCode()
  nameWithType.vb: ShapeList(Of T).GetHashCode()
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of T).GetHashCode()
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.GetHashCode
    name: GetHashCode
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.GetHashCode
    name: GetHashCode
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetHashCode
  - name: (
  - name: )
- uid: ShapeEngine.Core.Shapes.Segments.GetSegment*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.GetSegment
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_GetSegment_System_Int32_
  name: GetSegment
  nameWithType: Segments.GetSegment
  fullName: ShapeEngine.Core.Shapes.Segments.GetSegment
- uid: ShapeEngine.Core.Shapes.Segment
  commentId: T:ShapeEngine.Core.Shapes.Segment
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Segment.html
  name: Segment
  nameWithType: Segment
  fullName: ShapeEngine.Core.Shapes.Segment
- uid: ShapeEngine.Core.Shapes.Segments.GetUniquePoints*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.GetUniquePoints
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_GetUniquePoints
  name: GetUniquePoints
  nameWithType: Segments.GetUniquePoints
  fullName: ShapeEngine.Core.Shapes.Segments.GetUniquePoints
- uid: ShapeEngine.Core.Shapes.Points
  commentId: T:ShapeEngine.Core.Shapes.Points
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Points.html
  name: Points
  nameWithType: Points
  fullName: ShapeEngine.Core.Shapes.Points
- uid: ShapeEngine.Core.Shapes.Segments.GetUniqueSegments*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.GetUniqueSegments
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_GetUniqueSegments
  name: GetUniqueSegments
  nameWithType: Segments.GetUniqueSegments
  fullName: ShapeEngine.Core.Shapes.Segments.GetUniqueSegments
- uid: ShapeEngine.Core.Shapes.Segments.GetRandomSegment*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.GetRandomSegment
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_GetRandomSegment
  name: GetRandomSegment
  nameWithType: Segments.GetRandomSegment
  fullName: ShapeEngine.Core.Shapes.Segments.GetRandomSegment
- uid: ShapeEngine.Core.Shapes.Segments.GetRandomPoint*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.GetRandomPoint
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_GetRandomPoint
  name: GetRandomPoint
  nameWithType: Segments.GetRandomPoint
  fullName: ShapeEngine.Core.Shapes.Segments.GetRandomPoint
- uid: System.Numerics.Vector2
  commentId: T:System.Numerics.Vector2
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: ShapeEngine.Core.Shapes.Segments.GetRandomPoints*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.GetRandomPoints
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_GetRandomPoints_System_Int32_
  name: GetRandomPoints
  nameWithType: Segments.GetRandomPoints
  fullName: ShapeEngine.Core.Shapes.Segments.GetRandomPoints
- uid: ShapeEngine.Core.Shapes.Segments.GetCount*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.GetCount
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_GetCount_ShapeEngine_Core_Shapes_Segment_
  name: GetCount
  nameWithType: Segments.GetCount
  fullName: ShapeEngine.Core.Shapes.Segments.GetCount
- uid: ShapeEngine.Core.Shapes.Segments.GetCountSimilar*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.GetCountSimilar
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_GetCountSimilar_ShapeEngine_Core_Shapes_Segment_
  name: GetCountSimilar
  nameWithType: Segments.GetCountSimilar
  fullName: ShapeEngine.Core.Shapes.Segments.GetCountSimilar
- uid: ShapeEngine.Core.Shapes.Segments.ContainsSegment*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.ContainsSegment
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_ContainsSegment_ShapeEngine_Core_Shapes_Segment_
  name: ContainsSegment
  nameWithType: Segments.ContainsSegment
  fullName: ShapeEngine.Core.Shapes.Segments.ContainsSegment
- uid: ShapeEngine.Core.Shapes.Segments.ContainsSegmentSimilar*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.ContainsSegmentSimilar
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_ContainsSegmentSimilar_ShapeEngine_Core_Shapes_Segment_
  name: ContainsSegmentSimilar
  nameWithType: Segments.ContainsSegmentSimilar
  fullName: ShapeEngine.Core.Shapes.Segments.ContainsSegmentSimilar
- uid: ShapeEngine.Core.Shapes.Segments.ChangeRotation*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.ChangeRotation
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_ChangeRotation_System_Single_System_Single_
  name: ChangeRotation
  nameWithType: Segments.ChangeRotation
  fullName: ShapeEngine.Core.Shapes.Segments.ChangeRotation
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: ShapeEngine.Core.Shapes.Segments.SetRotation*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.SetRotation
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_SetRotation_System_Single_System_Single_
  name: SetRotation
  nameWithType: Segments.SetRotation
  fullName: ShapeEngine.Core.Shapes.Segments.SetRotation
- uid: ShapeEngine.Core.Shapes.Segments.ScaleLength*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.ScaleLength
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_ScaleLength_System_Single_System_Single_
  name: ScaleLength
  nameWithType: Segments.ScaleLength
  fullName: ShapeEngine.Core.Shapes.Segments.ScaleLength
- uid: ShapeEngine.Core.Structs.Size
  commentId: T:ShapeEngine.Core.Structs.Size
  parent: ShapeEngine.Core.Structs
  href: ShapeEngine.Core.Structs.Size.html
  name: Size
  nameWithType: Size
  fullName: ShapeEngine.Core.Structs.Size
- uid: ShapeEngine.Core.Structs
  commentId: N:ShapeEngine.Core.Structs
  href: ShapeEngine.html
  name: ShapeEngine.Core.Structs
  nameWithType: ShapeEngine.Core.Structs
  fullName: ShapeEngine.Core.Structs
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Structs
    name: Structs
    href: ShapeEngine.Core.Structs.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Structs
    name: Structs
    href: ShapeEngine.Core.Structs.html
- uid: ShapeEngine.Core.Shapes.Segments.ChangeLength*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.ChangeLength
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_ChangeLength_System_Single_System_Single_
  name: ChangeLength
  nameWithType: Segments.ChangeLength
  fullName: ShapeEngine.Core.Shapes.Segments.ChangeLength
- uid: ShapeEngine.Core.Shapes.Segments.SetSize*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.SetSize
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_SetSize_System_Single_System_Single_
  name: SetSize
  nameWithType: Segments.SetSize
  fullName: ShapeEngine.Core.Shapes.Segments.SetSize
- uid: ShapeEngine.Core.Shapes.Segments.ChangePosition*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.ChangePosition
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_ChangePosition_System_Numerics_Vector2_
  name: ChangePosition
  nameWithType: Segments.ChangePosition
  fullName: ShapeEngine.Core.Shapes.Segments.ChangePosition
- uid: ShapeEngine.Core.Shapes.Segments.SetPosition*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.SetPosition
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_SetPosition_System_Numerics_Vector2_System_Single_
  name: SetPosition
  nameWithType: Segments.SetPosition
  fullName: ShapeEngine.Core.Shapes.Segments.SetPosition
- uid: ShapeEngine.Core.Shapes.Segments.ApplyOffset*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.ApplyOffset
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_ApplyOffset_ShapeEngine_Core_Structs_Transform2D_System_Single_
  name: ApplyOffset
  nameWithType: Segments.ApplyOffset
  fullName: ShapeEngine.Core.Shapes.Segments.ApplyOffset
- uid: ShapeEngine.Core.Structs.Transform2D
  commentId: T:ShapeEngine.Core.Structs.Transform2D
  parent: ShapeEngine.Core.Structs
  href: ShapeEngine.Core.Structs.Transform2D.html
  name: Transform2D
  nameWithType: Transform2D
  fullName: ShapeEngine.Core.Structs.Transform2D
- uid: ShapeEngine.Core.Shapes.Segments.SetTransform*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.SetTransform
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_SetTransform_ShapeEngine_Core_Structs_Transform2D_System_Single_
  name: SetTransform
  nameWithType: Segments.SetTransform
  fullName: ShapeEngine.Core.Shapes.Segments.SetTransform
- uid: ShapeEngine.Core.Shapes.Segments.ChangeRotationCopy*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.ChangeRotationCopy
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_ChangeRotationCopy_System_Single_System_Single_
  name: ChangeRotationCopy
  nameWithType: Segments.ChangeRotationCopy
  fullName: ShapeEngine.Core.Shapes.Segments.ChangeRotationCopy
- uid: ShapeEngine.Core.Shapes.Segments.SetRotationCopy*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.SetRotationCopy
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_SetRotationCopy_System_Single_System_Single_
  name: SetRotationCopy
  nameWithType: Segments.SetRotationCopy
  fullName: ShapeEngine.Core.Shapes.Segments.SetRotationCopy
- uid: ShapeEngine.Core.Shapes.Segments.ScaleLengthCopy*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.ScaleLengthCopy
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_ScaleLengthCopy_System_Single_System_Single_
  name: ScaleLengthCopy
  nameWithType: Segments.ScaleLengthCopy
  fullName: ShapeEngine.Core.Shapes.Segments.ScaleLengthCopy
- uid: ShapeEngine.Core.Shapes.Segments.ChangeLengthCopy*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.ChangeLengthCopy
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_ChangeLengthCopy_System_Single_System_Single_
  name: ChangeLengthCopy
  nameWithType: Segments.ChangeLengthCopy
  fullName: ShapeEngine.Core.Shapes.Segments.ChangeLengthCopy
- uid: ShapeEngine.Core.Shapes.Segments.SetLengthCopy*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.SetLengthCopy
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_SetLengthCopy_System_Single_System_Single_
  name: SetLengthCopy
  nameWithType: Segments.SetLengthCopy
  fullName: ShapeEngine.Core.Shapes.Segments.SetLengthCopy
- uid: ShapeEngine.Core.Shapes.Segments.ChangePositionCopy*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.ChangePositionCopy
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_ChangePositionCopy_System_Numerics_Vector2_
  name: ChangePositionCopy
  nameWithType: Segments.ChangePositionCopy
  fullName: ShapeEngine.Core.Shapes.Segments.ChangePositionCopy
- uid: ShapeEngine.Core.Shapes.Segments.SetPositionCopy*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.SetPositionCopy
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_SetPositionCopy_System_Numerics_Vector2_System_Single_
  name: SetPositionCopy
  nameWithType: Segments.SetPositionCopy
  fullName: ShapeEngine.Core.Shapes.Segments.SetPositionCopy
- uid: ShapeEngine.Core.Shapes.Segments.ApplyOffsetCopy*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.ApplyOffsetCopy
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_ApplyOffsetCopy_ShapeEngine_Core_Structs_Transform2D_System_Single_
  name: ApplyOffsetCopy
  nameWithType: Segments.ApplyOffsetCopy
  fullName: ShapeEngine.Core.Shapes.Segments.ApplyOffsetCopy
- uid: ShapeEngine.Core.Shapes.Segments.SetTransformCopy*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.SetTransformCopy
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_SetTransformCopy_ShapeEngine_Core_Structs_Transform2D_System_Single_
  name: SetTransformCopy
  nameWithType: Segments.SetTransformCopy
  fullName: ShapeEngine.Core.Shapes.Segments.SetTransformCopy
- uid: ShapeEngine.Core.Shapes.Segments.GetClosestPointSegmentsPoint*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.GetClosestPointSegmentsPoint
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_GetClosestPointSegmentsPoint_System_Collections_Generic_List_System_Numerics_Vector2__System_Numerics_Vector2_System_Single__
  name: GetClosestPointSegmentsPoint
  nameWithType: Segments.GetClosestPointSegmentsPoint
  fullName: ShapeEngine.Core.Shapes.Segments.GetClosestPointSegmentsPoint
- uid: System.Collections.Generic.List{System.Numerics.Vector2}
  commentId: T:System.Collections.Generic.List{System.Numerics.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vector2>
  nameWithType: List<Vector2>
  fullName: System.Collections.Generic.List<System.Numerics.Vector2>
  nameWithType.vb: List(Of Vector2)
  fullName.vb: System.Collections.Generic.List(Of System.Numerics.Vector2)
  name.vb: List(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: )
- uid: ShapeEngine.Core.Shapes.Segments.GetClosestPoint*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.GetClosestPoint
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_GetClosestPoint_System_Numerics_Vector2_System_Single__
  name: GetClosestPoint
  nameWithType: Segments.GetClosestPoint
  fullName: ShapeEngine.Core.Shapes.Segments.GetClosestPoint
- uid: ShapeEngine.Core.Structs.CollisionPoint
  commentId: T:ShapeEngine.Core.Structs.CollisionPoint
  parent: ShapeEngine.Core.Structs
  href: ShapeEngine.Core.Structs.CollisionPoint.html
  name: CollisionPoint
  nameWithType: CollisionPoint
  fullName: ShapeEngine.Core.Structs.CollisionPoint
- uid: ShapeEngine.Core.Shapes.Segments.GetClosestVertex*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.GetClosestVertex
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_GetClosestVertex_System_Numerics_Vector2_System_Single__System_Int32__
  name: GetClosestVertex
  nameWithType: Segments.GetClosestVertex
  fullName: ShapeEngine.Core.Shapes.Segments.GetClosestVertex
- uid: ShapeEngine.Core.Shapes.Line
  commentId: T:ShapeEngine.Core.Shapes.Line
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Line.html
  name: Line
  nameWithType: Line
  fullName: ShapeEngine.Core.Shapes.Line
- uid: ShapeEngine.Core.Structs.ClosestPointResult
  commentId: T:ShapeEngine.Core.Structs.ClosestPointResult
  parent: ShapeEngine.Core.Structs
  href: ShapeEngine.Core.Structs.ClosestPointResult.html
  name: ClosestPointResult
  nameWithType: ClosestPointResult
  fullName: ShapeEngine.Core.Structs.ClosestPointResult
- uid: ShapeEngine.Core.Shapes.Ray
  commentId: T:ShapeEngine.Core.Shapes.Ray
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Ray.html
  name: Ray
  nameWithType: Ray
  fullName: ShapeEngine.Core.Shapes.Ray
- uid: ShapeEngine.Core.Shapes.Circle
  commentId: T:ShapeEngine.Core.Shapes.Circle
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Circle.html
  name: Circle
  nameWithType: Circle
  fullName: ShapeEngine.Core.Shapes.Circle
- uid: ShapeEngine.Core.Shapes.Triangle
  commentId: T:ShapeEngine.Core.Shapes.Triangle
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Triangle.html
  name: Triangle
  nameWithType: Triangle
  fullName: ShapeEngine.Core.Shapes.Triangle
- uid: ShapeEngine.Core.Shapes.Quad
  commentId: T:ShapeEngine.Core.Shapes.Quad
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Quad.html
  name: Quad
  nameWithType: Quad
  fullName: ShapeEngine.Core.Shapes.Quad
- uid: ShapeEngine.Core.Shapes.Rect
  commentId: T:ShapeEngine.Core.Shapes.Rect
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Rect.html
  name: Rect
  nameWithType: Rect
  fullName: ShapeEngine.Core.Shapes.Rect
- uid: ShapeEngine.Core.Shapes.Polygon
  commentId: T:ShapeEngine.Core.Shapes.Polygon
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Polygon.html
  name: Polygon
  nameWithType: Polygon
  fullName: ShapeEngine.Core.Shapes.Polygon
- uid: ShapeEngine.Core.Shapes.Polyline
  commentId: T:ShapeEngine.Core.Shapes.Polyline
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Polyline.html
  name: Polyline
  nameWithType: Polyline
  fullName: ShapeEngine.Core.Shapes.Polyline
- uid: ShapeEngine.Core.Shapes.Segments.GetClosestSegment*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.GetClosestSegment
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_GetClosestSegment_System_Numerics_Vector2_System_Single__
  name: GetClosestSegment
  nameWithType: Segments.GetClosestSegment
  fullName: ShapeEngine.Core.Shapes.Segments.GetClosestSegment
- uid: System.ValueTuple{ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.Structs.CollisionPoint}
  commentId: T:System.ValueTuple{ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.Structs.CollisionPoint}
  parent: System
  definition: System.ValueTuple`2
  href: ShapeEngine.Core.Shapes.Segment.html
  name: (Segment segment, CollisionPoint segmentPoint)
  nameWithType: (Segment segment, CollisionPoint segmentPoint)
  fullName: (ShapeEngine.Core.Shapes.Segment segment, ShapeEngine.Core.Structs.CollisionPoint segmentPoint)
  nameWithType.vb: (segment As Segment, segmentPoint As CollisionPoint)
  fullName.vb: (segment As ShapeEngine.Core.Shapes.Segment, segmentPoint As ShapeEngine.Core.Structs.CollisionPoint)
  name.vb: (segment As Segment, segmentPoint As CollisionPoint)
  spec.csharp:
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: " "
  - uid: System.ValueTuple{ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.Structs.CollisionPoint}.segment
    name: segment
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.shapes.segment,shapeengine.core.structs.collisionpoint-.segment
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.CollisionPoint
    name: CollisionPoint
    href: ShapeEngine.Core.Structs.CollisionPoint.html
  - name: " "
  - uid: System.ValueTuple{ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.Structs.CollisionPoint}.segmentPoint
    name: segmentPoint
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.shapes.segment,shapeengine.core.structs.collisionpoint-.segmentpoint
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.Structs.CollisionPoint}.segment
    name: segment
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.shapes.segment,shapeengine.core.structs.collisionpoint-.segment
  - name: " "
  - name: As
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.Structs.CollisionPoint}.segmentPoint
    name: segmentPoint
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.shapes.segment,shapeengine.core.structs.collisionpoint-.segmentpoint
  - name: " "
  - name: As
  - name: " "
  - uid: ShapeEngine.Core.Structs.CollisionPoint
    name: CollisionPoint
    href: ShapeEngine.Core.Structs.CollisionPoint.html
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsSegment*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsSegment
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapSegmentsSegment_System_Collections_Generic_List_ShapeEngine_Core_Shapes_Segment__System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapSegmentsSegment
  nameWithType: Segments.OverlapSegmentsSegment
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsSegment
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsLine*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsLine
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapSegmentsLine_System_Collections_Generic_List_ShapeEngine_Core_Shapes_Segment__System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapSegmentsLine
  nameWithType: Segments.OverlapSegmentsLine
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsLine
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsRay*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsRay
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapSegmentsRay_System_Collections_Generic_List_ShapeEngine_Core_Shapes_Segment__System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapSegmentsRay
  nameWithType: Segments.OverlapSegmentsRay
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsRay
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsCircle*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsCircle
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapSegmentsCircle_System_Collections_Generic_List_ShapeEngine_Core_Shapes_Segment__System_Numerics_Vector2_System_Single_
  name: OverlapSegmentsCircle
  nameWithType: Segments.OverlapSegmentsCircle
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsCircle
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsTriangle*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsTriangle
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapSegmentsTriangle_System_Collections_Generic_List_ShapeEngine_Core_Shapes_Segment__System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapSegmentsTriangle
  nameWithType: Segments.OverlapSegmentsTriangle
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsTriangle
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsQuad*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsQuad
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapSegmentsQuad_System_Collections_Generic_List_ShapeEngine_Core_Shapes_Segment__System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapSegmentsQuad
  nameWithType: Segments.OverlapSegmentsQuad
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsQuad
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsRect*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsRect
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapSegmentsRect_System_Collections_Generic_List_ShapeEngine_Core_Shapes_Segment__System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapSegmentsRect
  nameWithType: Segments.OverlapSegmentsRect
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsRect
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsPolygon*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsPolygon
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapSegmentsPolygon_System_Collections_Generic_List_ShapeEngine_Core_Shapes_Segment__System_Collections_Generic_List_System_Numerics_Vector2__
  name: OverlapSegmentsPolygon
  nameWithType: Segments.OverlapSegmentsPolygon
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsPolygon
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsPolyline*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsPolyline
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapSegmentsPolyline_System_Collections_Generic_List_ShapeEngine_Core_Shapes_Segment__System_Collections_Generic_List_System_Numerics_Vector2__
  name: OverlapSegmentsPolyline
  nameWithType: Segments.OverlapSegmentsPolyline
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsPolyline
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsSegments*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapSegmentsSegments
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapSegmentsSegments_System_Collections_Generic_List_ShapeEngine_Core_Shapes_Segment__System_Collections_Generic_List_ShapeEngine_Core_Shapes_Segment__
  name: OverlapSegmentsSegments
  nameWithType: Segments.OverlapSegmentsSegments
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegmentsSegments
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegment*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapSegment
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapSegment_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapSegment
  nameWithType: Segments.OverlapSegment
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegment
- uid: ShapeEngine.Core.Shapes.Segments.OverlapLine*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapLine
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapLine_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapLine
  nameWithType: Segments.OverlapLine
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapLine
- uid: ShapeEngine.Core.Shapes.Segments.OverlapRay*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapRay
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapRay_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapRay
  nameWithType: Segments.OverlapRay
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapRay
- uid: ShapeEngine.Core.Shapes.Segments.OverlapCircle*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapCircle
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapCircle_System_Numerics_Vector2_System_Single_
  name: OverlapCircle
  nameWithType: Segments.OverlapCircle
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapCircle
- uid: ShapeEngine.Core.Shapes.Segments.OverlapTriangle*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapTriangle
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapTriangle_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapTriangle
  nameWithType: Segments.OverlapTriangle
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapTriangle
- uid: ShapeEngine.Core.Shapes.Segments.OverlapQuad*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapQuad
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapQuad_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapQuad
  nameWithType: Segments.OverlapQuad
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapQuad
- uid: ShapeEngine.Core.Shapes.Segments.OverlapRect*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapRect
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapRect_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapRect
  nameWithType: Segments.OverlapRect
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapRect
- uid: ShapeEngine.Core.Shapes.Segments.OverlapPolygon*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapPolygon
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapPolygon_System_Collections_Generic_List_System_Numerics_Vector2__
  name: OverlapPolygon
  nameWithType: Segments.OverlapPolygon
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapPolygon
- uid: ShapeEngine.Core.Shapes.Segments.OverlapPolyline*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapPolyline
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapPolyline_System_Collections_Generic_List_System_Numerics_Vector2__
  name: OverlapPolyline
  nameWithType: Segments.OverlapPolyline
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapPolyline
- uid: ShapeEngine.Core.Shapes.Segments.OverlapSegments*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapSegments
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapSegments_System_Collections_Generic_List_ShapeEngine_Core_Shapes_Segment__
  name: OverlapSegments
  nameWithType: Segments.OverlapSegments
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapSegments
- uid: ShapeEngine.Core.Shapes.Segments.OverlapShape*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.OverlapShape
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_OverlapShape_ShapeEngine_Core_Shapes_Line_
  name: OverlapShape
  nameWithType: Segments.OverlapShape
  fullName: ShapeEngine.Core.Shapes.Segments.OverlapShape
- uid: ShapeEngine.Core.Shapes.Segments.IntersectShape*
  commentId: Overload:ShapeEngine.Core.Shapes.Segments.IntersectShape
  href: ShapeEngine.Core.Shapes.Segments.html#ShapeEngine_Core_Shapes_Segments_IntersectShape_ShapeEngine_Core_Shapes_Ray_
  name: IntersectShape
  nameWithType: Segments.IntersectShape
  fullName: ShapeEngine.Core.Shapes.Segments.IntersectShape
- uid: ShapeEngine.Core.CollisionSystem.CollisionPoints
  commentId: T:ShapeEngine.Core.CollisionSystem.CollisionPoints
  parent: ShapeEngine.Core.CollisionSystem
  href: ShapeEngine.Core.CollisionSystem.CollisionPoints.html
  name: CollisionPoints
  nameWithType: CollisionPoints
  fullName: ShapeEngine.Core.CollisionSystem.CollisionPoints
- uid: ShapeEngine.Core.CollisionSystem
  commentId: N:ShapeEngine.Core.CollisionSystem
  href: ShapeEngine.html
  name: ShapeEngine.Core.CollisionSystem
  nameWithType: ShapeEngine.Core.CollisionSystem
  fullName: ShapeEngine.Core.CollisionSystem
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.CollisionSystem
    name: CollisionSystem
    href: ShapeEngine.Core.CollisionSystem.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.CollisionSystem
    name: CollisionSystem
    href: ShapeEngine.Core.CollisionSystem.html
