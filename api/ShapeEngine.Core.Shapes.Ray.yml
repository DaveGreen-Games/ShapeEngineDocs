### YamlMime:ManagedReference
items:
- uid: ShapeEngine.Core.Shapes.Ray
  commentId: T:ShapeEngine.Core.Shapes.Ray
  id: Ray
  parent: ShapeEngine.Core.Shapes
  children:
  - ShapeEngine.Core.Shapes.Ray.#ctor
  - ShapeEngine.Core.Shapes.Ray.#ctor(System.Numerics.Vector2,System.Boolean)
  - ShapeEngine.Core.Shapes.Ray.#ctor(System.Numerics.Vector2,System.Numerics.Vector2,System.Boolean)
  - ShapeEngine.Core.Shapes.Ray.#ctor(System.Single,System.Single,System.Single,System.Single,System.Boolean)
  - ShapeEngine.Core.Shapes.Ray.ChangeDirection(System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.ChangePoint(System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.ChangeRotation(System.Single)
  - ShapeEngine.Core.Shapes.Ray.Direction
  - ShapeEngine.Core.Shapes.Ray.FlipNormal
  - ShapeEngine.Core.Shapes.Ray.GetBoundingBox
  - ShapeEngine.Core.Shapes.Ray.GetBoundingBox(System.Single)
  - ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Circle)
  - ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Line)
  - ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Polygon)
  - ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Polyline)
  - ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Quad)
  - ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Ray)
  - ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Rect)
  - ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Segment)
  - ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Segments)
  - ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Triangle)
  - ShapeEngine.Core.Shapes.Ray.GetClosestPoint(System.Numerics.Vector2,System.Single@)
  - ShapeEngine.Core.Shapes.Ray.GetClosestPointRayCircle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single,System.Single@)
  - ShapeEngine.Core.Shapes.Ray.GetClosestPointRayLine(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single@)
  - ShapeEngine.Core.Shapes.Ray.GetClosestPointRayPoint(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single@)
  - ShapeEngine.Core.Shapes.Ray.GetClosestPointRayRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single@)
  - ShapeEngine.Core.Shapes.Ray.GetClosestPointRaySegment(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single@)
  - ShapeEngine.Core.Shapes.Ray.GetNormal(System.Numerics.Vector2,System.Boolean)
  - ShapeEngine.Core.Shapes.Ray.Intersect(ShapeEngine.Core.CollisionSystem.Collider)
  - ShapeEngine.Core.Shapes.Ray.Intersect(ShapeEngine.Core.CollisionSystem.Collider,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  - ShapeEngine.Core.Shapes.Ray.IntersectCircle(ShapeEngine.Core.Shapes.Circle)
  - ShapeEngine.Core.Shapes.Ray.IntersectCircle(System.Numerics.Vector2,System.Single)
  - ShapeEngine.Core.Shapes.Ray.IntersectLine(ShapeEngine.Core.Shapes.Line)
  - ShapeEngine.Core.Shapes.Ray.IntersectLine(System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectPolygon(ShapeEngine.Core.Shapes.Polygon,System.Int32)
  - ShapeEngine.Core.Shapes.Ray.IntersectPolygon(System.Collections.Generic.List{System.Numerics.Vector2},System.Int32)
  - ShapeEngine.Core.Shapes.Ray.IntersectPolyline(ShapeEngine.Core.Shapes.Polyline,System.Int32)
  - ShapeEngine.Core.Shapes.Ray.IntersectPolyline(System.Collections.Generic.List{System.Numerics.Vector2},System.Int32)
  - ShapeEngine.Core.Shapes.Ray.IntersectQuad(ShapeEngine.Core.Shapes.Quad)
  - ShapeEngine.Core.Shapes.Ray.IntersectQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectRay(ShapeEngine.Core.Shapes.Ray)
  - ShapeEngine.Core.Shapes.Ray.IntersectRay(System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectRayCircle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single)
  - ShapeEngine.Core.Shapes.Ray.IntersectRayLine(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectRayLine(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectRayLineInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectRayLineInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectRayPolygon(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2},ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  - ShapeEngine.Core.Shapes.Ray.IntersectRayPolygon(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2},System.Int32)
  - ShapeEngine.Core.Shapes.Ray.IntersectRayPolyline(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2},System.Int32)
  - ShapeEngine.Core.Shapes.Ray.IntersectRayQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectRayRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectRayRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectRayRayInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectRayRayInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectRayRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectRaySegment(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectRaySegment(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectRaySegmentInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectRaySegmentInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectRaySegments(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Int32)
  - ShapeEngine.Core.Shapes.Ray.IntersectRayTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectRect(ShapeEngine.Core.Shapes.Rect)
  - ShapeEngine.Core.Shapes.Ray.IntersectRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectSegment(ShapeEngine.Core.Shapes.Segment)
  - ShapeEngine.Core.Shapes.Ray.IntersectSegment(System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IntersectSegments(ShapeEngine.Core.Shapes.Segments,System.Int32)
  - ShapeEngine.Core.Shapes.Ray.IntersectSegments(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Int32)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Circle)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Circle,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Line)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Line,ShapeEngine.Core.CollisionSystem.CollisionPoints@)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polygon,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polygon,System.Int32)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polyline,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polyline,System.Int32)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Quad)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Quad,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Ray)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Ray,ShapeEngine.Core.CollisionSystem.CollisionPoints@)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Rect)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Rect,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Segment)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.CollisionSystem.CollisionPoints@)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Segments,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Segments,System.Int32)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Triangle)
  - ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Triangle,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  - ShapeEngine.Core.Shapes.Ray.IntersectTriangle(ShapeEngine.Core.Shapes.Triangle)
  - ShapeEngine.Core.Shapes.Ray.IntersectTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IsNormalFlipped
  - ShapeEngine.Core.Shapes.Ray.IsPointOnRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.IsValid
  - ShapeEngine.Core.Shapes.Ray.MaxLength
  - ShapeEngine.Core.Shapes.Ray.Normal
  - ShapeEngine.Core.Shapes.Ray.Overlap(ShapeEngine.Core.CollisionSystem.Collider)
  - ShapeEngine.Core.Shapes.Ray.OverlapCircle(System.Numerics.Vector2,System.Single)
  - ShapeEngine.Core.Shapes.Ray.OverlapLine(System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.OverlapPoint(System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.OverlapPolygon(System.Collections.Generic.List{System.Numerics.Vector2})
  - ShapeEngine.Core.Shapes.Ray.OverlapPolyline(System.Collections.Generic.List{System.Numerics.Vector2})
  - ShapeEngine.Core.Shapes.Ray.OverlapQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.OverlapRay(System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.OverlapRayCircle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single)
  - ShapeEngine.Core.Shapes.Ray.OverlapRayLine(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.OverlapRayPolygon(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2})
  - ShapeEngine.Core.Shapes.Ray.OverlapRayPolyline(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2})
  - ShapeEngine.Core.Shapes.Ray.OverlapRayQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.OverlapRayRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.OverlapRayRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.OverlapRaySegment(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.OverlapRaySegments(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment})
  - ShapeEngine.Core.Shapes.Ray.OverlapRayTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.OverlapRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.OverlapSegment(System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.OverlapSegments(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment})
  - ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Circle)
  - ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Line)
  - ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Polygon)
  - ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Polyline)
  - ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Quad)
  - ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Ray)
  - ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Rect)
  - ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Segment)
  - ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Segments)
  - ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Triangle)
  - ShapeEngine.Core.Shapes.Ray.OverlapTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.Point
  - ShapeEngine.Core.Shapes.Ray.RandomRay
  - ShapeEngine.Core.Shapes.Ray.RandomRay(System.Numerics.Vector2,System.Single,System.Single,System.Single,System.Single)
  - ShapeEngine.Core.Shapes.Ray.RandomRay(System.Single)
  - ShapeEngine.Core.Shapes.Ray.RandomRay(System.Single,System.Single)
  - ShapeEngine.Core.Shapes.Ray.SetDirection(System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.SetPoint(System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Ray.SetRotation(System.Single)
  - ShapeEngine.Core.Shapes.Ray.ToLine
  - ShapeEngine.Core.Shapes.Ray.ToSegment(System.Single)
  langs:
  - csharp
  - vb
  name: Ray
  nameWithType: Ray
  fullName: ShapeEngine.Core.Shapes.Ray
  type: Struct
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Ray
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 8
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public readonly struct Ray
    content.vb: Public Structure Ray
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - ShapeEngine.Core.Shapes.Ray.ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.Draw(System.Single,System.Single,ShapeEngine.Color.ColorRgba)
- uid: ShapeEngine.Core.Shapes.Ray.MaxLength
  commentId: F:ShapeEngine.Core.Shapes.Ray.MaxLength
  id: MaxLength
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: MaxLength
  nameWithType: Ray.MaxLength
  fullName: ShapeEngine.Core.Shapes.Ray.MaxLength
  type: Field
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: MaxLength
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 10
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static float MaxLength
    return:
      type: System.Single
    content.vb: Public Shared MaxLength As Single
- uid: ShapeEngine.Core.Shapes.Ray.Point
  commentId: F:ShapeEngine.Core.Shapes.Ray.Point
  id: Point
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: Point
  nameWithType: Ray.Point
  fullName: ShapeEngine.Core.Shapes.Ray.Point
  type: Field
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Point
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 14
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public readonly Vector2 Point
    return:
      type: System.Numerics.Vector2
    content.vb: Public ReadOnly Point As Vector2
- uid: ShapeEngine.Core.Shapes.Ray.Direction
  commentId: F:ShapeEngine.Core.Shapes.Ray.Direction
  id: Direction
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: Ray.Direction
  fullName: ShapeEngine.Core.Shapes.Ray.Direction
  type: Field
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Direction
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 15
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public readonly Vector2 Direction
    return:
      type: System.Numerics.Vector2
    content.vb: Public ReadOnly Direction As Vector2
- uid: ShapeEngine.Core.Shapes.Ray.Normal
  commentId: F:ShapeEngine.Core.Shapes.Ray.Normal
  id: Normal
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: Normal
  nameWithType: Ray.Normal
  fullName: ShapeEngine.Core.Shapes.Ray.Normal
  type: Field
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Normal
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 16
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public readonly Vector2 Normal
    return:
      type: System.Numerics.Vector2
    content.vb: Public ReadOnly Normal As Vector2
- uid: ShapeEngine.Core.Shapes.Ray.#ctor
  commentId: M:ShapeEngine.Core.Shapes.Ray.#ctor
  id: '#ctor'
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: Ray()
  nameWithType: Ray.Ray()
  fullName: ShapeEngine.Core.Shapes.Ray.Ray()
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 21
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Ray()
    content.vb: Public Sub New()
  overload: ShapeEngine.Core.Shapes.Ray.#ctor*
  nameWithType.vb: Ray.New()
  fullName.vb: ShapeEngine.Core.Shapes.Ray.New()
  name.vb: New()
- uid: ShapeEngine.Core.Shapes.Ray.#ctor(System.Single,System.Single,System.Single,System.Single,System.Boolean)
  commentId: M:ShapeEngine.Core.Shapes.Ray.#ctor(System.Single,System.Single,System.Single,System.Single,System.Boolean)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single,System.Boolean)'
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: Ray(float, float, float, float, bool)
  nameWithType: Ray.Ray(float, float, float, float, bool)
  fullName: ShapeEngine.Core.Shapes.Ray.Ray(float, float, float, float, bool)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 27
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Ray(float x, float y, float dx, float dy, bool flippedNormal = false)
    parameters:
    - id: x
      type: System.Single
    - id: y
      type: System.Single
    - id: dx
      type: System.Single
    - id: dy
      type: System.Single
    - id: flippedNormal
      type: System.Boolean
    content.vb: Public Sub New(x As Single, y As Single, dx As Single, dy As Single, flippedNormal As Boolean = False)
  overload: ShapeEngine.Core.Shapes.Ray.#ctor*
  nameWithType.vb: Ray.New(Single, Single, Single, Single, Boolean)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.New(Single, Single, Single, Single, Boolean)
  name.vb: New(Single, Single, Single, Single, Boolean)
- uid: ShapeEngine.Core.Shapes.Ray.#ctor(System.Numerics.Vector2,System.Boolean)
  commentId: M:ShapeEngine.Core.Shapes.Ray.#ctor(System.Numerics.Vector2,System.Boolean)
  id: '#ctor(System.Numerics.Vector2,System.Boolean)'
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: Ray(Vector2, bool)
  nameWithType: Ray.Ray(Vector2, bool)
  fullName: ShapeEngine.Core.Shapes.Ray.Ray(System.Numerics.Vector2, bool)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 33
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Ray(Vector2 direction, bool flippedNormal = false)
    parameters:
    - id: direction
      type: System.Numerics.Vector2
    - id: flippedNormal
      type: System.Boolean
    content.vb: Public Sub New(direction As Vector2, flippedNormal As Boolean = False)
  overload: ShapeEngine.Core.Shapes.Ray.#ctor*
  nameWithType.vb: Ray.New(Vector2, Boolean)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.New(System.Numerics.Vector2, Boolean)
  name.vb: New(Vector2, Boolean)
- uid: ShapeEngine.Core.Shapes.Ray.#ctor(System.Numerics.Vector2,System.Numerics.Vector2,System.Boolean)
  commentId: M:ShapeEngine.Core.Shapes.Ray.#ctor(System.Numerics.Vector2,System.Numerics.Vector2,System.Boolean)
  id: '#ctor(System.Numerics.Vector2,System.Numerics.Vector2,System.Boolean)'
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: Ray(Vector2, Vector2, bool)
  nameWithType: Ray.Ray(Vector2, Vector2, bool)
  fullName: ShapeEngine.Core.Shapes.Ray.Ray(System.Numerics.Vector2, System.Numerics.Vector2, bool)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 39
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Ray(Vector2 point, Vector2 direction, bool flippedNormal = false)
    parameters:
    - id: point
      type: System.Numerics.Vector2
    - id: direction
      type: System.Numerics.Vector2
    - id: flippedNormal
      type: System.Boolean
    content.vb: Public Sub New(point As Vector2, direction As Vector2, flippedNormal As Boolean = False)
  overload: ShapeEngine.Core.Shapes.Ray.#ctor*
  nameWithType.vb: Ray.New(Vector2, Vector2, Boolean)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.New(System.Numerics.Vector2, System.Numerics.Vector2, Boolean)
  name.vb: New(Vector2, Vector2, Boolean)
- uid: ShapeEngine.Core.Shapes.Ray.IsValid
  commentId: P:ShapeEngine.Core.Shapes.Ray.IsValid
  id: IsValid
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: Ray.IsValid
  fullName: ShapeEngine.Core.Shapes.Ray.IsValid
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IsValid
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 55
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsValid As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.IsValid*
- uid: ShapeEngine.Core.Shapes.Ray.IsNormalFlipped
  commentId: M:ShapeEngine.Core.Shapes.Ray.IsNormalFlipped
  id: IsNormalFlipped
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IsNormalFlipped()
  nameWithType: Ray.IsNormalFlipped()
  fullName: ShapeEngine.Core.Shapes.Ray.IsNormalFlipped()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IsNormalFlipped
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 57
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool IsNormalFlipped()
    return:
      type: System.Boolean
    content.vb: Public Function IsNormalFlipped() As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.IsNormalFlipped*
- uid: ShapeEngine.Core.Shapes.Ray.ToSegment(System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Ray.ToSegment(System.Single)
  id: ToSegment(System.Single)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: ToSegment(float)
  nameWithType: Ray.ToSegment(float)
  fullName: ShapeEngine.Core.Shapes.Ray.ToSegment(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ToSegment
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 62
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Segment ToSegment(float length)
    parameters:
    - id: length
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Segment
    content.vb: Public Function ToSegment(length As Single) As Segment
  overload: ShapeEngine.Core.Shapes.Ray.ToSegment*
  nameWithType.vb: Ray.ToSegment(Single)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.ToSegment(Single)
  name.vb: ToSegment(Single)
- uid: ShapeEngine.Core.Shapes.Ray.ToLine
  commentId: M:ShapeEngine.Core.Shapes.Ray.ToLine
  id: ToLine
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: ToLine()
  nameWithType: Ray.ToLine()
  fullName: ShapeEngine.Core.Shapes.Ray.ToLine()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ToLine
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 67
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Line ToLine()
    return:
      type: ShapeEngine.Core.Shapes.Line
    content.vb: Public Function ToLine() As Line
  overload: ShapeEngine.Core.Shapes.Ray.ToLine*
- uid: ShapeEngine.Core.Shapes.Ray.FlipNormal
  commentId: M:ShapeEngine.Core.Shapes.Ray.FlipNormal
  id: FlipNormal
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: FlipNormal()
  nameWithType: Ray.FlipNormal()
  fullName: ShapeEngine.Core.Shapes.Ray.FlipNormal()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: FlipNormal
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 68
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Ray FlipNormal()
    return:
      type: ShapeEngine.Core.Shapes.Ray
    content.vb: Public Function FlipNormal() As Ray
  overload: ShapeEngine.Core.Shapes.Ray.FlipNormal*
- uid: ShapeEngine.Core.Shapes.Ray.GetNormal(System.Numerics.Vector2,System.Boolean)
  commentId: M:ShapeEngine.Core.Shapes.Ray.GetNormal(System.Numerics.Vector2,System.Boolean)
  id: GetNormal(System.Numerics.Vector2,System.Boolean)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: GetNormal(Vector2, bool)
  nameWithType: Ray.GetNormal(Vector2, bool)
  fullName: ShapeEngine.Core.Shapes.Ray.GetNormal(System.Numerics.Vector2, bool)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetNormal
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 69
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static Vector2 GetNormal(Vector2 direction, bool flippedNormal)
    parameters:
    - id: direction
      type: System.Numerics.Vector2
    - id: flippedNormal
      type: System.Boolean
    return:
      type: System.Numerics.Vector2
    content.vb: Public Shared Function GetNormal(direction As Vector2, flippedNormal As Boolean) As Vector2
  overload: ShapeEngine.Core.Shapes.Ray.GetNormal*
  nameWithType.vb: Ray.GetNormal(Vector2, Boolean)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.GetNormal(System.Numerics.Vector2, Boolean)
  name.vb: GetNormal(Vector2, Boolean)
- uid: ShapeEngine.Core.Shapes.Ray.GetBoundingBox
  commentId: M:ShapeEngine.Core.Shapes.Ray.GetBoundingBox
  id: GetBoundingBox
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: GetBoundingBox()
  nameWithType: Ray.GetBoundingBox()
  fullName: ShapeEngine.Core.Shapes.Ray.GetBoundingBox()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetBoundingBox
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 76
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Rect GetBoundingBox()
    return:
      type: ShapeEngine.Core.Shapes.Rect
    content.vb: Public Function GetBoundingBox() As Rect
  overload: ShapeEngine.Core.Shapes.Ray.GetBoundingBox*
- uid: ShapeEngine.Core.Shapes.Ray.GetBoundingBox(System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Ray.GetBoundingBox(System.Single)
  id: GetBoundingBox(System.Single)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: GetBoundingBox(float)
  nameWithType: Ray.GetBoundingBox(float)
  fullName: ShapeEngine.Core.Shapes.Ray.GetBoundingBox(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetBoundingBox
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 77
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Rect GetBoundingBox(float length)
    parameters:
    - id: length
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Rect
    content.vb: Public Function GetBoundingBox(length As Single) As Rect
  overload: ShapeEngine.Core.Shapes.Ray.GetBoundingBox*
  nameWithType.vb: Ray.GetBoundingBox(Single)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.GetBoundingBox(Single)
  name.vb: GetBoundingBox(Single)
- uid: ShapeEngine.Core.Shapes.Ray.RandomRay
  commentId: M:ShapeEngine.Core.Shapes.Ray.RandomRay
  id: RandomRay
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: RandomRay()
  nameWithType: Ray.RandomRay()
  fullName: ShapeEngine.Core.Shapes.Ray.RandomRay()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: RandomRay
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 79
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Ray RandomRay()
    return:
      type: ShapeEngine.Core.Shapes.Ray
    content.vb: Public Function RandomRay() As Ray
  overload: ShapeEngine.Core.Shapes.Ray.RandomRay*
- uid: ShapeEngine.Core.Shapes.Ray.RandomRay(System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Ray.RandomRay(System.Single)
  id: RandomRay(System.Single)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: RandomRay(float)
  nameWithType: Ray.RandomRay(float)
  fullName: ShapeEngine.Core.Shapes.Ray.RandomRay(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: RandomRay
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 80
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Ray RandomRay(float maxAngleDeg)
    parameters:
    - id: maxAngleDeg
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Ray
    content.vb: Public Function RandomRay(maxAngleDeg As Single) As Ray
  overload: ShapeEngine.Core.Shapes.Ray.RandomRay*
  nameWithType.vb: Ray.RandomRay(Single)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.RandomRay(Single)
  name.vb: RandomRay(Single)
- uid: ShapeEngine.Core.Shapes.Ray.RandomRay(System.Single,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Ray.RandomRay(System.Single,System.Single)
  id: RandomRay(System.Single,System.Single)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: RandomRay(float, float)
  nameWithType: Ray.RandomRay(float, float)
  fullName: ShapeEngine.Core.Shapes.Ray.RandomRay(float, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: RandomRay
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 81
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Ray RandomRay(float minAngleDeg, float maxAngleDeg)
    parameters:
    - id: minAngleDeg
      type: System.Single
    - id: maxAngleDeg
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Ray
    content.vb: Public Function RandomRay(minAngleDeg As Single, maxAngleDeg As Single) As Ray
  overload: ShapeEngine.Core.Shapes.Ray.RandomRay*
  nameWithType.vb: Ray.RandomRay(Single, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.RandomRay(Single, Single)
  name.vb: RandomRay(Single, Single)
- uid: ShapeEngine.Core.Shapes.Ray.RandomRay(System.Numerics.Vector2,System.Single,System.Single,System.Single,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Ray.RandomRay(System.Numerics.Vector2,System.Single,System.Single,System.Single,System.Single)
  id: RandomRay(System.Numerics.Vector2,System.Single,System.Single,System.Single,System.Single)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: RandomRay(Vector2, float, float, float, float)
  nameWithType: Ray.RandomRay(Vector2, float, float, float, float)
  fullName: ShapeEngine.Core.Shapes.Ray.RandomRay(System.Numerics.Vector2, float, float, float, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: RandomRay
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 82
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Ray RandomRay(Vector2 origin, float minLength, float maxLength, float minAngleDeg, float maxAngleDeg)
    parameters:
    - id: origin
      type: System.Numerics.Vector2
    - id: minLength
      type: System.Single
    - id: maxLength
      type: System.Single
    - id: minAngleDeg
      type: System.Single
    - id: maxAngleDeg
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Ray
    content.vb: Public Function RandomRay(origin As Vector2, minLength As Single, maxLength As Single, minAngleDeg As Single, maxAngleDeg As Single) As Ray
  overload: ShapeEngine.Core.Shapes.Ray.RandomRay*
  nameWithType.vb: Ray.RandomRay(Vector2, Single, Single, Single, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.RandomRay(System.Numerics.Vector2, Single, Single, Single, Single)
  name.vb: RandomRay(Vector2, Single, Single, Single, Single)
- uid: ShapeEngine.Core.Shapes.Ray.SetPoint(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.SetPoint(System.Numerics.Vector2)
  id: SetPoint(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: SetPoint(Vector2)
  nameWithType: Ray.SetPoint(Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.SetPoint(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 89
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Ray SetPoint(Vector2 newPoint)
    parameters:
    - id: newPoint
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Shapes.Ray
    content.vb: Public Function SetPoint(newPoint As Vector2) As Ray
  overload: ShapeEngine.Core.Shapes.Ray.SetPoint*
- uid: ShapeEngine.Core.Shapes.Ray.ChangePoint(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.ChangePoint(System.Numerics.Vector2)
  id: ChangePoint(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: ChangePoint(Vector2)
  nameWithType: Ray.ChangePoint(Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.ChangePoint(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChangePoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 90
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Ray ChangePoint(Vector2 amount)
    parameters:
    - id: amount
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Shapes.Ray
    content.vb: Public Function ChangePoint(amount As Vector2) As Ray
  overload: ShapeEngine.Core.Shapes.Ray.ChangePoint*
- uid: ShapeEngine.Core.Shapes.Ray.SetDirection(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.SetDirection(System.Numerics.Vector2)
  id: SetDirection(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: SetDirection(Vector2)
  nameWithType: Ray.SetDirection(Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.SetDirection(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetDirection
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 92
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Ray SetDirection(Vector2 newDirection)
    parameters:
    - id: newDirection
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Shapes.Ray
    content.vb: Public Function SetDirection(newDirection As Vector2) As Ray
  overload: ShapeEngine.Core.Shapes.Ray.SetDirection*
- uid: ShapeEngine.Core.Shapes.Ray.ChangeDirection(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.ChangeDirection(System.Numerics.Vector2)
  id: ChangeDirection(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: ChangeDirection(Vector2)
  nameWithType: Ray.ChangeDirection(Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.ChangeDirection(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChangeDirection
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 97
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Ray ChangeDirection(Vector2 amount)
    parameters:
    - id: amount
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Shapes.Ray
    content.vb: Public Function ChangeDirection(amount As Vector2) As Ray
  overload: ShapeEngine.Core.Shapes.Ray.ChangeDirection*
- uid: ShapeEngine.Core.Shapes.Ray.ChangeRotation(System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Ray.ChangeRotation(System.Single)
  id: ChangeRotation(System.Single)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: ChangeRotation(float)
  nameWithType: Ray.ChangeRotation(float)
  fullName: ShapeEngine.Core.Shapes.Ray.ChangeRotation(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChangeRotation
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 103
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Ray ChangeRotation(float angleRad)
    parameters:
    - id: angleRad
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Ray
    content.vb: Public Function ChangeRotation(angleRad As Single) As Ray
  overload: ShapeEngine.Core.Shapes.Ray.ChangeRotation*
  nameWithType.vb: Ray.ChangeRotation(Single)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.ChangeRotation(Single)
  name.vb: ChangeRotation(Single)
- uid: ShapeEngine.Core.Shapes.Ray.SetRotation(System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Ray.SetRotation(System.Single)
  id: SetRotation(System.Single)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: SetRotation(float)
  nameWithType: Ray.SetRotation(float)
  fullName: ShapeEngine.Core.Shapes.Ray.SetRotation(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetRotation
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 109
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Ray SetRotation(float angleRad)
    parameters:
    - id: angleRad
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Ray
    content.vb: Public Function SetRotation(angleRad As Single) As Ray
  overload: ShapeEngine.Core.Shapes.Ray.SetRotation*
  nameWithType.vb: Ray.SetRotation(Single)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.SetRotation(Single)
  name.vb: SetRotation(Single)
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayPoint(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single@)
  commentId: M:ShapeEngine.Core.Shapes.Ray.GetClosestPointRayPoint(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single@)
  id: GetClosestPointRayPoint(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single@)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: GetClosestPointRayPoint(Vector2, Vector2, Vector2, out float)
  nameWithType: Ray.GetClosestPointRayPoint(Vector2, Vector2, Vector2, out float)
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayPoint(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, out float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPointRayPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 119
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static Vector2 GetClosestPointRayPoint(Vector2 rayPoint, Vector2 rayDirection, Vector2 point, out float disSquared)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: point
      type: System.Numerics.Vector2
    - id: disSquared
      type: System.Single
    return:
      type: System.Numerics.Vector2
    content.vb: Public Shared Function GetClosestPointRayPoint(rayPoint As Vector2, rayDirection As Vector2, point As Vector2, disSquared As Single) As Vector2
  overload: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayPoint*
  nameWithType.vb: Ray.GetClosestPointRayPoint(Vector2, Vector2, Vector2, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayPoint(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, Single)
  name.vb: GetClosestPointRayPoint(Vector2, Vector2, Vector2, Single)
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayLine(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single@)
  commentId: M:ShapeEngine.Core.Shapes.Ray.GetClosestPointRayLine(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single@)
  id: GetClosestPointRayLine(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single@)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: GetClosestPointRayLine(Vector2, Vector2, Vector2, Vector2, out float)
  nameWithType: Ray.GetClosestPointRayLine(Vector2, Vector2, Vector2, Vector2, out float)
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayLine(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, out float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPointRayLine
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 144
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static (Vector2 self, Vector2 other) GetClosestPointRayLine(Vector2 rayPoint, Vector2 rayDirection, Vector2 linePoint, Vector2 lineDirection, out float disSquared)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: linePoint
      type: System.Numerics.Vector2
    - id: lineDirection
      type: System.Numerics.Vector2
    - id: disSquared
      type: System.Single
    return:
      type: System.ValueTuple{System.Numerics.Vector2,System.Numerics.Vector2}
    content.vb: Public Shared Function GetClosestPointRayLine(rayPoint As Vector2, rayDirection As Vector2, linePoint As Vector2, lineDirection As Vector2, disSquared As Single) As (self As Vector2, other As Vector2)
  overload: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayLine*
  nameWithType.vb: Ray.GetClosestPointRayLine(Vector2, Vector2, Vector2, Vector2, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayLine(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, Single)
  name.vb: GetClosestPointRayLine(Vector2, Vector2, Vector2, Vector2, Single)
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single@)
  commentId: M:ShapeEngine.Core.Shapes.Ray.GetClosestPointRayRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single@)
  id: GetClosestPointRayRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single@)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: GetClosestPointRayRay(Vector2, Vector2, Vector2, Vector2, out float)
  nameWithType: Ray.GetClosestPointRayRay(Vector2, Vector2, Vector2, Vector2, out float)
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayRay(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, out float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPointRayRay
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 156
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static (Vector2 self, Vector2 other) GetClosestPointRayRay(Vector2 ray1Point, Vector2 ray1Direction, Vector2 ray2Point, Vector2 ray2Direction, out float disSquared)
    parameters:
    - id: ray1Point
      type: System.Numerics.Vector2
    - id: ray1Direction
      type: System.Numerics.Vector2
    - id: ray2Point
      type: System.Numerics.Vector2
    - id: ray2Direction
      type: System.Numerics.Vector2
    - id: disSquared
      type: System.Single
    return:
      type: System.ValueTuple{System.Numerics.Vector2,System.Numerics.Vector2}
    content.vb: Public Shared Function GetClosestPointRayRay(ray1Point As Vector2, ray1Direction As Vector2, ray2Point As Vector2, ray2Direction As Vector2, disSquared As Single) As (self As Vector2, other As Vector2)
  overload: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayRay*
  nameWithType.vb: Ray.GetClosestPointRayRay(Vector2, Vector2, Vector2, Vector2, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayRay(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, Single)
  name.vb: GetClosestPointRayRay(Vector2, Vector2, Vector2, Vector2, Single)
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPointRaySegment(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single@)
  commentId: M:ShapeEngine.Core.Shapes.Ray.GetClosestPointRaySegment(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single@)
  id: GetClosestPointRaySegment(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single@)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: GetClosestPointRaySegment(Vector2, Vector2, Vector2, Vector2, out float)
  nameWithType: Ray.GetClosestPointRaySegment(Vector2, Vector2, Vector2, Vector2, out float)
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPointRaySegment(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, out float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPointRaySegment
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 177
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static (Vector2 self, Vector2 other) GetClosestPointRaySegment(Vector2 rayPoint, Vector2 rayDirection, Vector2 segmentStart, Vector2 segmentEnd, out float disSquared)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: segmentStart
      type: System.Numerics.Vector2
    - id: segmentEnd
      type: System.Numerics.Vector2
    - id: disSquared
      type: System.Single
    return:
      type: System.ValueTuple{System.Numerics.Vector2,System.Numerics.Vector2}
    content.vb: Public Shared Function GetClosestPointRaySegment(rayPoint As Vector2, rayDirection As Vector2, segmentStart As Vector2, segmentEnd As Vector2, disSquared As Single) As (self As Vector2, other As Vector2)
  overload: ShapeEngine.Core.Shapes.Ray.GetClosestPointRaySegment*
  nameWithType.vb: Ray.GetClosestPointRaySegment(Vector2, Vector2, Vector2, Vector2, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.GetClosestPointRaySegment(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, Single)
  name.vb: GetClosestPointRaySegment(Vector2, Vector2, Vector2, Vector2, Single)
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayCircle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single,System.Single@)
  commentId: M:ShapeEngine.Core.Shapes.Ray.GetClosestPointRayCircle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single,System.Single@)
  id: GetClosestPointRayCircle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single,System.Single@)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: GetClosestPointRayCircle(Vector2, Vector2, Vector2, float, out float)
  nameWithType: Ray.GetClosestPointRayCircle(Vector2, Vector2, Vector2, float, out float)
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayCircle(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, float, out float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPointRayCircle
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 202
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static (Vector2 self, Vector2 other) GetClosestPointRayCircle(Vector2 rayPoint, Vector2 rayDirection, Vector2 circleCenter, float circleRadius, out float disSquared)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: circleCenter
      type: System.Numerics.Vector2
    - id: circleRadius
      type: System.Single
    - id: disSquared
      type: System.Single
    return:
      type: System.ValueTuple{System.Numerics.Vector2,System.Numerics.Vector2}
    content.vb: Public Shared Function GetClosestPointRayCircle(rayPoint As Vector2, rayDirection As Vector2, circleCenter As Vector2, circleRadius As Single, disSquared As Single) As (self As Vector2, other As Vector2)
  overload: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayCircle*
  nameWithType.vb: Ray.GetClosestPointRayCircle(Vector2, Vector2, Vector2, Single, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayCircle(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, Single, Single)
  name.vb: GetClosestPointRayCircle(Vector2, Vector2, Vector2, Single, Single)
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(System.Numerics.Vector2,System.Single@)
  commentId: M:ShapeEngine.Core.Shapes.Ray.GetClosestPoint(System.Numerics.Vector2,System.Single@)
  id: GetClosestPoint(System.Numerics.Vector2,System.Single@)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Vector2, out float)
  nameWithType: Ray.GetClosestPoint(Vector2, out float)
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(System.Numerics.Vector2, out float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 218
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoint GetClosestPoint(Vector2 point, out float disSquared)
    parameters:
    - id: point
      type: System.Numerics.Vector2
    - id: disSquared
      type: System.Single
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Function GetClosestPoint(point As Vector2, disSquared As Single) As CollisionPoint
  overload: ShapeEngine.Core.Shapes.Ray.GetClosestPoint*
  nameWithType.vb: Ray.GetClosestPoint(Vector2, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(System.Numerics.Vector2, Single)
  name.vb: GetClosestPoint(Vector2, Single)
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Line)
  commentId: M:ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Line)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Line)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Line)
  nameWithType: Ray.GetClosestPoint(Line)
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Line)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 240
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Line other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Line
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Line) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Ray.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Ray)
  commentId: M:ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Ray)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Ray)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Ray)
  nameWithType: Ray.GetClosestPoint(Ray)
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Ray)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 251
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Ray other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Ray
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Ray) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Ray.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Segment)
  commentId: M:ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Segment)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Segment)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Segment)
  nameWithType: Ray.GetClosestPoint(Segment)
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Segment)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 286
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Segment other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Segment
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Segment) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Ray.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Circle)
  commentId: M:ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Circle)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Circle)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Circle)
  nameWithType: Ray.GetClosestPoint(Circle)
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Circle)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 317
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Circle other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Circle
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Circle) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Ray.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Triangle)
  commentId: M:ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Triangle)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Triangle)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Triangle)
  nameWithType: Ray.GetClosestPoint(Triangle)
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Triangle)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 337
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Triangle other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Triangle
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Triangle) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Ray.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Quad)
  commentId: M:ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Quad)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Quad)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Quad)
  nameWithType: Ray.GetClosestPoint(Quad)
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Quad)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 373
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Quad other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Quad
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Quad) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Ray.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Rect)
  commentId: M:ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Rect)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Rect)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Rect)
  nameWithType: Ray.GetClosestPoint(Rect)
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Rect)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 418
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Rect other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Rect
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Rect) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Ray.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Polygon)
  commentId: M:ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Polygon)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Polygon)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Polygon)
  nameWithType: Ray.GetClosestPoint(Polygon)
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Polygon)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 461
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Polygon other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Polygon
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Polygon) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Ray.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Polyline)
  commentId: M:ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Polyline)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Polyline)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Polyline)
  nameWithType: Ray.GetClosestPoint(Polyline)
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Polyline)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 491
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Polyline other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Polyline
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Polyline) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Ray.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Segments)
  commentId: M:ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Segments)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Segments)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Segments)
  nameWithType: Ray.GetClosestPoint(Segments)
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPoint(ShapeEngine.Core.Shapes.Segments)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 520
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Segments segments)
    parameters:
    - id: segments
      type: ShapeEngine.Core.Shapes.Segments
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(segments As Segments) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Ray.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Ray.IsPointOnRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IsPointOnRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: IsPointOnRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IsPointOnRay(Vector2, Vector2, Vector2)
  nameWithType: Ray.IsPointOnRay(Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IsPointOnRay(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IsPointOnRay
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 546
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool IsPointOnRay(Vector2 point, Vector2 rayPoint, Vector2 rayDirection)
    parameters:
    - id: point
      type: System.Numerics.Vector2
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsPointOnRay(point As Vector2, rayPoint As Vector2, rayDirection As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.IsPointOnRay*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRaySegmentInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRaySegmentInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectRaySegmentInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRaySegmentInfo(Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.IntersectRaySegmentInfo(Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRaySegmentInfo(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRaySegmentInfo
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 559
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static (CollisionPoint p, float t) IntersectRaySegmentInfo(Vector2 rayPoint, Vector2 rayDirection, Vector2 segmentStart, Vector2 segmentEnd)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: segmentStart
      type: System.Numerics.Vector2
    - id: segmentEnd
      type: System.Numerics.Vector2
    return:
      type: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,System.Single}
    content.vb: Public Shared Function IntersectRaySegmentInfo(rayPoint As Vector2, rayDirection As Vector2, segmentStart As Vector2, segmentEnd As Vector2) As (p As CollisionPoint, t As Single)
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRaySegmentInfo*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRaySegmentInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRaySegmentInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectRaySegmentInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRaySegmentInfo(Vector2, Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.IntersectRaySegmentInfo(Vector2, Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRaySegmentInfo(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRaySegmentInfo
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 582
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static (CollisionPoint p, float t) IntersectRaySegmentInfo(Vector2 rayPoint, Vector2 rayDirection, Vector2 segmentStart, Vector2 segmentEnd, Vector2 segmentNormal)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: segmentStart
      type: System.Numerics.Vector2
    - id: segmentEnd
      type: System.Numerics.Vector2
    - id: segmentNormal
      type: System.Numerics.Vector2
    return:
      type: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,System.Single}
    content.vb: Public Shared Function IntersectRaySegmentInfo(rayPoint As Vector2, rayDirection As Vector2, segmentStart As Vector2, segmentEnd As Vector2, segmentNormal As Vector2) As (p As CollisionPoint, t As Single)
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRaySegmentInfo*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayLineInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRayLineInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectRayLineInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRayLineInfo(Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.IntersectRayLineInfo(Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayLineInfo(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRayLineInfo
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 592
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static (CollisionPoint p, float t) IntersectRayLineInfo(Vector2 rayPoint, Vector2 rayDirection, Vector2 linePoint, Vector2 lineDirection)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: linePoint
      type: System.Numerics.Vector2
    - id: lineDirection
      type: System.Numerics.Vector2
    return:
      type: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,System.Single}
    content.vb: Public Shared Function IntersectRayLineInfo(rayPoint As Vector2, rayDirection As Vector2, linePoint As Vector2, lineDirection As Vector2) As (p As CollisionPoint, t As Single)
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRayLineInfo*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayLineInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRayLineInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectRayLineInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRayLineInfo(Vector2, Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.IntersectRayLineInfo(Vector2, Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayLineInfo(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRayLineInfo
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 613
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static (CollisionPoint p, float t) IntersectRayLineInfo(Vector2 rayPoint, Vector2 rayDirection, Vector2 linePoint, Vector2 lineDirection, Vector2 lineNormal)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: linePoint
      type: System.Numerics.Vector2
    - id: lineDirection
      type: System.Numerics.Vector2
    - id: lineNormal
      type: System.Numerics.Vector2
    return:
      type: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,System.Single}
    content.vb: Public Shared Function IntersectRayLineInfo(rayPoint As Vector2, rayDirection As Vector2, linePoint As Vector2, lineDirection As Vector2, lineNormal As Vector2) As (p As CollisionPoint, t As Single)
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRayLineInfo*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayRayInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRayRayInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectRayRayInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRayRayInfo(Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.IntersectRayRayInfo(Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayRayInfo(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRayRayInfo
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 623
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static (CollisionPoint p, float t) IntersectRayRayInfo(Vector2 ray1Point, Vector2 ray1Direction, Vector2 ray2Point, Vector2 ray2Direction)
    parameters:
    - id: ray1Point
      type: System.Numerics.Vector2
    - id: ray1Direction
      type: System.Numerics.Vector2
    - id: ray2Point
      type: System.Numerics.Vector2
    - id: ray2Direction
      type: System.Numerics.Vector2
    return:
      type: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,System.Single}
    content.vb: Public Shared Function IntersectRayRayInfo(ray1Point As Vector2, ray1Direction As Vector2, ray2Point As Vector2, ray2Direction As Vector2) As (p As CollisionPoint, t As Single)
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRayRayInfo*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayRayInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRayRayInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectRayRayInfo(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRayRayInfo(Vector2, Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.IntersectRayRayInfo(Vector2, Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayRayInfo(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRayRayInfo
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 645
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static (CollisionPoint p, float t) IntersectRayRayInfo(Vector2 ray1Point, Vector2 ray1Direction, Vector2 ray2Point, Vector2 ray2Direction, Vector2 ray2Normal)
    parameters:
    - id: ray1Point
      type: System.Numerics.Vector2
    - id: ray1Direction
      type: System.Numerics.Vector2
    - id: ray2Point
      type: System.Numerics.Vector2
    - id: ray2Direction
      type: System.Numerics.Vector2
    - id: ray2Normal
      type: System.Numerics.Vector2
    return:
      type: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,System.Single}
    content.vb: Public Shared Function IntersectRayRayInfo(ray1Point As Vector2, ray1Direction As Vector2, ray2Point As Vector2, ray2Direction As Vector2, ray2Normal As Vector2) As (p As CollisionPoint, t As Single)
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRayRayInfo*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRaySegment(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRaySegment(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectRaySegment(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRaySegment(Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.IntersectRaySegment(Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRaySegment(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRaySegment
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 657
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static CollisionPoint IntersectRaySegment(Vector2 rayPoint, Vector2 rayDirection, Vector2 segmentStart, Vector2 segmentEnd)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: segmentStart
      type: System.Numerics.Vector2
    - id: segmentEnd
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Shared Function IntersectRaySegment(rayPoint As Vector2, rayDirection As Vector2, segmentStart As Vector2, segmentEnd As Vector2) As CollisionPoint
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRaySegment*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRaySegment(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRaySegment(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectRaySegment(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRaySegment(Vector2, Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.IntersectRaySegment(Vector2, Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRaySegment(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRaySegment
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 680
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static CollisionPoint IntersectRaySegment(Vector2 rayPoint, Vector2 rayDirection, Vector2 segmentStart, Vector2 segmentEnd, Vector2 segmentNormal)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: segmentStart
      type: System.Numerics.Vector2
    - id: segmentEnd
      type: System.Numerics.Vector2
    - id: segmentNormal
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Shared Function IntersectRaySegment(rayPoint As Vector2, rayDirection As Vector2, segmentStart As Vector2, segmentEnd As Vector2, segmentNormal As Vector2) As CollisionPoint
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRaySegment*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayLine(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRayLine(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectRayLine(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRayLine(Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.IntersectRayLine(Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayLine(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRayLine
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 691
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static CollisionPoint IntersectRayLine(Vector2 rayPoint, Vector2 rayDirection, Vector2 linePoint, Vector2 lineDirection)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: linePoint
      type: System.Numerics.Vector2
    - id: lineDirection
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Shared Function IntersectRayLine(rayPoint As Vector2, rayDirection As Vector2, linePoint As Vector2, lineDirection As Vector2) As CollisionPoint
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRayLine*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayLine(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRayLine(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectRayLine(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRayLine(Vector2, Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.IntersectRayLine(Vector2, Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayLine(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRayLine
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 712
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static CollisionPoint IntersectRayLine(Vector2 rayPoint, Vector2 rayDirection, Vector2 linePoint, Vector2 lineDirection, Vector2 lineNormal)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: linePoint
      type: System.Numerics.Vector2
    - id: lineDirection
      type: System.Numerics.Vector2
    - id: lineNormal
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Shared Function IntersectRayLine(rayPoint As Vector2, rayDirection As Vector2, linePoint As Vector2, lineDirection As Vector2, lineNormal As Vector2) As CollisionPoint
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRayLine*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRayRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectRayRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRayRay(Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.IntersectRayRay(Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayRay(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRayRay
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 723
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static CollisionPoint IntersectRayRay(Vector2 ray1Point, Vector2 ray1Direction, Vector2 ray2Point, Vector2 ray2Direction)
    parameters:
    - id: ray1Point
      type: System.Numerics.Vector2
    - id: ray1Direction
      type: System.Numerics.Vector2
    - id: ray2Point
      type: System.Numerics.Vector2
    - id: ray2Direction
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Shared Function IntersectRayRay(ray1Point As Vector2, ray1Direction As Vector2, ray2Point As Vector2, ray2Direction As Vector2) As CollisionPoint
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRayRay*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRayRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectRayRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRayRay(Vector2, Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.IntersectRayRay(Vector2, Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayRay(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRayRay
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 745
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static CollisionPoint IntersectRayRay(Vector2 ray1Point, Vector2 ray1Direction, Vector2 ray2Point, Vector2 ray2Direction, Vector2 ray2Normal)
    parameters:
    - id: ray1Point
      type: System.Numerics.Vector2
    - id: ray1Direction
      type: System.Numerics.Vector2
    - id: ray2Point
      type: System.Numerics.Vector2
    - id: ray2Direction
      type: System.Numerics.Vector2
    - id: ray2Normal
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Shared Function IntersectRayRay(ray1Point As Vector2, ray1Direction As Vector2, ray2Point As Vector2, ray2Direction As Vector2, ray2Normal As Vector2) As CollisionPoint
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRayRay*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayCircle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRayCircle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single)
  id: IntersectRayCircle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRayCircle(Vector2, Vector2, Vector2, float)
  nameWithType: Ray.IntersectRayCircle(Vector2, Vector2, Vector2, float)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayCircle(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRayCircle
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 756
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static (CollisionPoint a, CollisionPoint b) IntersectRayCircle(Vector2 rayPoint, Vector2 rayDirection, Vector2 circleCenter, float radius)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: circleCenter
      type: System.Numerics.Vector2
    - id: radius
      type: System.Single
    return:
      type: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint}
    content.vb: Public Shared Function IntersectRayCircle(rayPoint As Vector2, rayDirection As Vector2, circleCenter As Vector2, radius As Single) As (a As CollisionPoint, b As CollisionPoint)
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRayCircle*
  nameWithType.vb: Ray.IntersectRayCircle(Vector2, Vector2, Vector2, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectRayCircle(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, Single)
  name.vb: IntersectRayCircle(Vector2, Vector2, Vector2, Single)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRayTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectRayTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRayTriangle(Vector2, Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.IntersectRayTriangle(Vector2, Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayTriangle(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRayTriangle
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 796
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static (CollisionPoint a, CollisionPoint b) IntersectRayTriangle(Vector2 rayPoint, Vector2 rayDirection, Vector2 a, Vector2 b, Vector2 c)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: a
      type: System.Numerics.Vector2
    - id: b
      type: System.Numerics.Vector2
    - id: c
      type: System.Numerics.Vector2
    return:
      type: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint}
    content.vb: Public Shared Function IntersectRayTriangle(rayPoint As Vector2, rayDirection As Vector2, a As Vector2, b As Vector2, c As Vector2) As (a As CollisionPoint, b As CollisionPoint)
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRayTriangle*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRayQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectRayQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRayQuad(Vector2, Vector2, Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.IntersectRayQuad(Vector2, Vector2, Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayQuad(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRayQuad
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 822
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static (CollisionPoint a, CollisionPoint b) IntersectRayQuad(Vector2 rayPoint, Vector2 rayDirection, Vector2 a, Vector2 b, Vector2 c, Vector2 d)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: a
      type: System.Numerics.Vector2
    - id: b
      type: System.Numerics.Vector2
    - id: c
      type: System.Numerics.Vector2
    - id: d
      type: System.Numerics.Vector2
    return:
      type: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint}
    content.vb: Public Shared Function IntersectRayQuad(rayPoint As Vector2, rayDirection As Vector2, a As Vector2, b As Vector2, c As Vector2, d As Vector2) As (a As CollisionPoint, b As CollisionPoint)
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRayQuad*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRayRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectRayRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRayRect(Vector2, Vector2, Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.IntersectRayRect(Vector2, Vector2, Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayRect(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRayRect
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 857
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static (CollisionPoint a, CollisionPoint b) IntersectRayRect(Vector2 rayPoint, Vector2 rayDirection, Vector2 a, Vector2 b, Vector2 c, Vector2 d)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: a
      type: System.Numerics.Vector2
    - id: b
      type: System.Numerics.Vector2
    - id: c
      type: System.Numerics.Vector2
    - id: d
      type: System.Numerics.Vector2
    return:
      type: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint}
    content.vb: Public Shared Function IntersectRayRect(rayPoint As Vector2, rayDirection As Vector2, a As Vector2, b As Vector2, c As Vector2, d As Vector2) As (a As CollisionPoint, b As CollisionPoint)
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRayRect*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayPolygon(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2},System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRayPolygon(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2},System.Int32)
  id: IntersectRayPolygon(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2},System.Int32)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRayPolygon(Vector2, Vector2, List<Vector2>, int)
  nameWithType: Ray.IntersectRayPolygon(Vector2, Vector2, List<Vector2>, int)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayPolygon(System.Numerics.Vector2, System.Numerics.Vector2, System.Collections.Generic.List<System.Numerics.Vector2>, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRayPolygon
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 861
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static CollisionPoints? IntersectRayPolygon(Vector2 rayPoint, Vector2 rayDirection, List<Vector2> points, int maxCollisionPoints = -1)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: points
      type: System.Collections.Generic.List{System.Numerics.Vector2}
    - id: maxCollisionPoints
      type: System.Int32
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Shared Function IntersectRayPolygon(rayPoint As Vector2, rayDirection As Vector2, points As List(Of Vector2), maxCollisionPoints As Integer = -1) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRayPolygon*
  nameWithType.vb: Ray.IntersectRayPolygon(Vector2, Vector2, List(Of Vector2), Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectRayPolygon(System.Numerics.Vector2, System.Numerics.Vector2, System.Collections.Generic.List(Of System.Numerics.Vector2), Integer)
  name.vb: IntersectRayPolygon(Vector2, Vector2, List(Of Vector2), Integer)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayPolyline(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2},System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRayPolyline(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2},System.Int32)
  id: IntersectRayPolyline(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2},System.Int32)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRayPolyline(Vector2, Vector2, List<Vector2>, int)
  nameWithType: Ray.IntersectRayPolyline(Vector2, Vector2, List<Vector2>, int)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayPolyline(System.Numerics.Vector2, System.Numerics.Vector2, System.Collections.Generic.List<System.Numerics.Vector2>, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRayPolyline
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 878
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static CollisionPoints? IntersectRayPolyline(Vector2 rayPoint, Vector2 rayDirection, List<Vector2> points, int maxCollisionPoints = -1)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: points
      type: System.Collections.Generic.List{System.Numerics.Vector2}
    - id: maxCollisionPoints
      type: System.Int32
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Shared Function IntersectRayPolyline(rayPoint As Vector2, rayDirection As Vector2, points As List(Of Vector2), maxCollisionPoints As Integer = -1) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRayPolyline*
  nameWithType.vb: Ray.IntersectRayPolyline(Vector2, Vector2, List(Of Vector2), Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectRayPolyline(System.Numerics.Vector2, System.Numerics.Vector2, System.Collections.Generic.List(Of System.Numerics.Vector2), Integer)
  name.vb: IntersectRayPolyline(Vector2, Vector2, List(Of Vector2), Integer)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRaySegments(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRaySegments(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Int32)
  id: IntersectRaySegments(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Int32)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRaySegments(Vector2, Vector2, List<Segment>, int)
  nameWithType: Ray.IntersectRaySegments(Vector2, Vector2, List<Segment>, int)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRaySegments(System.Numerics.Vector2, System.Numerics.Vector2, System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRaySegments
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 895
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static CollisionPoints? IntersectRaySegments(Vector2 rayPoint, Vector2 rayDirection, List<Segment> segments, int maxCollisionPoints = -1)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: segments
      type: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
    - id: maxCollisionPoints
      type: System.Int32
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Shared Function IntersectRaySegments(rayPoint As Vector2, rayDirection As Vector2, segments As List(Of Segment), maxCollisionPoints As Integer = -1) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRaySegments*
  nameWithType.vb: Ray.IntersectRaySegments(Vector2, Vector2, List(Of Segment), Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectRaySegments(System.Numerics.Vector2, System.Numerics.Vector2, System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment), Integer)
  name.vb: IntersectRaySegments(Vector2, Vector2, List(Of Segment), Integer)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayPolygon(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2},ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRayPolygon(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2},ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  id: IntersectRayPolygon(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2},ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRayPolygon(Vector2, Vector2, List<Vector2>, ref CollisionPoints, bool)
  nameWithType: Ray.IntersectRayPolygon(Vector2, Vector2, List<Vector2>, ref CollisionPoints, bool)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayPolygon(System.Numerics.Vector2, System.Numerics.Vector2, System.Collections.Generic.List<System.Numerics.Vector2>, ref ShapeEngine.Core.CollisionSystem.CollisionPoints, bool)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRayPolygon
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 913
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static int IntersectRayPolygon(Vector2 rayPoint, Vector2 rayDirection, List<Vector2> points, ref CollisionPoints result, bool returnAfterFirstValid = false)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: points
      type: System.Collections.Generic.List{System.Numerics.Vector2}
    - id: result
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    - id: returnAfterFirstValid
      type: System.Boolean
    return:
      type: System.Int32
    content.vb: Public Shared Function IntersectRayPolygon(rayPoint As Vector2, rayDirection As Vector2, points As List(Of Vector2), result As CollisionPoints, returnAfterFirstValid As Boolean = False) As Integer
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRayPolygon*
  nameWithType.vb: Ray.IntersectRayPolygon(Vector2, Vector2, List(Of Vector2), CollisionPoints, Boolean)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectRayPolygon(System.Numerics.Vector2, System.Numerics.Vector2, System.Collections.Generic.List(Of System.Numerics.Vector2), ShapeEngine.Core.CollisionSystem.CollisionPoints, Boolean)
  name.vb: IntersectRayPolygon(Vector2, Vector2, List(Of Vector2), CollisionPoints, Boolean)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectSegment(System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectSegment(System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectSegment(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectSegment(Vector2, Vector2)
  nameWithType: Ray.IntersectSegment(Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectSegment(System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectSegment
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 930
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoint IntersectSegment(Vector2 segmentStart, Vector2 segmentEnd)
    parameters:
    - id: segmentStart
      type: System.Numerics.Vector2
    - id: segmentEnd
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Function IntersectSegment(segmentStart As Vector2, segmentEnd As Vector2) As CollisionPoint
  overload: ShapeEngine.Core.Shapes.Ray.IntersectSegment*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectSegment(ShapeEngine.Core.Shapes.Segment)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectSegment(ShapeEngine.Core.Shapes.Segment)
  id: IntersectSegment(ShapeEngine.Core.Shapes.Segment)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectSegment(Segment)
  nameWithType: Ray.IntersectSegment(Segment)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectSegment(ShapeEngine.Core.Shapes.Segment)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectSegment
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 931
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoint IntersectSegment(Segment segment)
    parameters:
    - id: segment
      type: ShapeEngine.Core.Shapes.Segment
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Function IntersectSegment(segment As Segment) As CollisionPoint
  overload: ShapeEngine.Core.Shapes.Ray.IntersectSegment*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectLine(System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectLine(System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectLine(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectLine(Vector2, Vector2)
  nameWithType: Ray.IntersectLine(Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectLine(System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectLine
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 932
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoint IntersectLine(Vector2 linePoint, Vector2 lineDirection)
    parameters:
    - id: linePoint
      type: System.Numerics.Vector2
    - id: lineDirection
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Function IntersectLine(linePoint As Vector2, lineDirection As Vector2) As CollisionPoint
  overload: ShapeEngine.Core.Shapes.Ray.IntersectLine*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectLine(ShapeEngine.Core.Shapes.Line)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectLine(ShapeEngine.Core.Shapes.Line)
  id: IntersectLine(ShapeEngine.Core.Shapes.Line)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectLine(Line)
  nameWithType: Ray.IntersectLine(Line)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectLine(ShapeEngine.Core.Shapes.Line)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectLine
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 933
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoint IntersectLine(Line line)
    parameters:
    - id: line
      type: ShapeEngine.Core.Shapes.Line
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Function IntersectLine(line As Line) As CollisionPoint
  overload: ShapeEngine.Core.Shapes.Ray.IntersectLine*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRay(System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRay(System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectRay(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRay(Vector2, Vector2)
  nameWithType: Ray.IntersectRay(Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRay(System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRay
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 934
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoint IntersectRay(Vector2 rayPoint, Vector2 rayDirection)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Function IntersectRay(rayPoint As Vector2, rayDirection As Vector2) As CollisionPoint
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRay*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRay(ShapeEngine.Core.Shapes.Ray)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRay(ShapeEngine.Core.Shapes.Ray)
  id: IntersectRay(ShapeEngine.Core.Shapes.Ray)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRay(Ray)
  nameWithType: Ray.IntersectRay(Ray)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRay(ShapeEngine.Core.Shapes.Ray)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRay
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 935
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoint IntersectRay(Ray ray)
    parameters:
    - id: ray
      type: ShapeEngine.Core.Shapes.Ray
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Function IntersectRay(ray As Ray) As CollisionPoint
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRay*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectCircle(System.Numerics.Vector2,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectCircle(System.Numerics.Vector2,System.Single)
  id: IntersectCircle(System.Numerics.Vector2,System.Single)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectCircle(Vector2, float)
  nameWithType: Ray.IntersectCircle(Vector2, float)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectCircle(System.Numerics.Vector2, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectCircle
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 936
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public (CollisionPoint a, CollisionPoint b) IntersectCircle(Vector2 circleCenter, float circleRadius)
    parameters:
    - id: circleCenter
      type: System.Numerics.Vector2
    - id: circleRadius
      type: System.Single
    return:
      type: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint}
    content.vb: Public Function IntersectCircle(circleCenter As Vector2, circleRadius As Single) As (a As CollisionPoint, b As CollisionPoint)
  overload: ShapeEngine.Core.Shapes.Ray.IntersectCircle*
  nameWithType.vb: Ray.IntersectCircle(Vector2, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectCircle(System.Numerics.Vector2, Single)
  name.vb: IntersectCircle(Vector2, Single)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectCircle(ShapeEngine.Core.Shapes.Circle)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectCircle(ShapeEngine.Core.Shapes.Circle)
  id: IntersectCircle(ShapeEngine.Core.Shapes.Circle)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectCircle(Circle)
  nameWithType: Ray.IntersectCircle(Circle)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectCircle(ShapeEngine.Core.Shapes.Circle)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectCircle
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 937
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public (CollisionPoint a, CollisionPoint b) IntersectCircle(Circle circle)
    parameters:
    - id: circle
      type: ShapeEngine.Core.Shapes.Circle
    return:
      type: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint}
    content.vb: Public Function IntersectCircle(circle As Circle) As (a As CollisionPoint, b As CollisionPoint)
  overload: ShapeEngine.Core.Shapes.Ray.IntersectCircle*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectTriangle(Vector2, Vector2, Vector2)
  nameWithType: Ray.IntersectTriangle(Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectTriangle(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectTriangle
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 938
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public (CollisionPoint a, CollisionPoint b) IntersectTriangle(Vector2 a, Vector2 b, Vector2 c)
    parameters:
    - id: a
      type: System.Numerics.Vector2
    - id: b
      type: System.Numerics.Vector2
    - id: c
      type: System.Numerics.Vector2
    return:
      type: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint}
    content.vb: Public Function IntersectTriangle(a As Vector2, b As Vector2, c As Vector2) As (a As CollisionPoint, b As CollisionPoint)
  overload: ShapeEngine.Core.Shapes.Ray.IntersectTriangle*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectTriangle(ShapeEngine.Core.Shapes.Triangle)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectTriangle(ShapeEngine.Core.Shapes.Triangle)
  id: IntersectTriangle(ShapeEngine.Core.Shapes.Triangle)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectTriangle(Triangle)
  nameWithType: Ray.IntersectTriangle(Triangle)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectTriangle(ShapeEngine.Core.Shapes.Triangle)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectTriangle
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 939
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public (CollisionPoint a, CollisionPoint b) IntersectTriangle(Triangle triangle)
    parameters:
    - id: triangle
      type: ShapeEngine.Core.Shapes.Triangle
    return:
      type: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint}
    content.vb: Public Function IntersectTriangle(triangle As Triangle) As (a As CollisionPoint, b As CollisionPoint)
  overload: ShapeEngine.Core.Shapes.Ray.IntersectTriangle*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectQuad(Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.IntersectQuad(Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectQuad(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectQuad
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 940
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public (CollisionPoint a, CollisionPoint b) IntersectQuad(Vector2 a, Vector2 b, Vector2 c, Vector2 d)
    parameters:
    - id: a
      type: System.Numerics.Vector2
    - id: b
      type: System.Numerics.Vector2
    - id: c
      type: System.Numerics.Vector2
    - id: d
      type: System.Numerics.Vector2
    return:
      type: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint}
    content.vb: Public Function IntersectQuad(a As Vector2, b As Vector2, c As Vector2, d As Vector2) As (a As CollisionPoint, b As CollisionPoint)
  overload: ShapeEngine.Core.Shapes.Ray.IntersectQuad*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectQuad(ShapeEngine.Core.Shapes.Quad)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectQuad(ShapeEngine.Core.Shapes.Quad)
  id: IntersectQuad(ShapeEngine.Core.Shapes.Quad)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectQuad(Quad)
  nameWithType: Ray.IntersectQuad(Quad)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectQuad(ShapeEngine.Core.Shapes.Quad)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectQuad
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 941
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public (CollisionPoint a, CollisionPoint b) IntersectQuad(Quad quad)
    parameters:
    - id: quad
      type: ShapeEngine.Core.Shapes.Quad
    return:
      type: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint}
    content.vb: Public Function IntersectQuad(quad As Quad) As (a As CollisionPoint, b As CollisionPoint)
  overload: ShapeEngine.Core.Shapes.Ray.IntersectQuad*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: IntersectRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRect(Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.IntersectRect(Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRect(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRect
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 942
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public (CollisionPoint a, CollisionPoint b) IntersectRect(Vector2 a, Vector2 b, Vector2 c, Vector2 d)
    parameters:
    - id: a
      type: System.Numerics.Vector2
    - id: b
      type: System.Numerics.Vector2
    - id: c
      type: System.Numerics.Vector2
    - id: d
      type: System.Numerics.Vector2
    return:
      type: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint}
    content.vb: Public Function IntersectRect(a As Vector2, b As Vector2, c As Vector2, d As Vector2) As (a As CollisionPoint, b As CollisionPoint)
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRect*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRect(ShapeEngine.Core.Shapes.Rect)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectRect(ShapeEngine.Core.Shapes.Rect)
  id: IntersectRect(ShapeEngine.Core.Shapes.Rect)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectRect(Rect)
  nameWithType: Ray.IntersectRect(Rect)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRect(ShapeEngine.Core.Shapes.Rect)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectRect
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 943
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public (CollisionPoint a, CollisionPoint b) IntersectRect(Rect rect)
    parameters:
    - id: rect
      type: ShapeEngine.Core.Shapes.Rect
    return:
      type: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint}
    content.vb: Public Function IntersectRect(rect As Rect) As (a As CollisionPoint, b As CollisionPoint)
  overload: ShapeEngine.Core.Shapes.Ray.IntersectRect*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectPolygon(System.Collections.Generic.List{System.Numerics.Vector2},System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectPolygon(System.Collections.Generic.List{System.Numerics.Vector2},System.Int32)
  id: IntersectPolygon(System.Collections.Generic.List{System.Numerics.Vector2},System.Int32)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectPolygon(List<Vector2>, int)
  nameWithType: Ray.IntersectPolygon(List<Vector2>, int)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectPolygon(System.Collections.Generic.List<System.Numerics.Vector2>, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectPolygon
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 945
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectPolygon(List<Vector2> points, int maxCollisionPoints = -1)
    parameters:
    - id: points
      type: System.Collections.Generic.List{System.Numerics.Vector2}
    - id: maxCollisionPoints
      type: System.Int32
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectPolygon(points As List(Of Vector2), maxCollisionPoints As Integer = -1) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.IntersectPolygon*
  nameWithType.vb: Ray.IntersectPolygon(List(Of Vector2), Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectPolygon(System.Collections.Generic.List(Of System.Numerics.Vector2), Integer)
  name.vb: IntersectPolygon(List(Of Vector2), Integer)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectPolygon(ShapeEngine.Core.Shapes.Polygon,System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectPolygon(ShapeEngine.Core.Shapes.Polygon,System.Int32)
  id: IntersectPolygon(ShapeEngine.Core.Shapes.Polygon,System.Int32)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectPolygon(Polygon, int)
  nameWithType: Ray.IntersectPolygon(Polygon, int)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectPolygon(ShapeEngine.Core.Shapes.Polygon, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectPolygon
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 946
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectPolygon(Polygon polygon, int maxCollisionPoints = -1)
    parameters:
    - id: polygon
      type: ShapeEngine.Core.Shapes.Polygon
    - id: maxCollisionPoints
      type: System.Int32
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectPolygon(polygon As Polygon, maxCollisionPoints As Integer = -1) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.IntersectPolygon*
  nameWithType.vb: Ray.IntersectPolygon(Polygon, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectPolygon(ShapeEngine.Core.Shapes.Polygon, Integer)
  name.vb: IntersectPolygon(Polygon, Integer)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectPolyline(System.Collections.Generic.List{System.Numerics.Vector2},System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectPolyline(System.Collections.Generic.List{System.Numerics.Vector2},System.Int32)
  id: IntersectPolyline(System.Collections.Generic.List{System.Numerics.Vector2},System.Int32)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectPolyline(List<Vector2>, int)
  nameWithType: Ray.IntersectPolyline(List<Vector2>, int)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectPolyline(System.Collections.Generic.List<System.Numerics.Vector2>, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectPolyline
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 947
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectPolyline(List<Vector2> points, int maxCollisionPoints = -1)
    parameters:
    - id: points
      type: System.Collections.Generic.List{System.Numerics.Vector2}
    - id: maxCollisionPoints
      type: System.Int32
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectPolyline(points As List(Of Vector2), maxCollisionPoints As Integer = -1) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.IntersectPolyline*
  nameWithType.vb: Ray.IntersectPolyline(List(Of Vector2), Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectPolyline(System.Collections.Generic.List(Of System.Numerics.Vector2), Integer)
  name.vb: IntersectPolyline(List(Of Vector2), Integer)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectPolyline(ShapeEngine.Core.Shapes.Polyline,System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectPolyline(ShapeEngine.Core.Shapes.Polyline,System.Int32)
  id: IntersectPolyline(ShapeEngine.Core.Shapes.Polyline,System.Int32)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectPolyline(Polyline, int)
  nameWithType: Ray.IntersectPolyline(Polyline, int)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectPolyline(ShapeEngine.Core.Shapes.Polyline, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectPolyline
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 948
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectPolyline(Polyline polyline, int maxCollisionPoints = -1)
    parameters:
    - id: polyline
      type: ShapeEngine.Core.Shapes.Polyline
    - id: maxCollisionPoints
      type: System.Int32
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectPolyline(polyline As Polyline, maxCollisionPoints As Integer = -1) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.IntersectPolyline*
  nameWithType.vb: Ray.IntersectPolyline(Polyline, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectPolyline(ShapeEngine.Core.Shapes.Polyline, Integer)
  name.vb: IntersectPolyline(Polyline, Integer)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectSegments(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectSegments(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Int32)
  id: IntersectSegments(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment},System.Int32)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectSegments(List<Segment>, int)
  nameWithType: Ray.IntersectSegments(List<Segment>, int)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectSegments(System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectSegments
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 949
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectSegments(List<Segment> segments, int maxCollisionPoints = -1)
    parameters:
    - id: segments
      type: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
    - id: maxCollisionPoints
      type: System.Int32
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectSegments(segments As List(Of Segment), maxCollisionPoints As Integer = -1) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.IntersectSegments*
  nameWithType.vb: Ray.IntersectSegments(List(Of Segment), Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectSegments(System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment), Integer)
  name.vb: IntersectSegments(List(Of Segment), Integer)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectSegments(ShapeEngine.Core.Shapes.Segments,System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectSegments(ShapeEngine.Core.Shapes.Segments,System.Int32)
  id: IntersectSegments(ShapeEngine.Core.Shapes.Segments,System.Int32)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectSegments(Segments, int)
  nameWithType: Ray.IntersectSegments(Segments, int)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectSegments(ShapeEngine.Core.Shapes.Segments, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectSegments
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 950
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectSegments(Segments segments, int maxCollisionPoints = -1)
    parameters:
    - id: segments
      type: ShapeEngine.Core.Shapes.Segments
    - id: maxCollisionPoints
      type: System.Int32
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectSegments(segments As Segments, maxCollisionPoints As Integer = -1) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.IntersectSegments*
  nameWithType.vb: Ray.IntersectSegments(Segments, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectSegments(ShapeEngine.Core.Shapes.Segments, Integer)
  name.vb: IntersectSegments(Segments, Integer)
- uid: ShapeEngine.Core.Shapes.Ray.Intersect(ShapeEngine.Core.CollisionSystem.Collider)
  commentId: M:ShapeEngine.Core.Shapes.Ray.Intersect(ShapeEngine.Core.CollisionSystem.Collider)
  id: Intersect(ShapeEngine.Core.CollisionSystem.Collider)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: Intersect(Collider)
  nameWithType: Ray.Intersect(Collider)
  fullName: ShapeEngine.Core.Shapes.Ray.Intersect(ShapeEngine.Core.CollisionSystem.Collider)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Intersect
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 952
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? Intersect(Collider collider)
    parameters:
    - id: collider
      type: ShapeEngine.Core.CollisionSystem.Collider
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function Intersect(collider As Collider) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.Intersect*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Segment)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Segment)
  id: IntersectShape(ShapeEngine.Core.Shapes.Segment)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Segment)
  nameWithType: Ray.IntersectShape(Segment)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Segment)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 990
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectShape(Segment segment)
    parameters:
    - id: segment
      type: ShapeEngine.Core.Shapes.Segment
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectShape(segment As Segment) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Line)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Line)
  id: IntersectShape(ShapeEngine.Core.Shapes.Line)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Line)
  nameWithType: Ray.IntersectShape(Line)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Line)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1003
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectShape(Line line)
    parameters:
    - id: line
      type: ShapeEngine.Core.Shapes.Line
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectShape(line As Line) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Ray)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Ray)
  id: IntersectShape(ShapeEngine.Core.Shapes.Ray)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Ray)
  nameWithType: Ray.IntersectShape(Ray)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Ray)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1015
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectShape(Ray ray)
    parameters:
    - id: ray
      type: ShapeEngine.Core.Shapes.Ray
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectShape(ray As Ray) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Circle)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Circle)
  id: IntersectShape(ShapeEngine.Core.Shapes.Circle)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Circle)
  nameWithType: Ray.IntersectShape(Circle)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Circle)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1027
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectShape(Circle circle)
    parameters:
    - id: circle
      type: ShapeEngine.Core.Shapes.Circle
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectShape(circle As Circle) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Triangle)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Triangle)
  id: IntersectShape(ShapeEngine.Core.Shapes.Triangle)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Triangle)
  nameWithType: Ray.IntersectShape(Triangle)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Triangle)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1046
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectShape(Triangle t)
    parameters:
    - id: t
      type: ShapeEngine.Core.Shapes.Triangle
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectShape(t As Triangle) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Quad)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Quad)
  id: IntersectShape(ShapeEngine.Core.Shapes.Quad)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Quad)
  nameWithType: Ray.IntersectShape(Quad)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Quad)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1065
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectShape(Quad q)
    parameters:
    - id: q
      type: ShapeEngine.Core.Shapes.Quad
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectShape(q As Quad) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Rect)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Rect)
  id: IntersectShape(ShapeEngine.Core.Shapes.Rect)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Rect)
  nameWithType: Ray.IntersectShape(Rect)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Rect)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1084
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectShape(Rect r)
    parameters:
    - id: r
      type: ShapeEngine.Core.Shapes.Rect
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectShape(r As Rect) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polygon,System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polygon,System.Int32)
  id: IntersectShape(ShapeEngine.Core.Shapes.Polygon,System.Int32)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Polygon, int)
  nameWithType: Ray.IntersectShape(Polygon, int)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polygon, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1104
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectShape(Polygon p, int maxCollisionPoints = -1)
    parameters:
    - id: p
      type: ShapeEngine.Core.Shapes.Polygon
    - id: maxCollisionPoints
      type: System.Int32
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectShape(p As Polygon, maxCollisionPoints As Integer = -1) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
  nameWithType.vb: Ray.IntersectShape(Polygon, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polygon, Integer)
  name.vb: IntersectShape(Polygon, Integer)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polyline,System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polyline,System.Int32)
  id: IntersectShape(ShapeEngine.Core.Shapes.Polyline,System.Int32)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Polyline, int)
  nameWithType: Ray.IntersectShape(Polyline, int)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polyline, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1105
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectShape(Polyline pl, int maxCollisionPoints = -1)
    parameters:
    - id: pl
      type: ShapeEngine.Core.Shapes.Polyline
    - id: maxCollisionPoints
      type: System.Int32
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectShape(pl As Polyline, maxCollisionPoints As Integer = -1) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
  nameWithType.vb: Ray.IntersectShape(Polyline, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polyline, Integer)
  name.vb: IntersectShape(Polyline, Integer)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Segments,System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Segments,System.Int32)
  id: IntersectShape(ShapeEngine.Core.Shapes.Segments,System.Int32)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Segments, int)
  nameWithType: Ray.IntersectShape(Segments, int)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Segments, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1106
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoints? IntersectShape(Segments segments, int maxCollisionPoints = -1)
    parameters:
    - id: segments
      type: ShapeEngine.Core.Shapes.Segments
    - id: maxCollisionPoints
      type: System.Int32
    return:
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    content.vb: Public Function IntersectShape(segments As Segments, maxCollisionPoints As Integer = -1) As CollisionPoints
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
  nameWithType.vb: Ray.IntersectShape(Segments, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Segments, Integer)
  name.vb: IntersectShape(Segments, Integer)
- uid: ShapeEngine.Core.Shapes.Ray.Intersect(ShapeEngine.Core.CollisionSystem.Collider,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  commentId: M:ShapeEngine.Core.Shapes.Ray.Intersect(ShapeEngine.Core.CollisionSystem.Collider,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  id: Intersect(ShapeEngine.Core.CollisionSystem.Collider,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: Intersect(Collider, ref CollisionPoints, bool)
  nameWithType: Ray.Intersect(Collider, ref CollisionPoints, bool)
  fullName: ShapeEngine.Core.Shapes.Ray.Intersect(ShapeEngine.Core.CollisionSystem.Collider, ref ShapeEngine.Core.CollisionSystem.CollisionPoints, bool)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Intersect
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1109
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public int Intersect(Collider collider, ref CollisionPoints points, bool returnAfterFirstValid = false)
    parameters:
    - id: collider
      type: ShapeEngine.Core.CollisionSystem.Collider
    - id: points
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    - id: returnAfterFirstValid
      type: System.Boolean
    return:
      type: System.Int32
    content.vb: Public Function Intersect(collider As Collider, points As CollisionPoints, returnAfterFirstValid As Boolean = False) As Integer
  overload: ShapeEngine.Core.Shapes.Ray.Intersect*
  nameWithType.vb: Ray.Intersect(Collider, CollisionPoints, Boolean)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.Intersect(ShapeEngine.Core.CollisionSystem.Collider, ShapeEngine.Core.CollisionSystem.CollisionPoints, Boolean)
  name.vb: Intersect(Collider, CollisionPoints, Boolean)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Ray,ShapeEngine.Core.CollisionSystem.CollisionPoints@)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Ray,ShapeEngine.Core.CollisionSystem.CollisionPoints@)
  id: IntersectShape(ShapeEngine.Core.Shapes.Ray,ShapeEngine.Core.CollisionSystem.CollisionPoints@)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Ray, ref CollisionPoints)
  nameWithType: Ray.IntersectShape(Ray, ref CollisionPoints)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Ray, ref ShapeEngine.Core.CollisionSystem.CollisionPoints)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1146
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public int IntersectShape(Ray r, ref CollisionPoints points)
    parameters:
    - id: r
      type: ShapeEngine.Core.Shapes.Ray
    - id: points
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    return:
      type: System.Int32
    content.vb: Public Function IntersectShape(r As Ray, points As CollisionPoints) As Integer
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
  nameWithType.vb: Ray.IntersectShape(Ray, CollisionPoints)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Ray, ShapeEngine.Core.CollisionSystem.CollisionPoints)
  name.vb: IntersectShape(Ray, CollisionPoints)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Line,ShapeEngine.Core.CollisionSystem.CollisionPoints@)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Line,ShapeEngine.Core.CollisionSystem.CollisionPoints@)
  id: IntersectShape(ShapeEngine.Core.Shapes.Line,ShapeEngine.Core.CollisionSystem.CollisionPoints@)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Line, ref CollisionPoints)
  nameWithType: Ray.IntersectShape(Line, ref CollisionPoints)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Line, ref ShapeEngine.Core.CollisionSystem.CollisionPoints)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1157
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public int IntersectShape(Line l, ref CollisionPoints points)
    parameters:
    - id: l
      type: ShapeEngine.Core.Shapes.Line
    - id: points
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    return:
      type: System.Int32
    content.vb: Public Function IntersectShape(l As Line, points As CollisionPoints) As Integer
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
  nameWithType.vb: Ray.IntersectShape(Line, CollisionPoints)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Line, ShapeEngine.Core.CollisionSystem.CollisionPoints)
  name.vb: IntersectShape(Line, CollisionPoints)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.CollisionSystem.CollisionPoints@)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.CollisionSystem.CollisionPoints@)
  id: IntersectShape(ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.CollisionSystem.CollisionPoints@)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Segment, ref CollisionPoints)
  nameWithType: Ray.IntersectShape(Segment, ref CollisionPoints)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Segment, ref ShapeEngine.Core.CollisionSystem.CollisionPoints)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1168
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public int IntersectShape(Segment s, ref CollisionPoints points)
    parameters:
    - id: s
      type: ShapeEngine.Core.Shapes.Segment
    - id: points
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    return:
      type: System.Int32
    content.vb: Public Function IntersectShape(s As Segment, points As CollisionPoints) As Integer
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
  nameWithType.vb: Ray.IntersectShape(Segment, CollisionPoints)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Segment, ShapeEngine.Core.CollisionSystem.CollisionPoints)
  name.vb: IntersectShape(Segment, CollisionPoints)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Circle,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Circle,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  id: IntersectShape(ShapeEngine.Core.Shapes.Circle,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Circle, ref CollisionPoints, bool)
  nameWithType: Ray.IntersectShape(Circle, ref CollisionPoints, bool)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Circle, ref ShapeEngine.Core.CollisionSystem.CollisionPoints, bool)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1179
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public int IntersectShape(Circle c, ref CollisionPoints points, bool returnAfterFirstValid = false)
    parameters:
    - id: c
      type: ShapeEngine.Core.Shapes.Circle
    - id: points
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    - id: returnAfterFirstValid
      type: System.Boolean
    return:
      type: System.Int32
    content.vb: Public Function IntersectShape(c As Circle, points As CollisionPoints, returnAfterFirstValid As Boolean = False) As Integer
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
  nameWithType.vb: Ray.IntersectShape(Circle, CollisionPoints, Boolean)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Circle, ShapeEngine.Core.CollisionSystem.CollisionPoints, Boolean)
  name.vb: IntersectShape(Circle, CollisionPoints, Boolean)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Triangle,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Triangle,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  id: IntersectShape(ShapeEngine.Core.Shapes.Triangle,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Triangle, ref CollisionPoints, bool)
  nameWithType: Ray.IntersectShape(Triangle, ref CollisionPoints, bool)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Triangle, ref ShapeEngine.Core.CollisionSystem.CollisionPoints, bool)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1208
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public int IntersectShape(Triangle t, ref CollisionPoints points, bool returnAfterFirstValid = false)
    parameters:
    - id: t
      type: ShapeEngine.Core.Shapes.Triangle
    - id: points
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    - id: returnAfterFirstValid
      type: System.Boolean
    return:
      type: System.Int32
    content.vb: Public Function IntersectShape(t As Triangle, points As CollisionPoints, returnAfterFirstValid As Boolean = False) As Integer
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
  nameWithType.vb: Ray.IntersectShape(Triangle, CollisionPoints, Boolean)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Triangle, ShapeEngine.Core.CollisionSystem.CollisionPoints, Boolean)
  name.vb: IntersectShape(Triangle, CollisionPoints, Boolean)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Quad,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Quad,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  id: IntersectShape(ShapeEngine.Core.Shapes.Quad,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Quad, ref CollisionPoints, bool)
  nameWithType: Ray.IntersectShape(Quad, ref CollisionPoints, bool)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Quad, ref ShapeEngine.Core.CollisionSystem.CollisionPoints, bool)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1239
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public int IntersectShape(Quad q, ref CollisionPoints points, bool returnAfterFirstValid = false)
    parameters:
    - id: q
      type: ShapeEngine.Core.Shapes.Quad
    - id: points
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    - id: returnAfterFirstValid
      type: System.Boolean
    return:
      type: System.Int32
    content.vb: Public Function IntersectShape(q As Quad, points As CollisionPoints, returnAfterFirstValid As Boolean = False) As Integer
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
  nameWithType.vb: Ray.IntersectShape(Quad, CollisionPoints, Boolean)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Quad, ShapeEngine.Core.CollisionSystem.CollisionPoints, Boolean)
  name.vb: IntersectShape(Quad, CollisionPoints, Boolean)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Rect,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Rect,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  id: IntersectShape(ShapeEngine.Core.Shapes.Rect,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Rect, ref CollisionPoints, bool)
  nameWithType: Ray.IntersectShape(Rect, ref CollisionPoints, bool)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Rect, ref ShapeEngine.Core.CollisionSystem.CollisionPoints, bool)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1280
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public int IntersectShape(Rect r, ref CollisionPoints points, bool returnAfterFirstValid = false)
    parameters:
    - id: r
      type: ShapeEngine.Core.Shapes.Rect
    - id: points
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    - id: returnAfterFirstValid
      type: System.Boolean
    return:
      type: System.Int32
    content.vb: Public Function IntersectShape(r As Rect, points As CollisionPoints, returnAfterFirstValid As Boolean = False) As Integer
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
  nameWithType.vb: Ray.IntersectShape(Rect, CollisionPoints, Boolean)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Rect, ShapeEngine.Core.CollisionSystem.CollisionPoints, Boolean)
  name.vb: IntersectShape(Rect, CollisionPoints, Boolean)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polygon,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polygon,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  id: IntersectShape(ShapeEngine.Core.Shapes.Polygon,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Polygon, ref CollisionPoints, bool)
  nameWithType: Ray.IntersectShape(Polygon, ref CollisionPoints, bool)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polygon, ref ShapeEngine.Core.CollisionSystem.CollisionPoints, bool)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1326
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public int IntersectShape(Polygon p, ref CollisionPoints points, bool returnAfterFirstValid = false)
    parameters:
    - id: p
      type: ShapeEngine.Core.Shapes.Polygon
    - id: points
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    - id: returnAfterFirstValid
      type: System.Boolean
    return:
      type: System.Int32
    content.vb: Public Function IntersectShape(p As Polygon, points As CollisionPoints, returnAfterFirstValid As Boolean = False) As Integer
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
  nameWithType.vb: Ray.IntersectShape(Polygon, CollisionPoints, Boolean)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polygon, ShapeEngine.Core.CollisionSystem.CollisionPoints, Boolean)
  name.vb: IntersectShape(Polygon, CollisionPoints, Boolean)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polyline,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polyline,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  id: IntersectShape(ShapeEngine.Core.Shapes.Polyline,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Polyline, ref CollisionPoints, bool)
  nameWithType: Ray.IntersectShape(Polyline, ref CollisionPoints, bool)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polyline, ref ShapeEngine.Core.CollisionSystem.CollisionPoints, bool)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1342
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public int IntersectShape(Polyline pl, ref CollisionPoints points, bool returnAfterFirstValid = false)
    parameters:
    - id: pl
      type: ShapeEngine.Core.Shapes.Polyline
    - id: points
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    - id: returnAfterFirstValid
      type: System.Boolean
    return:
      type: System.Int32
    content.vb: Public Function IntersectShape(pl As Polyline, points As CollisionPoints, returnAfterFirstValid As Boolean = False) As Integer
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
  nameWithType.vb: Ray.IntersectShape(Polyline, CollisionPoints, Boolean)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Polyline, ShapeEngine.Core.CollisionSystem.CollisionPoints, Boolean)
  name.vb: IntersectShape(Polyline, CollisionPoints, Boolean)
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Segments,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  commentId: M:ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Segments,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  id: IntersectShape(ShapeEngine.Core.Shapes.Segments,ShapeEngine.Core.CollisionSystem.CollisionPoints@,System.Boolean)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: IntersectShape(Segments, ref CollisionPoints, bool)
  nameWithType: Ray.IntersectShape(Segments, ref CollisionPoints, bool)
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Segments, ref ShapeEngine.Core.CollisionSystem.CollisionPoints, bool)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1358
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public int IntersectShape(Segments shape, ref CollisionPoints points, bool returnAfterFirstValid = false)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Segments
    - id: points
      type: ShapeEngine.Core.CollisionSystem.CollisionPoints
    - id: returnAfterFirstValid
      type: System.Boolean
    return:
      type: System.Int32
    content.vb: Public Function IntersectShape(shape As Segments, points As CollisionPoints, returnAfterFirstValid As Boolean = False) As Integer
  overload: ShapeEngine.Core.Shapes.Ray.IntersectShape*
  nameWithType.vb: Ray.IntersectShape(Segments, CollisionPoints, Boolean)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.IntersectShape(ShapeEngine.Core.Shapes.Segments, ShapeEngine.Core.CollisionSystem.CollisionPoints, Boolean)
  name.vb: IntersectShape(Segments, CollisionPoints, Boolean)
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRaySegment(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapRaySegment(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapRaySegment(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapRaySegment(Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.OverlapRaySegment(Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRaySegment(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapRaySegment
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1381
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapRaySegment(Vector2 rayPoint, Vector2 rayDirection, Vector2 segmentStart, Vector2 segmentEnd)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: segmentStart
      type: System.Numerics.Vector2
    - id: segmentEnd
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapRaySegment(rayPoint As Vector2, rayDirection As Vector2, segmentStart As Vector2, segmentEnd As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapRaySegment*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRayLine(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapRayLine(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapRayLine(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapRayLine(Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.OverlapRayLine(Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRayLine(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapRayLine
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1402
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapRayLine(Vector2 rayPoint, Vector2 rayDirection, Vector2 linePoint, Vector2 lineDirection)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: linePoint
      type: System.Numerics.Vector2
    - id: lineDirection
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapRayLine(rayPoint As Vector2, rayDirection As Vector2, linePoint As Vector2, lineDirection As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapRayLine*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRayRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapRayRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapRayRay(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapRayRay(Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.OverlapRayRay(Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRayRay(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapRayRay
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1421
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapRayRay(Vector2 ray1Point, Vector2 ray1Direction, Vector2 ray2Point, Vector2 ray2Direction)
    parameters:
    - id: ray1Point
      type: System.Numerics.Vector2
    - id: ray1Direction
      type: System.Numerics.Vector2
    - id: ray2Point
      type: System.Numerics.Vector2
    - id: ray2Direction
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapRayRay(ray1Point As Vector2, ray1Direction As Vector2, ray2Point As Vector2, ray2Direction As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapRayRay*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRayCircle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapRayCircle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single)
  id: OverlapRayCircle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Single)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapRayCircle(Vector2, Vector2, Vector2, float)
  nameWithType: Ray.OverlapRayCircle(Vector2, Vector2, Vector2, float)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRayCircle(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapRayCircle
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1441
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapRayCircle(Vector2 rayPoint, Vector2 rayDirection, Vector2 circleCenter, float circleRadius)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: circleCenter
      type: System.Numerics.Vector2
    - id: circleRadius
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapRayCircle(rayPoint As Vector2, rayDirection As Vector2, circleCenter As Vector2, circleRadius As Single) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapRayCircle*
  nameWithType.vb: Ray.OverlapRayCircle(Vector2, Vector2, Vector2, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.OverlapRayCircle(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, Single)
  name.vb: OverlapRayCircle(Vector2, Vector2, Vector2, Single)
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRayTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapRayTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapRayTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapRayTriangle(Vector2, Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.OverlapRayTriangle(Vector2, Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRayTriangle(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapRayTriangle
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1475
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapRayTriangle(Vector2 rayPoint, Vector2 rayDirection, Vector2 a, Vector2 b, Vector2 c)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: a
      type: System.Numerics.Vector2
    - id: b
      type: System.Numerics.Vector2
    - id: c
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapRayTriangle(rayPoint As Vector2, rayDirection As Vector2, a As Vector2, b As Vector2, c As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapRayTriangle*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRayQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapRayQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapRayQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapRayQuad(Vector2, Vector2, Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.OverlapRayQuad(Vector2, Vector2, Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRayQuad(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapRayQuad
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1490
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapRayQuad(Vector2 rayPoint, Vector2 rayDirection, Vector2 a, Vector2 b, Vector2 c, Vector2 d)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: a
      type: System.Numerics.Vector2
    - id: b
      type: System.Numerics.Vector2
    - id: c
      type: System.Numerics.Vector2
    - id: d
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapRayQuad(rayPoint As Vector2, rayDirection As Vector2, a As Vector2, b As Vector2, c As Vector2, d As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapRayQuad*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRayRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapRayRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapRayRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapRayRect(Vector2, Vector2, Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.OverlapRayRect(Vector2, Vector2, Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRayRect(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapRayRect
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1509
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapRayRect(Vector2 rayPoint, Vector2 rayDirection, Vector2 a, Vector2 b, Vector2 c, Vector2 d)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: a
      type: System.Numerics.Vector2
    - id: b
      type: System.Numerics.Vector2
    - id: c
      type: System.Numerics.Vector2
    - id: d
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapRayRect(rayPoint As Vector2, rayDirection As Vector2, a As Vector2, b As Vector2, c As Vector2, d As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapRayRect*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRayPolygon(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2})
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapRayPolygon(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2})
  id: OverlapRayPolygon(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2})
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapRayPolygon(Vector2, Vector2, List<Vector2>)
  nameWithType: Ray.OverlapRayPolygon(Vector2, Vector2, List<Vector2>)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRayPolygon(System.Numerics.Vector2, System.Numerics.Vector2, System.Collections.Generic.List<System.Numerics.Vector2>)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapRayPolygon
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1513
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapRayPolygon(Vector2 rayPoint, Vector2 rayDirection, List<Vector2> points)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: points
      type: System.Collections.Generic.List{System.Numerics.Vector2}
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapRayPolygon(rayPoint As Vector2, rayDirection As Vector2, points As List(Of Vector2)) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapRayPolygon*
  nameWithType.vb: Ray.OverlapRayPolygon(Vector2, Vector2, List(Of Vector2))
  fullName.vb: ShapeEngine.Core.Shapes.Ray.OverlapRayPolygon(System.Numerics.Vector2, System.Numerics.Vector2, System.Collections.Generic.List(Of System.Numerics.Vector2))
  name.vb: OverlapRayPolygon(Vector2, Vector2, List(Of Vector2))
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRayPolyline(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2})
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapRayPolyline(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2})
  id: OverlapRayPolyline(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{System.Numerics.Vector2})
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapRayPolyline(Vector2, Vector2, List<Vector2>)
  nameWithType: Ray.OverlapRayPolyline(Vector2, Vector2, List<Vector2>)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRayPolyline(System.Numerics.Vector2, System.Numerics.Vector2, System.Collections.Generic.List<System.Numerics.Vector2>)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapRayPolyline
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1524
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapRayPolyline(Vector2 rayPoint, Vector2 rayDirection, List<Vector2> points)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: points
      type: System.Collections.Generic.List{System.Numerics.Vector2}
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapRayPolyline(rayPoint As Vector2, rayDirection As Vector2, points As List(Of Vector2)) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapRayPolyline*
  nameWithType.vb: Ray.OverlapRayPolyline(Vector2, Vector2, List(Of Vector2))
  fullName.vb: ShapeEngine.Core.Shapes.Ray.OverlapRayPolyline(System.Numerics.Vector2, System.Numerics.Vector2, System.Collections.Generic.List(Of System.Numerics.Vector2))
  name.vb: OverlapRayPolyline(Vector2, Vector2, List(Of Vector2))
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRaySegments(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment})
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapRaySegments(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment})
  id: OverlapRaySegments(System.Numerics.Vector2,System.Numerics.Vector2,System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment})
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapRaySegments(Vector2, Vector2, List<Segment>)
  nameWithType: Ray.OverlapRaySegments(Vector2, Vector2, List<Segment>)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRaySegments(System.Numerics.Vector2, System.Numerics.Vector2, System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapRaySegments
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1534
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static bool OverlapRaySegments(Vector2 rayPoint, Vector2 rayDirection, List<Segment> segments)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    - id: segments
      type: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
    return:
      type: System.Boolean
    content.vb: Public Shared Function OverlapRaySegments(rayPoint As Vector2, rayDirection As Vector2, segments As List(Of Segment)) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapRaySegments*
  nameWithType.vb: Ray.OverlapRaySegments(Vector2, Vector2, List(Of Segment))
  fullName.vb: ShapeEngine.Core.Shapes.Ray.OverlapRaySegments(System.Numerics.Vector2, System.Numerics.Vector2, System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: OverlapRaySegments(Vector2, Vector2, List(Of Segment))
- uid: ShapeEngine.Core.Shapes.Ray.OverlapPoint(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapPoint(System.Numerics.Vector2)
  id: OverlapPoint(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapPoint(Vector2)
  nameWithType: Ray.OverlapPoint(Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapPoint(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1546
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapPoint(Vector2 p)
    parameters:
    - id: p
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function OverlapPoint(p As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapPoint*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapSegment(System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapSegment(System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapSegment(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapSegment(Vector2, Vector2)
  nameWithType: Ray.OverlapSegment(Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapSegment(System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapSegment
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1547
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapSegment(Vector2 segmentStart, Vector2 segmentEnd)
    parameters:
    - id: segmentStart
      type: System.Numerics.Vector2
    - id: segmentEnd
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function OverlapSegment(segmentStart As Vector2, segmentEnd As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapSegment*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapLine(System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapLine(System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapLine(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapLine(Vector2, Vector2)
  nameWithType: Ray.OverlapLine(Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapLine(System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapLine
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1548
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapLine(Vector2 linePoint, Vector2 lineDirection)
    parameters:
    - id: linePoint
      type: System.Numerics.Vector2
    - id: lineDirection
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function OverlapLine(linePoint As Vector2, lineDirection As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapLine*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRay(System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapRay(System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapRay(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapRay(Vector2, Vector2)
  nameWithType: Ray.OverlapRay(Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRay(System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapRay
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1549
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapRay(Vector2 rayPoint, Vector2 rayDirection)
    parameters:
    - id: rayPoint
      type: System.Numerics.Vector2
    - id: rayDirection
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function OverlapRay(rayPoint As Vector2, rayDirection As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapRay*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapCircle(System.Numerics.Vector2,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapCircle(System.Numerics.Vector2,System.Single)
  id: OverlapCircle(System.Numerics.Vector2,System.Single)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapCircle(Vector2, float)
  nameWithType: Ray.OverlapCircle(Vector2, float)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapCircle(System.Numerics.Vector2, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapCircle
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1550
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapCircle(Vector2 circleCenter, float circleRadius)
    parameters:
    - id: circleCenter
      type: System.Numerics.Vector2
    - id: circleRadius
      type: System.Single
    return:
      type: System.Boolean
    content.vb: Public Function OverlapCircle(circleCenter As Vector2, circleRadius As Single) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapCircle*
  nameWithType.vb: Ray.OverlapCircle(Vector2, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Ray.OverlapCircle(System.Numerics.Vector2, Single)
  name.vb: OverlapCircle(Vector2, Single)
- uid: ShapeEngine.Core.Shapes.Ray.OverlapTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapTriangle(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapTriangle(Vector2, Vector2, Vector2)
  nameWithType: Ray.OverlapTriangle(Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapTriangle(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapTriangle
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1551
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapTriangle(Vector2 a, Vector2 b, Vector2 c)
    parameters:
    - id: a
      type: System.Numerics.Vector2
    - id: b
      type: System.Numerics.Vector2
    - id: c
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function OverlapTriangle(a As Vector2, b As Vector2, c As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapTriangle*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapQuad(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapQuad(Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.OverlapQuad(Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapQuad(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapQuad
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1552
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapQuad(Vector2 a, Vector2 b, Vector2 c, Vector2 d)
    parameters:
    - id: a
      type: System.Numerics.Vector2
    - id: b
      type: System.Numerics.Vector2
    - id: c
      type: System.Numerics.Vector2
    - id: d
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function OverlapQuad(a As Vector2, b As Vector2, c As Vector2, d As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapQuad*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: OverlapRect(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapRect(Vector2, Vector2, Vector2, Vector2)
  nameWithType: Ray.OverlapRect(Vector2, Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRect(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapRect
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1553
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapRect(Vector2 a, Vector2 b, Vector2 c, Vector2 d)
    parameters:
    - id: a
      type: System.Numerics.Vector2
    - id: b
      type: System.Numerics.Vector2
    - id: c
      type: System.Numerics.Vector2
    - id: d
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function OverlapRect(a As Vector2, b As Vector2, c As Vector2, d As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapRect*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapPolygon(System.Collections.Generic.List{System.Numerics.Vector2})
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapPolygon(System.Collections.Generic.List{System.Numerics.Vector2})
  id: OverlapPolygon(System.Collections.Generic.List{System.Numerics.Vector2})
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapPolygon(List<Vector2>)
  nameWithType: Ray.OverlapPolygon(List<Vector2>)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapPolygon(System.Collections.Generic.List<System.Numerics.Vector2>)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapPolygon
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1554
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapPolygon(List<Vector2> points)
    parameters:
    - id: points
      type: System.Collections.Generic.List{System.Numerics.Vector2}
    return:
      type: System.Boolean
    content.vb: Public Function OverlapPolygon(points As List(Of Vector2)) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapPolygon*
  nameWithType.vb: Ray.OverlapPolygon(List(Of Vector2))
  fullName.vb: ShapeEngine.Core.Shapes.Ray.OverlapPolygon(System.Collections.Generic.List(Of System.Numerics.Vector2))
  name.vb: OverlapPolygon(List(Of Vector2))
- uid: ShapeEngine.Core.Shapes.Ray.OverlapPolyline(System.Collections.Generic.List{System.Numerics.Vector2})
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapPolyline(System.Collections.Generic.List{System.Numerics.Vector2})
  id: OverlapPolyline(System.Collections.Generic.List{System.Numerics.Vector2})
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapPolyline(List<Vector2>)
  nameWithType: Ray.OverlapPolyline(List<Vector2>)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapPolyline(System.Collections.Generic.List<System.Numerics.Vector2>)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapPolyline
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1555
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapPolyline(List<Vector2> points)
    parameters:
    - id: points
      type: System.Collections.Generic.List{System.Numerics.Vector2}
    return:
      type: System.Boolean
    content.vb: Public Function OverlapPolyline(points As List(Of Vector2)) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapPolyline*
  nameWithType.vb: Ray.OverlapPolyline(List(Of Vector2))
  fullName.vb: ShapeEngine.Core.Shapes.Ray.OverlapPolyline(System.Collections.Generic.List(Of System.Numerics.Vector2))
  name.vb: OverlapPolyline(List(Of Vector2))
- uid: ShapeEngine.Core.Shapes.Ray.OverlapSegments(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment})
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapSegments(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment})
  id: OverlapSegments(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment})
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapSegments(List<Segment>)
  nameWithType: Ray.OverlapSegments(List<Segment>)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapSegments(System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapSegments
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1556
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapSegments(List<Segment> segments)
    parameters:
    - id: segments
      type: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
    return:
      type: System.Boolean
    content.vb: Public Function OverlapSegments(segments As List(Of Segment)) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapSegments*
  nameWithType.vb: Ray.OverlapSegments(List(Of Segment))
  fullName.vb: ShapeEngine.Core.Shapes.Ray.OverlapSegments(System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment))
  name.vb: OverlapSegments(List(Of Segment))
- uid: ShapeEngine.Core.Shapes.Ray.Overlap(ShapeEngine.Core.CollisionSystem.Collider)
  commentId: M:ShapeEngine.Core.Shapes.Ray.Overlap(ShapeEngine.Core.CollisionSystem.Collider)
  id: Overlap(ShapeEngine.Core.CollisionSystem.Collider)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: Overlap(Collider)
  nameWithType: Ray.Overlap(Collider)
  fullName: ShapeEngine.Core.Shapes.Ray.Overlap(ShapeEngine.Core.CollisionSystem.Collider)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Overlap
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1558
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool Overlap(Collider collider)
    parameters:
    - id: collider
      type: ShapeEngine.Core.CollisionSystem.Collider
    return:
      type: System.Boolean
    content.vb: Public Function Overlap(collider As Collider) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.Overlap*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Segment)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Segment)
  id: OverlapShape(ShapeEngine.Core.Shapes.Segment)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapShape(Segment)
  nameWithType: Ray.OverlapShape(Segment)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Segment)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1595
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Segment segment)
    parameters:
    - id: segment
      type: ShapeEngine.Core.Shapes.Segment
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(segment As Segment) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Line)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Line)
  id: OverlapShape(ShapeEngine.Core.Shapes.Line)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapShape(Line)
  nameWithType: Ray.OverlapShape(Line)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Line)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1596
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Line line)
    parameters:
    - id: line
      type: ShapeEngine.Core.Shapes.Line
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(line As Line) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Ray)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Ray)
  id: OverlapShape(ShapeEngine.Core.Shapes.Ray)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapShape(Ray)
  nameWithType: Ray.OverlapShape(Ray)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Ray)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1597
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Ray ray)
    parameters:
    - id: ray
      type: ShapeEngine.Core.Shapes.Ray
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(ray As Ray) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Circle)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Circle)
  id: OverlapShape(ShapeEngine.Core.Shapes.Circle)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapShape(Circle)
  nameWithType: Ray.OverlapShape(Circle)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Circle)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1598
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Circle circle)
    parameters:
    - id: circle
      type: ShapeEngine.Core.Shapes.Circle
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(circle As Circle) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Triangle)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Triangle)
  id: OverlapShape(ShapeEngine.Core.Shapes.Triangle)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapShape(Triangle)
  nameWithType: Ray.OverlapShape(Triangle)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Triangle)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1599
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Triangle t)
    parameters:
    - id: t
      type: ShapeEngine.Core.Shapes.Triangle
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(t As Triangle) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Quad)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Quad)
  id: OverlapShape(ShapeEngine.Core.Shapes.Quad)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapShape(Quad)
  nameWithType: Ray.OverlapShape(Quad)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Quad)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1600
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Quad q)
    parameters:
    - id: q
      type: ShapeEngine.Core.Shapes.Quad
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(q As Quad) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Rect)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Rect)
  id: OverlapShape(ShapeEngine.Core.Shapes.Rect)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapShape(Rect)
  nameWithType: Ray.OverlapShape(Rect)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Rect)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1601
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Rect r)
    parameters:
    - id: r
      type: ShapeEngine.Core.Shapes.Rect
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(r As Rect) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Polygon)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Polygon)
  id: OverlapShape(ShapeEngine.Core.Shapes.Polygon)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapShape(Polygon)
  nameWithType: Ray.OverlapShape(Polygon)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Polygon)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1602
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Polygon p)
    parameters:
    - id: p
      type: ShapeEngine.Core.Shapes.Polygon
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(p As Polygon) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Polyline)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Polyline)
  id: OverlapShape(ShapeEngine.Core.Shapes.Polyline)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapShape(Polyline)
  nameWithType: Ray.OverlapShape(Polyline)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Polyline)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1603
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Polyline pl)
    parameters:
    - id: pl
      type: ShapeEngine.Core.Shapes.Polyline
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(pl As Polyline) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Segments)
  commentId: M:ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Segments)
  id: OverlapShape(ShapeEngine.Core.Shapes.Segments)
  parent: ShapeEngine.Core.Shapes.Ray
  langs:
  - csharp
  - vb
  name: OverlapShape(Segments)
  nameWithType: Ray.OverlapShape(Segments)
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapShape(ShapeEngine.Core.Shapes.Segments)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Ray.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Ray.cs
    startLine: 1604
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool OverlapShape(Segments segments)
    parameters:
    - id: segments
      type: ShapeEngine.Core.Shapes.Segments
    return:
      type: System.Boolean
    content.vb: Public Function OverlapShape(segments As Segments) As Boolean
  overload: ShapeEngine.Core.Shapes.Ray.OverlapShape*
references:
- uid: ShapeEngine.Core.Shapes
  commentId: N:ShapeEngine.Core.Shapes
  href: ShapeEngine.html
  name: ShapeEngine.Core.Shapes
  nameWithType: ShapeEngine.Core.Shapes
  fullName: ShapeEngine.Core.Shapes
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Shapes
    name: Shapes
    href: ShapeEngine.Core.Shapes.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Shapes
    name: Shapes
    href: ShapeEngine.Core.Shapes.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: ShapeEngine.Core.Shapes.Ray.ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.Draw(System.Single,System.Single,ShapeEngine.Color.ColorRgba)
  commentId: M:ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.Draw(ShapeEngine.Core.Shapes.Ray,System.Single,System.Single,ShapeEngine.Color.ColorRgba)
  parent: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing
  definition: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.Draw(ShapeEngine.Core.Shapes.Ray,System.Single,System.Single,ShapeEngine.Color.ColorRgba)
  href: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeRayDrawing_Draw_ShapeEngine_Core_Shapes_Ray_System_Single_System_Single_ShapeEngine_Color_ColorRgba_
  name: Draw(Ray, float, float, ColorRgba)
  nameWithType: ShapeRayDrawing.Draw(Ray, float, float, ColorRgba)
  fullName: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.Draw(ShapeEngine.Core.Shapes.Ray, float, float, ShapeEngine.Color.ColorRgba)
  nameWithType.vb: ShapeRayDrawing.Draw(Ray, Single, Single, ColorRgba)
  fullName.vb: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.Draw(ShapeEngine.Core.Shapes.Ray, Single, Single, ShapeEngine.Color.ColorRgba)
  name.vb: Draw(Ray, Single, Single, ColorRgba)
  spec.csharp:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.Draw(ShapeEngine.Core.Shapes.Ray,System.Single,System.Single,ShapeEngine.Color.ColorRgba)
    name: Draw
    href: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeRayDrawing_Draw_ShapeEngine_Core_Shapes_Ray_System_Single_System_Single_ShapeEngine_Color_ColorRgba_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Ray
    name: Ray
    href: ShapeEngine.Core.Shapes.Ray.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: )
  spec.vb:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.Draw(ShapeEngine.Core.Shapes.Ray,System.Single,System.Single,ShapeEngine.Color.ColorRgba)
    name: Draw
    href: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeRayDrawing_Draw_ShapeEngine_Core_Shapes_Ray_System_Single_System_Single_ShapeEngine_Color_ColorRgba_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Ray
    name: Ray
    href: ShapeEngine.Core.Shapes.Ray.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.Draw(ShapeEngine.Core.Shapes.Ray,System.Single,System.Single,ShapeEngine.Color.ColorRgba)
  commentId: M:ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.Draw(ShapeEngine.Core.Shapes.Ray,System.Single,System.Single,ShapeEngine.Color.ColorRgba)
  isExternal: true
  href: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeRayDrawing_Draw_ShapeEngine_Core_Shapes_Ray_System_Single_System_Single_ShapeEngine_Color_ColorRgba_
  name: Draw(Ray, float, float, ColorRgba)
  nameWithType: ShapeRayDrawing.Draw(Ray, float, float, ColorRgba)
  fullName: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.Draw(ShapeEngine.Core.Shapes.Ray, float, float, ShapeEngine.Color.ColorRgba)
  nameWithType.vb: ShapeRayDrawing.Draw(Ray, Single, Single, ColorRgba)
  fullName.vb: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.Draw(ShapeEngine.Core.Shapes.Ray, Single, Single, ShapeEngine.Color.ColorRgba)
  name.vb: Draw(Ray, Single, Single, ColorRgba)
  spec.csharp:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.Draw(ShapeEngine.Core.Shapes.Ray,System.Single,System.Single,ShapeEngine.Color.ColorRgba)
    name: Draw
    href: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeRayDrawing_Draw_ShapeEngine_Core_Shapes_Ray_System_Single_System_Single_ShapeEngine_Color_ColorRgba_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Ray
    name: Ray
    href: ShapeEngine.Core.Shapes.Ray.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: )
  spec.vb:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.Draw(ShapeEngine.Core.Shapes.Ray,System.Single,System.Single,ShapeEngine.Color.ColorRgba)
    name: Draw
    href: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeRayDrawing_Draw_ShapeEngine_Core_Shapes_Ray_System_Single_System_Single_ShapeEngine_Color_ColorRgba_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Ray
    name: Ray
    href: ShapeEngine.Core.Shapes.Ray.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: )
- uid: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing
  commentId: T:ShapeEngine.StaticLib.Drawing.ShapeRayDrawing
  parent: ShapeEngine.StaticLib.Drawing
  href: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing.html
  name: ShapeRayDrawing
  nameWithType: ShapeRayDrawing
  fullName: ShapeEngine.StaticLib.Drawing.ShapeRayDrawing
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: ShapeEngine.StaticLib.Drawing
  commentId: N:ShapeEngine.StaticLib.Drawing
  href: ShapeEngine.html
  name: ShapeEngine.StaticLib.Drawing
  nameWithType: ShapeEngine.StaticLib.Drawing
  fullName: ShapeEngine.StaticLib.Drawing
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.StaticLib
    name: StaticLib
    href: ShapeEngine.StaticLib.html
  - name: .
  - uid: ShapeEngine.StaticLib.Drawing
    name: Drawing
    href: ShapeEngine.StaticLib.Drawing.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.StaticLib
    name: StaticLib
    href: ShapeEngine.StaticLib.html
  - name: .
  - uid: ShapeEngine.StaticLib.Drawing
    name: Drawing
    href: ShapeEngine.StaticLib.Drawing.html
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Numerics.Vector2
  commentId: T:System.Numerics.Vector2
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: ShapeEngine.Core.Shapes.Ray.#ctor*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.#ctor
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray__ctor
  name: Ray
  nameWithType: Ray.Ray
  fullName: ShapeEngine.Core.Shapes.Ray.Ray
  nameWithType.vb: Ray.New
  fullName.vb: ShapeEngine.Core.Shapes.Ray.New
  name.vb: New
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ShapeEngine.Core.Shapes.Ray.IsValid*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IsValid
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IsValid
  name: IsValid
  nameWithType: Ray.IsValid
  fullName: ShapeEngine.Core.Shapes.Ray.IsValid
- uid: ShapeEngine.Core.Shapes.Ray.IsNormalFlipped*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IsNormalFlipped
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IsNormalFlipped
  name: IsNormalFlipped
  nameWithType: Ray.IsNormalFlipped
  fullName: ShapeEngine.Core.Shapes.Ray.IsNormalFlipped
- uid: ShapeEngine.Core.Shapes.Ray.ToSegment*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.ToSegment
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_ToSegment_System_Single_
  name: ToSegment
  nameWithType: Ray.ToSegment
  fullName: ShapeEngine.Core.Shapes.Ray.ToSegment
- uid: ShapeEngine.Core.Shapes.Segment
  commentId: T:ShapeEngine.Core.Shapes.Segment
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Segment.html
  name: Segment
  nameWithType: Segment
  fullName: ShapeEngine.Core.Shapes.Segment
- uid: ShapeEngine.Core.Shapes.Ray.ToLine*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.ToLine
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_ToLine
  name: ToLine
  nameWithType: Ray.ToLine
  fullName: ShapeEngine.Core.Shapes.Ray.ToLine
- uid: ShapeEngine.Core.Shapes.Line
  commentId: T:ShapeEngine.Core.Shapes.Line
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Line.html
  name: Line
  nameWithType: Line
  fullName: ShapeEngine.Core.Shapes.Line
- uid: ShapeEngine.Core.Shapes.Ray.FlipNormal*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.FlipNormal
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_FlipNormal
  name: FlipNormal
  nameWithType: Ray.FlipNormal
  fullName: ShapeEngine.Core.Shapes.Ray.FlipNormal
- uid: ShapeEngine.Core.Shapes.Ray
  commentId: T:ShapeEngine.Core.Shapes.Ray
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Ray.html
  name: Ray
  nameWithType: Ray
  fullName: ShapeEngine.Core.Shapes.Ray
- uid: ShapeEngine.Core.Shapes.Ray.GetNormal*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.GetNormal
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_GetNormal_System_Numerics_Vector2_System_Boolean_
  name: GetNormal
  nameWithType: Ray.GetNormal
  fullName: ShapeEngine.Core.Shapes.Ray.GetNormal
- uid: ShapeEngine.Core.Shapes.Ray.GetBoundingBox*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.GetBoundingBox
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_GetBoundingBox
  name: GetBoundingBox
  nameWithType: Ray.GetBoundingBox
  fullName: ShapeEngine.Core.Shapes.Ray.GetBoundingBox
- uid: ShapeEngine.Core.Shapes.Rect
  commentId: T:ShapeEngine.Core.Shapes.Rect
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Rect.html
  name: Rect
  nameWithType: Rect
  fullName: ShapeEngine.Core.Shapes.Rect
- uid: ShapeEngine.Core.Shapes.Ray.RandomRay*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.RandomRay
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_RandomRay
  name: RandomRay
  nameWithType: Ray.RandomRay
  fullName: ShapeEngine.Core.Shapes.Ray.RandomRay
- uid: ShapeEngine.Core.Shapes.Ray.SetPoint*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.SetPoint
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_SetPoint_System_Numerics_Vector2_
  name: SetPoint
  nameWithType: Ray.SetPoint
  fullName: ShapeEngine.Core.Shapes.Ray.SetPoint
- uid: ShapeEngine.Core.Shapes.Ray.ChangePoint*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.ChangePoint
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_ChangePoint_System_Numerics_Vector2_
  name: ChangePoint
  nameWithType: Ray.ChangePoint
  fullName: ShapeEngine.Core.Shapes.Ray.ChangePoint
- uid: ShapeEngine.Core.Shapes.Ray.SetDirection*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.SetDirection
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_SetDirection_System_Numerics_Vector2_
  name: SetDirection
  nameWithType: Ray.SetDirection
  fullName: ShapeEngine.Core.Shapes.Ray.SetDirection
- uid: ShapeEngine.Core.Shapes.Ray.ChangeDirection*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.ChangeDirection
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_ChangeDirection_System_Numerics_Vector2_
  name: ChangeDirection
  nameWithType: Ray.ChangeDirection
  fullName: ShapeEngine.Core.Shapes.Ray.ChangeDirection
- uid: ShapeEngine.Core.Shapes.Ray.ChangeRotation*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.ChangeRotation
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_ChangeRotation_System_Single_
  name: ChangeRotation
  nameWithType: Ray.ChangeRotation
  fullName: ShapeEngine.Core.Shapes.Ray.ChangeRotation
- uid: ShapeEngine.Core.Shapes.Ray.SetRotation*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.SetRotation
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_SetRotation_System_Single_
  name: SetRotation
  nameWithType: Ray.SetRotation
  fullName: ShapeEngine.Core.Shapes.Ray.SetRotation
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayPoint*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.GetClosestPointRayPoint
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_GetClosestPointRayPoint_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Single__
  name: GetClosestPointRayPoint
  nameWithType: Ray.GetClosestPointRayPoint
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayPoint
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayLine*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.GetClosestPointRayLine
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_GetClosestPointRayLine_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Single__
  name: GetClosestPointRayLine
  nameWithType: Ray.GetClosestPointRayLine
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayLine
- uid: System.ValueTuple{System.Numerics.Vector2,System.Numerics.Vector2}
  commentId: T:System.ValueTuple{System.Numerics.Vector2,System.Numerics.Vector2}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  name: (Vector2 self, Vector2 other)
  nameWithType: (Vector2 self, Vector2 other)
  fullName: (System.Numerics.Vector2 self, System.Numerics.Vector2 other)
  nameWithType.vb: (self As Vector2, other As Vector2)
  fullName.vb: (self As System.Numerics.Vector2, other As System.Numerics.Vector2)
  name.vb: (self As Vector2, other As Vector2)
  spec.csharp:
  - name: (
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: " "
  - uid: System.ValueTuple{System.Numerics.Vector2,System.Numerics.Vector2}.self
    name: self
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.numerics.vector2,system.numerics.vector2-.self
  - name: ','
  - name: " "
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: " "
  - uid: System.ValueTuple{System.Numerics.Vector2,System.Numerics.Vector2}.other
    name: other
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.numerics.vector2,system.numerics.vector2-.other
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Numerics.Vector2,System.Numerics.Vector2}.self
    name: self
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.numerics.vector2,system.numerics.vector2-.self
  - name: " "
  - name: As
  - name: " "
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Numerics.Vector2,System.Numerics.Vector2}.other
    name: other
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.numerics.vector2,system.numerics.vector2-.other
  - name: " "
  - name: As
  - name: " "
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayRay*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.GetClosestPointRayRay
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_GetClosestPointRayRay_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Single__
  name: GetClosestPointRayRay
  nameWithType: Ray.GetClosestPointRayRay
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayRay
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPointRaySegment*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.GetClosestPointRaySegment
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_GetClosestPointRaySegment_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Single__
  name: GetClosestPointRaySegment
  nameWithType: Ray.GetClosestPointRaySegment
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPointRaySegment
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayCircle*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.GetClosestPointRayCircle
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_GetClosestPointRayCircle_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Single_System_Single__
  name: GetClosestPointRayCircle
  nameWithType: Ray.GetClosestPointRayCircle
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPointRayCircle
- uid: ShapeEngine.Core.Shapes.Ray.GetClosestPoint*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.GetClosestPoint
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_GetClosestPoint_System_Numerics_Vector2_System_Single__
  name: GetClosestPoint
  nameWithType: Ray.GetClosestPoint
  fullName: ShapeEngine.Core.Shapes.Ray.GetClosestPoint
- uid: ShapeEngine.Core.Structs.CollisionPoint
  commentId: T:ShapeEngine.Core.Structs.CollisionPoint
  parent: ShapeEngine.Core.Structs
  href: ShapeEngine.Core.Structs.CollisionPoint.html
  name: CollisionPoint
  nameWithType: CollisionPoint
  fullName: ShapeEngine.Core.Structs.CollisionPoint
- uid: ShapeEngine.Core.Structs
  commentId: N:ShapeEngine.Core.Structs
  href: ShapeEngine.html
  name: ShapeEngine.Core.Structs
  nameWithType: ShapeEngine.Core.Structs
  fullName: ShapeEngine.Core.Structs
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Structs
    name: Structs
    href: ShapeEngine.Core.Structs.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Structs
    name: Structs
    href: ShapeEngine.Core.Structs.html
- uid: ShapeEngine.Core.Structs.ClosestPointResult
  commentId: T:ShapeEngine.Core.Structs.ClosestPointResult
  parent: ShapeEngine.Core.Structs
  href: ShapeEngine.Core.Structs.ClosestPointResult.html
  name: ClosestPointResult
  nameWithType: ClosestPointResult
  fullName: ShapeEngine.Core.Structs.ClosestPointResult
- uid: ShapeEngine.Core.Shapes.Circle
  commentId: T:ShapeEngine.Core.Shapes.Circle
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Circle.html
  name: Circle
  nameWithType: Circle
  fullName: ShapeEngine.Core.Shapes.Circle
- uid: ShapeEngine.Core.Shapes.Triangle
  commentId: T:ShapeEngine.Core.Shapes.Triangle
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Triangle.html
  name: Triangle
  nameWithType: Triangle
  fullName: ShapeEngine.Core.Shapes.Triangle
- uid: ShapeEngine.Core.Shapes.Quad
  commentId: T:ShapeEngine.Core.Shapes.Quad
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Quad.html
  name: Quad
  nameWithType: Quad
  fullName: ShapeEngine.Core.Shapes.Quad
- uid: ShapeEngine.Core.Shapes.Polygon
  commentId: T:ShapeEngine.Core.Shapes.Polygon
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Polygon.html
  name: Polygon
  nameWithType: Polygon
  fullName: ShapeEngine.Core.Shapes.Polygon
- uid: ShapeEngine.Core.Shapes.Polyline
  commentId: T:ShapeEngine.Core.Shapes.Polyline
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Polyline.html
  name: Polyline
  nameWithType: Polyline
  fullName: ShapeEngine.Core.Shapes.Polyline
- uid: ShapeEngine.Core.Shapes.Segments
  commentId: T:ShapeEngine.Core.Shapes.Segments
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Segments.html
  name: Segments
  nameWithType: Segments
  fullName: ShapeEngine.Core.Shapes.Segments
- uid: ShapeEngine.Core.Shapes.Ray.IsPointOnRay*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IsPointOnRay
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IsPointOnRay_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: IsPointOnRay
  nameWithType: Ray.IsPointOnRay
  fullName: ShapeEngine.Core.Shapes.Ray.IsPointOnRay
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRaySegmentInfo*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectRaySegmentInfo
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectRaySegmentInfo_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: IntersectRaySegmentInfo
  nameWithType: Ray.IntersectRaySegmentInfo
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRaySegmentInfo
- uid: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,System.Single}
  commentId: T:System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,System.Single}
  parent: System
  definition: System.ValueTuple`2
  href: ShapeEngine.Core.Structs.CollisionPoint.html
  name: (CollisionPoint p, float t)
  nameWithType: (CollisionPoint p, float t)
  fullName: (ShapeEngine.Core.Structs.CollisionPoint p, float t)
  nameWithType.vb: (p As CollisionPoint, t As Single)
  fullName.vb: (p As ShapeEngine.Core.Structs.CollisionPoint, t As Single)
  name.vb: (p As CollisionPoint, t As Single)
  spec.csharp:
  - name: (
  - uid: ShapeEngine.Core.Structs.CollisionPoint
    name: CollisionPoint
    href: ShapeEngine.Core.Structs.CollisionPoint.html
  - name: " "
  - uid: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,System.Single}.p
    name: p
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.structs.collisionpoint,system.single-.p
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,System.Single}.t
    name: t
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.structs.collisionpoint,system.single-.t
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,System.Single}.p
    name: p
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.structs.collisionpoint,system.single-.p
  - name: " "
  - name: As
  - name: " "
  - uid: ShapeEngine.Core.Structs.CollisionPoint
    name: CollisionPoint
    href: ShapeEngine.Core.Structs.CollisionPoint.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,System.Single}.t
    name: t
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.structs.collisionpoint,system.single-.t
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayLineInfo*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectRayLineInfo
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectRayLineInfo_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: IntersectRayLineInfo
  nameWithType: Ray.IntersectRayLineInfo
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayLineInfo
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayRayInfo*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectRayRayInfo
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectRayRayInfo_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: IntersectRayRayInfo
  nameWithType: Ray.IntersectRayRayInfo
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayRayInfo
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRaySegment*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectRaySegment
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectRaySegment_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: IntersectRaySegment
  nameWithType: Ray.IntersectRaySegment
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRaySegment
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayLine*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectRayLine
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectRayLine_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: IntersectRayLine
  nameWithType: Ray.IntersectRayLine
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayLine
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayRay*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectRayRay
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectRayRay_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: IntersectRayRay
  nameWithType: Ray.IntersectRayRay
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayRay
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayCircle*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectRayCircle
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectRayCircle_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Single_
  name: IntersectRayCircle
  nameWithType: Ray.IntersectRayCircle
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayCircle
- uid: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint}
  commentId: T:System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint}
  parent: System
  definition: System.ValueTuple`2
  href: ShapeEngine.Core.Structs.CollisionPoint.html
  name: (CollisionPoint a, CollisionPoint b)
  nameWithType: (CollisionPoint a, CollisionPoint b)
  fullName: (ShapeEngine.Core.Structs.CollisionPoint a, ShapeEngine.Core.Structs.CollisionPoint b)
  nameWithType.vb: (a As CollisionPoint, b As CollisionPoint)
  fullName.vb: (a As ShapeEngine.Core.Structs.CollisionPoint, b As ShapeEngine.Core.Structs.CollisionPoint)
  name.vb: (a As CollisionPoint, b As CollisionPoint)
  spec.csharp:
  - name: (
  - uid: ShapeEngine.Core.Structs.CollisionPoint
    name: CollisionPoint
    href: ShapeEngine.Core.Structs.CollisionPoint.html
  - name: " "
  - uid: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint}.a
    name: a
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.structs.collisionpoint,shapeengine.core.structs.collisionpoint-.a
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.CollisionPoint
    name: CollisionPoint
    href: ShapeEngine.Core.Structs.CollisionPoint.html
  - name: " "
  - uid: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint}.b
    name: b
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.structs.collisionpoint,shapeengine.core.structs.collisionpoint-.b
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint}.a
    name: a
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.structs.collisionpoint,shapeengine.core.structs.collisionpoint-.a
  - name: " "
  - name: As
  - name: " "
  - uid: ShapeEngine.Core.Structs.CollisionPoint
    name: CollisionPoint
    href: ShapeEngine.Core.Structs.CollisionPoint.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Structs.CollisionPoint}.b
    name: b
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.structs.collisionpoint,shapeengine.core.structs.collisionpoint-.b
  - name: " "
  - name: As
  - name: " "
  - uid: ShapeEngine.Core.Structs.CollisionPoint
    name: CollisionPoint
    href: ShapeEngine.Core.Structs.CollisionPoint.html
  - name: )
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayTriangle*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectRayTriangle
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectRayTriangle_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: IntersectRayTriangle
  nameWithType: Ray.IntersectRayTriangle
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayTriangle
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayQuad*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectRayQuad
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectRayQuad_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: IntersectRayQuad
  nameWithType: Ray.IntersectRayQuad
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayQuad
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayRect*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectRayRect
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectRayRect_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: IntersectRayRect
  nameWithType: Ray.IntersectRayRect
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayRect
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayPolygon*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectRayPolygon
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectRayPolygon_System_Numerics_Vector2_System_Numerics_Vector2_System_Collections_Generic_List_System_Numerics_Vector2__System_Int32_
  name: IntersectRayPolygon
  nameWithType: Ray.IntersectRayPolygon
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayPolygon
- uid: System.Collections.Generic.List{System.Numerics.Vector2}
  commentId: T:System.Collections.Generic.List{System.Numerics.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vector2>
  nameWithType: List<Vector2>
  fullName: System.Collections.Generic.List<System.Numerics.Vector2>
  nameWithType.vb: List(Of Vector2)
  fullName.vb: System.Collections.Generic.List(Of System.Numerics.Vector2)
  name.vb: List(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ShapeEngine.Core.CollisionSystem.CollisionPoints
  commentId: T:ShapeEngine.Core.CollisionSystem.CollisionPoints
  parent: ShapeEngine.Core.CollisionSystem
  href: ShapeEngine.Core.CollisionSystem.CollisionPoints.html
  name: CollisionPoints
  nameWithType: CollisionPoints
  fullName: ShapeEngine.Core.CollisionSystem.CollisionPoints
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: ShapeEngine.Core.CollisionSystem
  commentId: N:ShapeEngine.Core.CollisionSystem
  href: ShapeEngine.html
  name: ShapeEngine.Core.CollisionSystem
  nameWithType: ShapeEngine.Core.CollisionSystem
  fullName: ShapeEngine.Core.CollisionSystem
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.CollisionSystem
    name: CollisionSystem
    href: ShapeEngine.Core.CollisionSystem.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.CollisionSystem
    name: CollisionSystem
    href: ShapeEngine.Core.CollisionSystem.html
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRayPolyline*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectRayPolyline
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectRayPolyline_System_Numerics_Vector2_System_Numerics_Vector2_System_Collections_Generic_List_System_Numerics_Vector2__System_Int32_
  name: IntersectRayPolyline
  nameWithType: Ray.IntersectRayPolyline
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRayPolyline
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRaySegments*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectRaySegments
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectRaySegments_System_Numerics_Vector2_System_Numerics_Vector2_System_Collections_Generic_List_ShapeEngine_Core_Shapes_Segment__System_Int32_
  name: IntersectRaySegments
  nameWithType: Ray.IntersectRaySegments
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRaySegments
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  commentId: T:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Segment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Segment>
  nameWithType: List<Segment>
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Segment>
  nameWithType.vb: List(Of Segment)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Segment)
  name.vb: List(Of Segment)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: )
- uid: ShapeEngine.Core.Shapes.Ray.IntersectSegment*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectSegment
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectSegment_System_Numerics_Vector2_System_Numerics_Vector2_
  name: IntersectSegment
  nameWithType: Ray.IntersectSegment
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectSegment
- uid: ShapeEngine.Core.Shapes.Ray.IntersectLine*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectLine
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectLine_System_Numerics_Vector2_System_Numerics_Vector2_
  name: IntersectLine
  nameWithType: Ray.IntersectLine
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectLine
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRay*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectRay
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectRay_System_Numerics_Vector2_System_Numerics_Vector2_
  name: IntersectRay
  nameWithType: Ray.IntersectRay
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRay
- uid: ShapeEngine.Core.Shapes.Ray.IntersectCircle*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectCircle
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectCircle_System_Numerics_Vector2_System_Single_
  name: IntersectCircle
  nameWithType: Ray.IntersectCircle
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectCircle
- uid: ShapeEngine.Core.Shapes.Ray.IntersectTriangle*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectTriangle
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectTriangle_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: IntersectTriangle
  nameWithType: Ray.IntersectTriangle
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectTriangle
- uid: ShapeEngine.Core.Shapes.Ray.IntersectQuad*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectQuad
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectQuad_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: IntersectQuad
  nameWithType: Ray.IntersectQuad
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectQuad
- uid: ShapeEngine.Core.Shapes.Ray.IntersectRect*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectRect
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectRect_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: IntersectRect
  nameWithType: Ray.IntersectRect
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectRect
- uid: ShapeEngine.Core.Shapes.Ray.IntersectPolygon*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectPolygon
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectPolygon_System_Collections_Generic_List_System_Numerics_Vector2__System_Int32_
  name: IntersectPolygon
  nameWithType: Ray.IntersectPolygon
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectPolygon
- uid: ShapeEngine.Core.Shapes.Ray.IntersectPolyline*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectPolyline
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectPolyline_System_Collections_Generic_List_System_Numerics_Vector2__System_Int32_
  name: IntersectPolyline
  nameWithType: Ray.IntersectPolyline
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectPolyline
- uid: ShapeEngine.Core.Shapes.Ray.IntersectSegments*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectSegments
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectSegments_System_Collections_Generic_List_ShapeEngine_Core_Shapes_Segment__System_Int32_
  name: IntersectSegments
  nameWithType: Ray.IntersectSegments
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectSegments
- uid: ShapeEngine.Core.Shapes.Ray.Intersect*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.Intersect
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_Intersect_ShapeEngine_Core_CollisionSystem_Collider_
  name: Intersect
  nameWithType: Ray.Intersect
  fullName: ShapeEngine.Core.Shapes.Ray.Intersect
- uid: ShapeEngine.Core.CollisionSystem.Collider
  commentId: T:ShapeEngine.Core.CollisionSystem.Collider
  parent: ShapeEngine.Core.CollisionSystem
  href: ShapeEngine.Core.CollisionSystem.Collider.html
  name: Collider
  nameWithType: Collider
  fullName: ShapeEngine.Core.CollisionSystem.Collider
- uid: ShapeEngine.Core.Shapes.Ray.IntersectShape*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.IntersectShape
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_IntersectShape_ShapeEngine_Core_Shapes_Segment_
  name: IntersectShape
  nameWithType: Ray.IntersectShape
  fullName: ShapeEngine.Core.Shapes.Ray.IntersectShape
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRaySegment*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapRaySegment
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapRaySegment_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapRaySegment
  nameWithType: Ray.OverlapRaySegment
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRaySegment
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRayLine*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapRayLine
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapRayLine_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapRayLine
  nameWithType: Ray.OverlapRayLine
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRayLine
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRayRay*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapRayRay
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapRayRay_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapRayRay
  nameWithType: Ray.OverlapRayRay
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRayRay
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRayCircle*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapRayCircle
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapRayCircle_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Single_
  name: OverlapRayCircle
  nameWithType: Ray.OverlapRayCircle
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRayCircle
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRayTriangle*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapRayTriangle
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapRayTriangle_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapRayTriangle
  nameWithType: Ray.OverlapRayTriangle
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRayTriangle
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRayQuad*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapRayQuad
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapRayQuad_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapRayQuad
  nameWithType: Ray.OverlapRayQuad
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRayQuad
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRayRect*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapRayRect
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapRayRect_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapRayRect
  nameWithType: Ray.OverlapRayRect
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRayRect
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRayPolygon*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapRayPolygon
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapRayPolygon_System_Numerics_Vector2_System_Numerics_Vector2_System_Collections_Generic_List_System_Numerics_Vector2__
  name: OverlapRayPolygon
  nameWithType: Ray.OverlapRayPolygon
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRayPolygon
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRayPolyline*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapRayPolyline
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapRayPolyline_System_Numerics_Vector2_System_Numerics_Vector2_System_Collections_Generic_List_System_Numerics_Vector2__
  name: OverlapRayPolyline
  nameWithType: Ray.OverlapRayPolyline
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRayPolyline
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRaySegments*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapRaySegments
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapRaySegments_System_Numerics_Vector2_System_Numerics_Vector2_System_Collections_Generic_List_ShapeEngine_Core_Shapes_Segment__
  name: OverlapRaySegments
  nameWithType: Ray.OverlapRaySegments
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRaySegments
- uid: ShapeEngine.Core.Shapes.Ray.OverlapPoint*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapPoint
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapPoint_System_Numerics_Vector2_
  name: OverlapPoint
  nameWithType: Ray.OverlapPoint
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapPoint
- uid: ShapeEngine.Core.Shapes.Ray.OverlapSegment*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapSegment
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapSegment_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapSegment
  nameWithType: Ray.OverlapSegment
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapSegment
- uid: ShapeEngine.Core.Shapes.Ray.OverlapLine*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapLine
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapLine_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapLine
  nameWithType: Ray.OverlapLine
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapLine
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRay*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapRay
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapRay_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapRay
  nameWithType: Ray.OverlapRay
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRay
- uid: ShapeEngine.Core.Shapes.Ray.OverlapCircle*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapCircle
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapCircle_System_Numerics_Vector2_System_Single_
  name: OverlapCircle
  nameWithType: Ray.OverlapCircle
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapCircle
- uid: ShapeEngine.Core.Shapes.Ray.OverlapTriangle*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapTriangle
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapTriangle_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapTriangle
  nameWithType: Ray.OverlapTriangle
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapTriangle
- uid: ShapeEngine.Core.Shapes.Ray.OverlapQuad*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapQuad
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapQuad_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapQuad
  nameWithType: Ray.OverlapQuad
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapQuad
- uid: ShapeEngine.Core.Shapes.Ray.OverlapRect*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapRect
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapRect_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: OverlapRect
  nameWithType: Ray.OverlapRect
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapRect
- uid: ShapeEngine.Core.Shapes.Ray.OverlapPolygon*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapPolygon
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapPolygon_System_Collections_Generic_List_System_Numerics_Vector2__
  name: OverlapPolygon
  nameWithType: Ray.OverlapPolygon
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapPolygon
- uid: ShapeEngine.Core.Shapes.Ray.OverlapPolyline*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapPolyline
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapPolyline_System_Collections_Generic_List_System_Numerics_Vector2__
  name: OverlapPolyline
  nameWithType: Ray.OverlapPolyline
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapPolyline
- uid: ShapeEngine.Core.Shapes.Ray.OverlapSegments*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapSegments
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapSegments_System_Collections_Generic_List_ShapeEngine_Core_Shapes_Segment__
  name: OverlapSegments
  nameWithType: Ray.OverlapSegments
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapSegments
- uid: ShapeEngine.Core.Shapes.Ray.Overlap*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.Overlap
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_Overlap_ShapeEngine_Core_CollisionSystem_Collider_
  name: Overlap
  nameWithType: Ray.Overlap
  fullName: ShapeEngine.Core.Shapes.Ray.Overlap
- uid: ShapeEngine.Core.Shapes.Ray.OverlapShape*
  commentId: Overload:ShapeEngine.Core.Shapes.Ray.OverlapShape
  href: ShapeEngine.Core.Shapes.Ray.html#ShapeEngine_Core_Shapes_Ray_OverlapShape_ShapeEngine_Core_Shapes_Segment_
  name: OverlapShape
  nameWithType: Ray.OverlapShape
  fullName: ShapeEngine.Core.Shapes.Ray.OverlapShape
