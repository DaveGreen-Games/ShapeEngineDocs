### YamlMime:ManagedReference
items:
- uid: ShapeEngine.Core.Structs.Direction
  commentId: T:ShapeEngine.Core.Structs.Direction
  id: Direction
  parent: ShapeEngine.Core.Structs
  children:
  - ShapeEngine.Core.Structs.Direction.#ctor
  - ShapeEngine.Core.Structs.Direction.#ctor(System.Int32,System.Int32)
  - ShapeEngine.Core.Structs.Direction.#ctor(System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.Direction.Down
  - ShapeEngine.Core.Structs.Direction.DownLeft
  - ShapeEngine.Core.Structs.Direction.DownRight
  - ShapeEngine.Core.Structs.Direction.Empty
  - ShapeEngine.Core.Structs.Direction.Equals(ShapeEngine.Core.Structs.Direction)
  - ShapeEngine.Core.Structs.Direction.Equals(System.Object)
  - ShapeEngine.Core.Structs.Direction.GetHashCode
  - ShapeEngine.Core.Structs.Direction.Horizontal
  - ShapeEngine.Core.Structs.Direction.Invert
  - ShapeEngine.Core.Structs.Direction.IsDown
  - ShapeEngine.Core.Structs.Direction.IsDownLeft
  - ShapeEngine.Core.Structs.Direction.IsDownRight
  - ShapeEngine.Core.Structs.Direction.IsHorizontal
  - ShapeEngine.Core.Structs.Direction.IsLeft
  - ShapeEngine.Core.Structs.Direction.IsRight
  - ShapeEngine.Core.Structs.Direction.IsUp
  - ShapeEngine.Core.Structs.Direction.IsUpLeft
  - ShapeEngine.Core.Structs.Direction.IsUpRight
  - ShapeEngine.Core.Structs.Direction.IsValid
  - ShapeEngine.Core.Structs.Direction.IsVertical
  - ShapeEngine.Core.Structs.Direction.Left
  - ShapeEngine.Core.Structs.Direction.Right
  - ShapeEngine.Core.Structs.Direction.Signed
  - ShapeEngine.Core.Structs.Direction.ToAlignement
  - ShapeEngine.Core.Structs.Direction.ToInvertedAlignement
  - ShapeEngine.Core.Structs.Direction.ToString
  - ShapeEngine.Core.Structs.Direction.ToVector2
  - ShapeEngine.Core.Structs.Direction.Up
  - ShapeEngine.Core.Structs.Direction.UpLeft
  - ShapeEngine.Core.Structs.Direction.UpRight
  - ShapeEngine.Core.Structs.Direction.Vertical
  - ShapeEngine.Core.Structs.Direction.op_Addition(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  - ShapeEngine.Core.Structs.Direction.op_Addition(ShapeEngine.Core.Structs.Direction,System.Int32)
  - ShapeEngine.Core.Structs.Direction.op_Division(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  - ShapeEngine.Core.Structs.Direction.op_Division(ShapeEngine.Core.Structs.Direction,System.Int32)
  - ShapeEngine.Core.Structs.Direction.op_Equality(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  - ShapeEngine.Core.Structs.Direction.op_Inequality(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  - ShapeEngine.Core.Structs.Direction.op_Multiply(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  - ShapeEngine.Core.Structs.Direction.op_Multiply(ShapeEngine.Core.Structs.Direction,System.Int32)
  - ShapeEngine.Core.Structs.Direction.op_Subtraction(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  - ShapeEngine.Core.Structs.Direction.op_Subtraction(ShapeEngine.Core.Structs.Direction,System.Int32)
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: Direction
  fullName: ShapeEngine.Core.Structs.Direction
  type: Struct
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Direction
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 4
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: 'public readonly struct Direction : IEquatable<Direction>'
    content.vb: Public Structure Direction Implements IEquatable(Of Direction)
  implements:
  - System.IEquatable{ShapeEngine.Core.Structs.Direction}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: ShapeEngine.Core.Structs.Direction.Horizontal
  commentId: F:ShapeEngine.Core.Structs.Direction.Horizontal
  id: Horizontal
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: Horizontal
  nameWithType: Direction.Horizontal
  fullName: ShapeEngine.Core.Structs.Direction.Horizontal
  type: Field
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Horizontal
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 6
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public readonly int Horizontal
    return:
      type: System.Int32
    content.vb: Public ReadOnly Horizontal As Integer
- uid: ShapeEngine.Core.Structs.Direction.Vertical
  commentId: F:ShapeEngine.Core.Structs.Direction.Vertical
  id: Vertical
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: Vertical
  nameWithType: Direction.Vertical
  fullName: ShapeEngine.Core.Structs.Direction.Vertical
  type: Field
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Vertical
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 7
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public readonly int Vertical
    return:
      type: System.Int32
    content.vb: Public ReadOnly Vertical As Integer
- uid: ShapeEngine.Core.Structs.Direction.#ctor
  commentId: M:ShapeEngine.Core.Structs.Direction.#ctor
  id: '#ctor'
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: Direction()
  nameWithType: Direction.Direction()
  fullName: ShapeEngine.Core.Structs.Direction.Direction()
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 9
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public Direction()
    content.vb: Public Sub New()
  overload: ShapeEngine.Core.Structs.Direction.#ctor*
  nameWithType.vb: Direction.New()
  fullName.vb: ShapeEngine.Core.Structs.Direction.New()
  name.vb: New()
- uid: ShapeEngine.Core.Structs.Direction.#ctor(System.Int32,System.Int32)
  commentId: M:ShapeEngine.Core.Structs.Direction.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: Direction(int, int)
  nameWithType: Direction.Direction(int, int)
  fullName: ShapeEngine.Core.Structs.Direction.Direction(int, int)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 14
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public Direction(int hor, int vert)
    parameters:
    - id: hor
      type: System.Int32
    - id: vert
      type: System.Int32
    content.vb: Public Sub New(hor As Integer, vert As Integer)
  overload: ShapeEngine.Core.Structs.Direction.#ctor*
  nameWithType.vb: Direction.New(Integer, Integer)
  fullName.vb: ShapeEngine.Core.Structs.Direction.New(Integer, Integer)
  name.vb: New(Integer, Integer)
- uid: ShapeEngine.Core.Structs.Direction.#ctor(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.Direction.#ctor(System.Numerics.Vector2)
  id: '#ctor(System.Numerics.Vector2)'
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: Direction(Vector2)
  nameWithType: Direction.Direction(Vector2)
  fullName: ShapeEngine.Core.Structs.Direction.Direction(System.Numerics.Vector2)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 20
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public Direction(Vector2 dir)
    parameters:
    - id: dir
      type: System.Numerics.Vector2
    content.vb: Public Sub New(dir As Vector2)
  overload: ShapeEngine.Core.Structs.Direction.#ctor*
  nameWithType.vb: Direction.New(Vector2)
  fullName.vb: ShapeEngine.Core.Structs.Direction.New(System.Numerics.Vector2)
  name.vb: New(Vector2)
- uid: ShapeEngine.Core.Structs.Direction.IsValid
  commentId: P:ShapeEngine.Core.Structs.Direction.IsValid
  id: IsValid
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: Direction.IsValid
  fullName: ShapeEngine.Core.Structs.Direction.IsValid
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsValid
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 26
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsValid As Boolean
  overload: ShapeEngine.Core.Structs.Direction.IsValid*
- uid: ShapeEngine.Core.Structs.Direction.IsVertical
  commentId: P:ShapeEngine.Core.Structs.Direction.IsVertical
  id: IsVertical
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: IsVertical
  nameWithType: Direction.IsVertical
  fullName: ShapeEngine.Core.Structs.Direction.IsVertical
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsVertical
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 27
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool IsVertical { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsVertical As Boolean
  overload: ShapeEngine.Core.Structs.Direction.IsVertical*
- uid: ShapeEngine.Core.Structs.Direction.IsHorizontal
  commentId: P:ShapeEngine.Core.Structs.Direction.IsHorizontal
  id: IsHorizontal
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: IsHorizontal
  nameWithType: Direction.IsHorizontal
  fullName: ShapeEngine.Core.Structs.Direction.IsHorizontal
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsHorizontal
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 28
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool IsHorizontal { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsHorizontal As Boolean
  overload: ShapeEngine.Core.Structs.Direction.IsHorizontal*
- uid: ShapeEngine.Core.Structs.Direction.IsUp
  commentId: P:ShapeEngine.Core.Structs.Direction.IsUp
  id: IsUp
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: IsUp
  nameWithType: Direction.IsUp
  fullName: ShapeEngine.Core.Structs.Direction.IsUp
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsUp
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 30
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool IsUp { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUp As Boolean
  overload: ShapeEngine.Core.Structs.Direction.IsUp*
- uid: ShapeEngine.Core.Structs.Direction.IsDown
  commentId: P:ShapeEngine.Core.Structs.Direction.IsDown
  id: IsDown
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: IsDown
  nameWithType: Direction.IsDown
  fullName: ShapeEngine.Core.Structs.Direction.IsDown
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsDown
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 31
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool IsDown { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDown As Boolean
  overload: ShapeEngine.Core.Structs.Direction.IsDown*
- uid: ShapeEngine.Core.Structs.Direction.IsLeft
  commentId: P:ShapeEngine.Core.Structs.Direction.IsLeft
  id: IsLeft
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: IsLeft
  nameWithType: Direction.IsLeft
  fullName: ShapeEngine.Core.Structs.Direction.IsLeft
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsLeft
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 32
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool IsLeft { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLeft As Boolean
  overload: ShapeEngine.Core.Structs.Direction.IsLeft*
- uid: ShapeEngine.Core.Structs.Direction.IsRight
  commentId: P:ShapeEngine.Core.Structs.Direction.IsRight
  id: IsRight
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: IsRight
  nameWithType: Direction.IsRight
  fullName: ShapeEngine.Core.Structs.Direction.IsRight
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsRight
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 33
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool IsRight { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRight As Boolean
  overload: ShapeEngine.Core.Structs.Direction.IsRight*
- uid: ShapeEngine.Core.Structs.Direction.IsUpLeft
  commentId: P:ShapeEngine.Core.Structs.Direction.IsUpLeft
  id: IsUpLeft
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: IsUpLeft
  nameWithType: Direction.IsUpLeft
  fullName: ShapeEngine.Core.Structs.Direction.IsUpLeft
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsUpLeft
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 34
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool IsUpLeft { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUpLeft As Boolean
  overload: ShapeEngine.Core.Structs.Direction.IsUpLeft*
- uid: ShapeEngine.Core.Structs.Direction.IsDownLeft
  commentId: P:ShapeEngine.Core.Structs.Direction.IsDownLeft
  id: IsDownLeft
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: IsDownLeft
  nameWithType: Direction.IsDownLeft
  fullName: ShapeEngine.Core.Structs.Direction.IsDownLeft
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsDownLeft
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 35
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool IsDownLeft { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDownLeft As Boolean
  overload: ShapeEngine.Core.Structs.Direction.IsDownLeft*
- uid: ShapeEngine.Core.Structs.Direction.IsUpRight
  commentId: P:ShapeEngine.Core.Structs.Direction.IsUpRight
  id: IsUpRight
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: IsUpRight
  nameWithType: Direction.IsUpRight
  fullName: ShapeEngine.Core.Structs.Direction.IsUpRight
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsUpRight
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 36
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool IsUpRight { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsUpRight As Boolean
  overload: ShapeEngine.Core.Structs.Direction.IsUpRight*
- uid: ShapeEngine.Core.Structs.Direction.IsDownRight
  commentId: P:ShapeEngine.Core.Structs.Direction.IsDownRight
  id: IsDownRight
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: IsDownRight
  nameWithType: Direction.IsDownRight
  fullName: ShapeEngine.Core.Structs.Direction.IsDownRight
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsDownRight
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 37
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool IsDownRight { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDownRight As Boolean
  overload: ShapeEngine.Core.Structs.Direction.IsDownRight*
- uid: ShapeEngine.Core.Structs.Direction.Empty
  commentId: P:ShapeEngine.Core.Structs.Direction.Empty
  id: Empty
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: Direction.Empty
  fullName: ShapeEngine.Core.Structs.Direction.Empty
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Empty
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 39
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static Direction Empty { get; }
    parameters: []
    return:
      type: ShapeEngine.Core.Structs.Direction
    content.vb: Public Shared ReadOnly Property Empty As Direction
  overload: ShapeEngine.Core.Structs.Direction.Empty*
- uid: ShapeEngine.Core.Structs.Direction.Right
  commentId: P:ShapeEngine.Core.Structs.Direction.Right
  id: Right
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: Direction.Right
  fullName: ShapeEngine.Core.Structs.Direction.Right
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Right
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 40
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static Direction Right { get; }
    parameters: []
    return:
      type: ShapeEngine.Core.Structs.Direction
    content.vb: Public Shared ReadOnly Property Right As Direction
  overload: ShapeEngine.Core.Structs.Direction.Right*
- uid: ShapeEngine.Core.Structs.Direction.Left
  commentId: P:ShapeEngine.Core.Structs.Direction.Left
  id: Left
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: Direction.Left
  fullName: ShapeEngine.Core.Structs.Direction.Left
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Left
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 41
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static Direction Left { get; }
    parameters: []
    return:
      type: ShapeEngine.Core.Structs.Direction
    content.vb: Public Shared ReadOnly Property Left As Direction
  overload: ShapeEngine.Core.Structs.Direction.Left*
- uid: ShapeEngine.Core.Structs.Direction.Up
  commentId: P:ShapeEngine.Core.Structs.Direction.Up
  id: Up
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: Up
  nameWithType: Direction.Up
  fullName: ShapeEngine.Core.Structs.Direction.Up
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Up
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 42
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static Direction Up { get; }
    parameters: []
    return:
      type: ShapeEngine.Core.Structs.Direction
    content.vb: Public Shared ReadOnly Property Up As Direction
  overload: ShapeEngine.Core.Structs.Direction.Up*
- uid: ShapeEngine.Core.Structs.Direction.Down
  commentId: P:ShapeEngine.Core.Structs.Direction.Down
  id: Down
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: Down
  nameWithType: Direction.Down
  fullName: ShapeEngine.Core.Structs.Direction.Down
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Down
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 43
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static Direction Down { get; }
    parameters: []
    return:
      type: ShapeEngine.Core.Structs.Direction
    content.vb: Public Shared ReadOnly Property Down As Direction
  overload: ShapeEngine.Core.Structs.Direction.Down*
- uid: ShapeEngine.Core.Structs.Direction.UpLeft
  commentId: P:ShapeEngine.Core.Structs.Direction.UpLeft
  id: UpLeft
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: UpLeft
  nameWithType: Direction.UpLeft
  fullName: ShapeEngine.Core.Structs.Direction.UpLeft
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: UpLeft
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 44
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static Direction UpLeft { get; }
    parameters: []
    return:
      type: ShapeEngine.Core.Structs.Direction
    content.vb: Public Shared ReadOnly Property UpLeft As Direction
  overload: ShapeEngine.Core.Structs.Direction.UpLeft*
- uid: ShapeEngine.Core.Structs.Direction.UpRight
  commentId: P:ShapeEngine.Core.Structs.Direction.UpRight
  id: UpRight
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: UpRight
  nameWithType: Direction.UpRight
  fullName: ShapeEngine.Core.Structs.Direction.UpRight
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: UpRight
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 45
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static Direction UpRight { get; }
    parameters: []
    return:
      type: ShapeEngine.Core.Structs.Direction
    content.vb: Public Shared ReadOnly Property UpRight As Direction
  overload: ShapeEngine.Core.Structs.Direction.UpRight*
- uid: ShapeEngine.Core.Structs.Direction.DownLeft
  commentId: P:ShapeEngine.Core.Structs.Direction.DownLeft
  id: DownLeft
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: DownLeft
  nameWithType: Direction.DownLeft
  fullName: ShapeEngine.Core.Structs.Direction.DownLeft
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: DownLeft
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 46
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static Direction DownLeft { get; }
    parameters: []
    return:
      type: ShapeEngine.Core.Structs.Direction
    content.vb: Public Shared ReadOnly Property DownLeft As Direction
  overload: ShapeEngine.Core.Structs.Direction.DownLeft*
- uid: ShapeEngine.Core.Structs.Direction.DownRight
  commentId: P:ShapeEngine.Core.Structs.Direction.DownRight
  id: DownRight
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: DownRight
  nameWithType: Direction.DownRight
  fullName: ShapeEngine.Core.Structs.Direction.DownRight
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: DownRight
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 47
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static Direction DownRight { get; }
    parameters: []
    return:
      type: ShapeEngine.Core.Structs.Direction
    content.vb: Public Shared ReadOnly Property DownRight As Direction
  overload: ShapeEngine.Core.Structs.Direction.DownRight*
- uid: ShapeEngine.Core.Structs.Direction.ToVector2
  commentId: M:ShapeEngine.Core.Structs.Direction.ToVector2
  id: ToVector2
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: ToVector2()
  nameWithType: Direction.ToVector2()
  fullName: ShapeEngine.Core.Structs.Direction.ToVector2()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: ToVector2
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 49
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public Vector2 ToVector2()
    return:
      type: System.Numerics.Vector2
    content.vb: Public Function ToVector2() As Vector2
  overload: ShapeEngine.Core.Structs.Direction.ToVector2*
- uid: ShapeEngine.Core.Structs.Direction.ToAlignement
  commentId: M:ShapeEngine.Core.Structs.Direction.ToAlignement
  id: ToAlignement
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: ToAlignement()
  nameWithType: Direction.ToAlignement()
  fullName: ShapeEngine.Core.Structs.Direction.ToAlignement()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: ToAlignement
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 50
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public AnchorPoint ToAlignement()
    return:
      type: ShapeEngine.Core.Structs.AnchorPoint
    content.vb: Public Function ToAlignement() As AnchorPoint
  overload: ShapeEngine.Core.Structs.Direction.ToAlignement*
- uid: ShapeEngine.Core.Structs.Direction.ToInvertedAlignement
  commentId: M:ShapeEngine.Core.Structs.Direction.ToInvertedAlignement
  id: ToInvertedAlignement
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: ToInvertedAlignement()
  nameWithType: Direction.ToInvertedAlignement()
  fullName: ShapeEngine.Core.Structs.Direction.ToInvertedAlignement()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: ToInvertedAlignement
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 61
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Inverts the direction and then calculates the alignement
  example: []
  syntax:
    content: public AnchorPoint ToInvertedAlignement()
    return:
      type: ShapeEngine.Core.Structs.AnchorPoint
      description: ''
    content.vb: Public Function ToInvertedAlignement() As AnchorPoint
  overload: ShapeEngine.Core.Structs.Direction.ToInvertedAlignement*
- uid: ShapeEngine.Core.Structs.Direction.Invert
  commentId: M:ShapeEngine.Core.Structs.Direction.Invert
  id: Invert
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: Invert()
  nameWithType: Direction.Invert()
  fullName: ShapeEngine.Core.Structs.Direction.Invert()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Invert
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 68
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public Direction Invert()
    return:
      type: ShapeEngine.Core.Structs.Direction
    content.vb: Public Function Invert() As Direction
  overload: ShapeEngine.Core.Structs.Direction.Invert*
- uid: ShapeEngine.Core.Structs.Direction.Signed
  commentId: P:ShapeEngine.Core.Structs.Direction.Signed
  id: Signed
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: Signed
  nameWithType: Direction.Signed
  fullName: ShapeEngine.Core.Structs.Direction.Signed
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Signed
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 70
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public Direction Signed { get; }
    parameters: []
    return:
      type: ShapeEngine.Core.Structs.Direction
    content.vb: Public ReadOnly Property Signed As Direction
  overload: ShapeEngine.Core.Structs.Direction.Signed*
- uid: ShapeEngine.Core.Structs.Direction.op_Addition(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  commentId: M:ShapeEngine.Core.Structs.Direction.op_Addition(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  id: op_Addition(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: operator +(Direction, Direction)
  nameWithType: Direction.operator +(Direction, Direction)
  fullName: ShapeEngine.Core.Structs.Direction.operator +(ShapeEngine.Core.Structs.Direction, ShapeEngine.Core.Structs.Direction)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Addition
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 80
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static Direction operator +(Direction left, Direction right)
    parameters:
    - id: left
      type: ShapeEngine.Core.Structs.Direction
    - id: right
      type: ShapeEngine.Core.Structs.Direction
    return:
      type: ShapeEngine.Core.Structs.Direction
    content.vb: Public Shared Operator +(left As Direction, right As Direction) As Direction
  overload: ShapeEngine.Core.Structs.Direction.op_Addition*
  nameWithType.vb: Direction.+(Direction, Direction)
  fullName.vb: ShapeEngine.Core.Structs.Direction.+(ShapeEngine.Core.Structs.Direction, ShapeEngine.Core.Structs.Direction)
  name.vb: +(Direction, Direction)
- uid: ShapeEngine.Core.Structs.Direction.op_Subtraction(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  commentId: M:ShapeEngine.Core.Structs.Direction.op_Subtraction(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  id: op_Subtraction(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: operator -(Direction, Direction)
  nameWithType: Direction.operator -(Direction, Direction)
  fullName: ShapeEngine.Core.Structs.Direction.operator -(ShapeEngine.Core.Structs.Direction, ShapeEngine.Core.Structs.Direction)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Subtraction
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 90
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static Direction operator -(Direction left, Direction right)
    parameters:
    - id: left
      type: ShapeEngine.Core.Structs.Direction
    - id: right
      type: ShapeEngine.Core.Structs.Direction
    return:
      type: ShapeEngine.Core.Structs.Direction
    content.vb: Public Shared Operator -(left As Direction, right As Direction) As Direction
  overload: ShapeEngine.Core.Structs.Direction.op_Subtraction*
  nameWithType.vb: Direction.-(Direction, Direction)
  fullName.vb: ShapeEngine.Core.Structs.Direction.-(ShapeEngine.Core.Structs.Direction, ShapeEngine.Core.Structs.Direction)
  name.vb: -(Direction, Direction)
- uid: ShapeEngine.Core.Structs.Direction.op_Multiply(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  commentId: M:ShapeEngine.Core.Structs.Direction.op_Multiply(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  id: op_Multiply(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: operator *(Direction, Direction)
  nameWithType: Direction.operator *(Direction, Direction)
  fullName: ShapeEngine.Core.Structs.Direction.operator *(ShapeEngine.Core.Structs.Direction, ShapeEngine.Core.Structs.Direction)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Multiply
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 99
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static Direction operator *(Direction left, Direction right)
    parameters:
    - id: left
      type: ShapeEngine.Core.Structs.Direction
    - id: right
      type: ShapeEngine.Core.Structs.Direction
    return:
      type: ShapeEngine.Core.Structs.Direction
    content.vb: Public Shared Operator *(left As Direction, right As Direction) As Direction
  overload: ShapeEngine.Core.Structs.Direction.op_Multiply*
  nameWithType.vb: Direction.*(Direction, Direction)
  fullName.vb: ShapeEngine.Core.Structs.Direction.*(ShapeEngine.Core.Structs.Direction, ShapeEngine.Core.Structs.Direction)
  name.vb: '*(Direction, Direction)'
- uid: ShapeEngine.Core.Structs.Direction.op_Division(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  commentId: M:ShapeEngine.Core.Structs.Direction.op_Division(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  id: op_Division(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: operator /(Direction, Direction)
  nameWithType: Direction.operator /(Direction, Direction)
  fullName: ShapeEngine.Core.Structs.Direction.operator /(ShapeEngine.Core.Structs.Direction, ShapeEngine.Core.Structs.Direction)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Division
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 108
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static Direction operator /(Direction left, Direction right)
    parameters:
    - id: left
      type: ShapeEngine.Core.Structs.Direction
    - id: right
      type: ShapeEngine.Core.Structs.Direction
    return:
      type: ShapeEngine.Core.Structs.Direction
    content.vb: Public Shared Operator /(left As Direction, right As Direction) As Direction
  overload: ShapeEngine.Core.Structs.Direction.op_Division*
  nameWithType.vb: Direction./(Direction, Direction)
  fullName.vb: ShapeEngine.Core.Structs.Direction./(ShapeEngine.Core.Structs.Direction, ShapeEngine.Core.Structs.Direction)
  name.vb: /(Direction, Direction)
- uid: ShapeEngine.Core.Structs.Direction.op_Addition(ShapeEngine.Core.Structs.Direction,System.Int32)
  commentId: M:ShapeEngine.Core.Structs.Direction.op_Addition(ShapeEngine.Core.Structs.Direction,System.Int32)
  id: op_Addition(ShapeEngine.Core.Structs.Direction,System.Int32)
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: operator +(Direction, int)
  nameWithType: Direction.operator +(Direction, int)
  fullName: ShapeEngine.Core.Structs.Direction.operator +(ShapeEngine.Core.Structs.Direction, int)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Addition
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 117
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static Direction operator +(Direction left, int right)
    parameters:
    - id: left
      type: ShapeEngine.Core.Structs.Direction
    - id: right
      type: System.Int32
    return:
      type: ShapeEngine.Core.Structs.Direction
    content.vb: Public Shared Operator +(left As Direction, right As Integer) As Direction
  overload: ShapeEngine.Core.Structs.Direction.op_Addition*
  nameWithType.vb: Direction.+(Direction, Integer)
  fullName.vb: ShapeEngine.Core.Structs.Direction.+(ShapeEngine.Core.Structs.Direction, Integer)
  name.vb: +(Direction, Integer)
- uid: ShapeEngine.Core.Structs.Direction.op_Subtraction(ShapeEngine.Core.Structs.Direction,System.Int32)
  commentId: M:ShapeEngine.Core.Structs.Direction.op_Subtraction(ShapeEngine.Core.Structs.Direction,System.Int32)
  id: op_Subtraction(ShapeEngine.Core.Structs.Direction,System.Int32)
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: operator -(Direction, int)
  nameWithType: Direction.operator -(Direction, int)
  fullName: ShapeEngine.Core.Structs.Direction.operator -(ShapeEngine.Core.Structs.Direction, int)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Subtraction
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 126
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static Direction operator -(Direction left, int right)
    parameters:
    - id: left
      type: ShapeEngine.Core.Structs.Direction
    - id: right
      type: System.Int32
    return:
      type: ShapeEngine.Core.Structs.Direction
    content.vb: Public Shared Operator -(left As Direction, right As Integer) As Direction
  overload: ShapeEngine.Core.Structs.Direction.op_Subtraction*
  nameWithType.vb: Direction.-(Direction, Integer)
  fullName.vb: ShapeEngine.Core.Structs.Direction.-(ShapeEngine.Core.Structs.Direction, Integer)
  name.vb: -(Direction, Integer)
- uid: ShapeEngine.Core.Structs.Direction.op_Multiply(ShapeEngine.Core.Structs.Direction,System.Int32)
  commentId: M:ShapeEngine.Core.Structs.Direction.op_Multiply(ShapeEngine.Core.Structs.Direction,System.Int32)
  id: op_Multiply(ShapeEngine.Core.Structs.Direction,System.Int32)
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: operator *(Direction, int)
  nameWithType: Direction.operator *(Direction, int)
  fullName: ShapeEngine.Core.Structs.Direction.operator *(ShapeEngine.Core.Structs.Direction, int)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Multiply
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 135
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static Direction operator *(Direction left, int right)
    parameters:
    - id: left
      type: ShapeEngine.Core.Structs.Direction
    - id: right
      type: System.Int32
    return:
      type: ShapeEngine.Core.Structs.Direction
    content.vb: Public Shared Operator *(left As Direction, right As Integer) As Direction
  overload: ShapeEngine.Core.Structs.Direction.op_Multiply*
  nameWithType.vb: Direction.*(Direction, Integer)
  fullName.vb: ShapeEngine.Core.Structs.Direction.*(ShapeEngine.Core.Structs.Direction, Integer)
  name.vb: '*(Direction, Integer)'
- uid: ShapeEngine.Core.Structs.Direction.op_Division(ShapeEngine.Core.Structs.Direction,System.Int32)
  commentId: M:ShapeEngine.Core.Structs.Direction.op_Division(ShapeEngine.Core.Structs.Direction,System.Int32)
  id: op_Division(ShapeEngine.Core.Structs.Direction,System.Int32)
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: operator /(Direction, int)
  nameWithType: Direction.operator /(Direction, int)
  fullName: ShapeEngine.Core.Structs.Direction.operator /(ShapeEngine.Core.Structs.Direction, int)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Division
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 144
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static Direction operator /(Direction left, int right)
    parameters:
    - id: left
      type: ShapeEngine.Core.Structs.Direction
    - id: right
      type: System.Int32
    return:
      type: ShapeEngine.Core.Structs.Direction
    content.vb: Public Shared Operator /(left As Direction, right As Integer) As Direction
  overload: ShapeEngine.Core.Structs.Direction.op_Division*
  nameWithType.vb: Direction./(Direction, Integer)
  fullName.vb: ShapeEngine.Core.Structs.Direction./(ShapeEngine.Core.Structs.Direction, Integer)
  name.vb: /(Direction, Integer)
- uid: ShapeEngine.Core.Structs.Direction.Equals(ShapeEngine.Core.Structs.Direction)
  commentId: M:ShapeEngine.Core.Structs.Direction.Equals(ShapeEngine.Core.Structs.Direction)
  id: Equals(ShapeEngine.Core.Structs.Direction)
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: Equals(Direction)
  nameWithType: Direction.Equals(Direction)
  fullName: ShapeEngine.Core.Structs.Direction.Equals(ShapeEngine.Core.Structs.Direction)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Equals
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 154
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(Direction other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Structs.Direction
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As Direction) As Boolean
  overload: ShapeEngine.Core.Structs.Direction.Equals*
  implements:
  - System.IEquatable{ShapeEngine.Core.Structs.Direction}.Equals(ShapeEngine.Core.Structs.Direction)
- uid: ShapeEngine.Core.Structs.Direction.Equals(System.Object)
  commentId: M:ShapeEngine.Core.Structs.Direction.Equals(System.Object)
  id: Equals(System.Object)
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: Direction.Equals(object?)
  fullName: ShapeEngine.Core.Structs.Direction.Equals(object?)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Equals
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 156
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: ShapeEngine.Core.Structs.Direction.Equals*
  nameWithType.vb: Direction.Equals(Object)
  fullName.vb: ShapeEngine.Core.Structs.Direction.Equals(Object)
  name.vb: Equals(Object)
- uid: ShapeEngine.Core.Structs.Direction.GetHashCode
  commentId: M:ShapeEngine.Core.Structs.Direction.GetHashCode
  id: GetHashCode
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Direction.GetHashCode()
  fullName: ShapeEngine.Core.Structs.Direction.GetHashCode()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetHashCode
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 158
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: ShapeEngine.Core.Structs.Direction.GetHashCode*
- uid: ShapeEngine.Core.Structs.Direction.op_Equality(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  commentId: M:ShapeEngine.Core.Structs.Direction.op_Equality(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  id: op_Equality(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: operator ==(Direction, Direction)
  nameWithType: Direction.operator ==(Direction, Direction)
  fullName: ShapeEngine.Core.Structs.Direction.operator ==(ShapeEngine.Core.Structs.Direction, ShapeEngine.Core.Structs.Direction)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Equality
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 160
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static bool operator ==(Direction left, Direction right)
    parameters:
    - id: left
      type: ShapeEngine.Core.Structs.Direction
    - id: right
      type: ShapeEngine.Core.Structs.Direction
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As Direction, right As Direction) As Boolean
  overload: ShapeEngine.Core.Structs.Direction.op_Equality*
  nameWithType.vb: Direction.=(Direction, Direction)
  fullName.vb: ShapeEngine.Core.Structs.Direction.=(ShapeEngine.Core.Structs.Direction, ShapeEngine.Core.Structs.Direction)
  name.vb: =(Direction, Direction)
- uid: ShapeEngine.Core.Structs.Direction.op_Inequality(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  commentId: M:ShapeEngine.Core.Structs.Direction.op_Inequality(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  id: op_Inequality(ShapeEngine.Core.Structs.Direction,ShapeEngine.Core.Structs.Direction)
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: operator !=(Direction, Direction)
  nameWithType: Direction.operator !=(Direction, Direction)
  fullName: ShapeEngine.Core.Structs.Direction.operator !=(ShapeEngine.Core.Structs.Direction, ShapeEngine.Core.Structs.Direction)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Inequality
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 162
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static bool operator !=(Direction left, Direction right)
    parameters:
    - id: left
      type: ShapeEngine.Core.Structs.Direction
    - id: right
      type: ShapeEngine.Core.Structs.Direction
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As Direction, right As Direction) As Boolean
  overload: ShapeEngine.Core.Structs.Direction.op_Inequality*
  nameWithType.vb: Direction.<>(Direction, Direction)
  fullName.vb: ShapeEngine.Core.Structs.Direction.<>(ShapeEngine.Core.Structs.Direction, ShapeEngine.Core.Structs.Direction)
  name.vb: <>(Direction, Direction)
- uid: ShapeEngine.Core.Structs.Direction.ToString
  commentId: M:ShapeEngine.Core.Structs.Direction.ToString
  id: ToString
  parent: ShapeEngine.Core.Structs.Direction
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Direction.ToString()
  fullName: ShapeEngine.Core.Structs.Direction.ToString()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Direction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: ToString
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Direction.cs
    startLine: 164
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Returns the fully qualified type name of this instance.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: The fully qualified type name.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: ShapeEngine.Core.Structs.Direction.ToString*
references:
- uid: ShapeEngine.Core.Structs
  commentId: N:ShapeEngine.Core.Structs
  href: ShapeEngine.html
  name: ShapeEngine.Core.Structs
  nameWithType: ShapeEngine.Core.Structs
  fullName: ShapeEngine.Core.Structs
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Structs
    name: Structs
    href: ShapeEngine.Core.Structs.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Structs
    name: Structs
    href: ShapeEngine.Core.Structs.html
- uid: System.IEquatable{ShapeEngine.Core.Structs.Direction}
  commentId: T:System.IEquatable{ShapeEngine.Core.Structs.Direction}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Direction>
  nameWithType: IEquatable<Direction>
  fullName: System.IEquatable<ShapeEngine.Core.Structs.Direction>
  nameWithType.vb: IEquatable(Of Direction)
  fullName.vb: System.IEquatable(Of ShapeEngine.Core.Structs.Direction)
  name.vb: IEquatable(Of Direction)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: ShapeEngine.Core.Structs.Direction
    name: Direction
    href: ShapeEngine.Core.Structs.Direction.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Structs.Direction
    name: Direction
    href: ShapeEngine.Core.Structs.Direction.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ShapeEngine.Core.Structs.Direction.#ctor*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.#ctor
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction__ctor
  name: Direction
  nameWithType: Direction.Direction
  fullName: ShapeEngine.Core.Structs.Direction.Direction
  nameWithType.vb: Direction.New
  fullName.vb: ShapeEngine.Core.Structs.Direction.New
  name.vb: New
- uid: System.Numerics.Vector2
  commentId: T:System.Numerics.Vector2
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: ShapeEngine.Core.Structs.Direction.IsValid*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.IsValid
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_IsValid
  name: IsValid
  nameWithType: Direction.IsValid
  fullName: ShapeEngine.Core.Structs.Direction.IsValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ShapeEngine.Core.Structs.Direction.IsVertical*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.IsVertical
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_IsVertical
  name: IsVertical
  nameWithType: Direction.IsVertical
  fullName: ShapeEngine.Core.Structs.Direction.IsVertical
- uid: ShapeEngine.Core.Structs.Direction.IsHorizontal*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.IsHorizontal
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_IsHorizontal
  name: IsHorizontal
  nameWithType: Direction.IsHorizontal
  fullName: ShapeEngine.Core.Structs.Direction.IsHorizontal
- uid: ShapeEngine.Core.Structs.Direction.IsUp*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.IsUp
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_IsUp
  name: IsUp
  nameWithType: Direction.IsUp
  fullName: ShapeEngine.Core.Structs.Direction.IsUp
- uid: ShapeEngine.Core.Structs.Direction.IsDown*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.IsDown
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_IsDown
  name: IsDown
  nameWithType: Direction.IsDown
  fullName: ShapeEngine.Core.Structs.Direction.IsDown
- uid: ShapeEngine.Core.Structs.Direction.IsLeft*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.IsLeft
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_IsLeft
  name: IsLeft
  nameWithType: Direction.IsLeft
  fullName: ShapeEngine.Core.Structs.Direction.IsLeft
- uid: ShapeEngine.Core.Structs.Direction.IsRight*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.IsRight
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_IsRight
  name: IsRight
  nameWithType: Direction.IsRight
  fullName: ShapeEngine.Core.Structs.Direction.IsRight
- uid: ShapeEngine.Core.Structs.Direction.IsUpLeft*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.IsUpLeft
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_IsUpLeft
  name: IsUpLeft
  nameWithType: Direction.IsUpLeft
  fullName: ShapeEngine.Core.Structs.Direction.IsUpLeft
- uid: ShapeEngine.Core.Structs.Direction.IsDownLeft*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.IsDownLeft
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_IsDownLeft
  name: IsDownLeft
  nameWithType: Direction.IsDownLeft
  fullName: ShapeEngine.Core.Structs.Direction.IsDownLeft
- uid: ShapeEngine.Core.Structs.Direction.IsUpRight*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.IsUpRight
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_IsUpRight
  name: IsUpRight
  nameWithType: Direction.IsUpRight
  fullName: ShapeEngine.Core.Structs.Direction.IsUpRight
- uid: ShapeEngine.Core.Structs.Direction.IsDownRight*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.IsDownRight
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_IsDownRight
  name: IsDownRight
  nameWithType: Direction.IsDownRight
  fullName: ShapeEngine.Core.Structs.Direction.IsDownRight
- uid: ShapeEngine.Core.Structs.Direction.Empty*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.Empty
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_Empty
  name: Empty
  nameWithType: Direction.Empty
  fullName: ShapeEngine.Core.Structs.Direction.Empty
- uid: ShapeEngine.Core.Structs.Direction
  commentId: T:ShapeEngine.Core.Structs.Direction
  parent: ShapeEngine.Core.Structs
  href: ShapeEngine.Core.Structs.Direction.html
  name: Direction
  nameWithType: Direction
  fullName: ShapeEngine.Core.Structs.Direction
- uid: ShapeEngine.Core.Structs.Direction.Right*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.Right
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_Right
  name: Right
  nameWithType: Direction.Right
  fullName: ShapeEngine.Core.Structs.Direction.Right
- uid: ShapeEngine.Core.Structs.Direction.Left*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.Left
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_Left
  name: Left
  nameWithType: Direction.Left
  fullName: ShapeEngine.Core.Structs.Direction.Left
- uid: ShapeEngine.Core.Structs.Direction.Up*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.Up
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_Up
  name: Up
  nameWithType: Direction.Up
  fullName: ShapeEngine.Core.Structs.Direction.Up
- uid: ShapeEngine.Core.Structs.Direction.Down*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.Down
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_Down
  name: Down
  nameWithType: Direction.Down
  fullName: ShapeEngine.Core.Structs.Direction.Down
- uid: ShapeEngine.Core.Structs.Direction.UpLeft*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.UpLeft
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_UpLeft
  name: UpLeft
  nameWithType: Direction.UpLeft
  fullName: ShapeEngine.Core.Structs.Direction.UpLeft
- uid: ShapeEngine.Core.Structs.Direction.UpRight*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.UpRight
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_UpRight
  name: UpRight
  nameWithType: Direction.UpRight
  fullName: ShapeEngine.Core.Structs.Direction.UpRight
- uid: ShapeEngine.Core.Structs.Direction.DownLeft*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.DownLeft
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_DownLeft
  name: DownLeft
  nameWithType: Direction.DownLeft
  fullName: ShapeEngine.Core.Structs.Direction.DownLeft
- uid: ShapeEngine.Core.Structs.Direction.DownRight*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.DownRight
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_DownRight
  name: DownRight
  nameWithType: Direction.DownRight
  fullName: ShapeEngine.Core.Structs.Direction.DownRight
- uid: ShapeEngine.Core.Structs.Direction.ToVector2*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.ToVector2
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_ToVector2
  name: ToVector2
  nameWithType: Direction.ToVector2
  fullName: ShapeEngine.Core.Structs.Direction.ToVector2
- uid: ShapeEngine.Core.Structs.Direction.ToAlignement*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.ToAlignement
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_ToAlignement
  name: ToAlignement
  nameWithType: Direction.ToAlignement
  fullName: ShapeEngine.Core.Structs.Direction.ToAlignement
- uid: ShapeEngine.Core.Structs.AnchorPoint
  commentId: T:ShapeEngine.Core.Structs.AnchorPoint
  parent: ShapeEngine.Core.Structs
  href: ShapeEngine.Core.Structs.AnchorPoint.html
  name: AnchorPoint
  nameWithType: AnchorPoint
  fullName: ShapeEngine.Core.Structs.AnchorPoint
- uid: ShapeEngine.Core.Structs.Direction.ToInvertedAlignement*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.ToInvertedAlignement
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_ToInvertedAlignement
  name: ToInvertedAlignement
  nameWithType: Direction.ToInvertedAlignement
  fullName: ShapeEngine.Core.Structs.Direction.ToInvertedAlignement
- uid: ShapeEngine.Core.Structs.Direction.Invert*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.Invert
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_Invert
  name: Invert
  nameWithType: Direction.Invert
  fullName: ShapeEngine.Core.Structs.Direction.Invert
- uid: ShapeEngine.Core.Structs.Direction.Signed*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.Signed
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_Signed
  name: Signed
  nameWithType: Direction.Signed
  fullName: ShapeEngine.Core.Structs.Direction.Signed
- uid: ShapeEngine.Core.Structs.Direction.op_Addition*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.op_Addition
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_op_Addition_ShapeEngine_Core_Structs_Direction_ShapeEngine_Core_Structs_Direction_
  name: operator +
  nameWithType: Direction.operator +
  fullName: ShapeEngine.Core.Structs.Direction.operator +
  nameWithType.vb: Direction.+
  fullName.vb: ShapeEngine.Core.Structs.Direction.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ShapeEngine.Core.Structs.Direction.op_Addition*
    name: +
    href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_op_Addition_ShapeEngine_Core_Structs_Direction_ShapeEngine_Core_Structs_Direction_
- uid: ShapeEngine.Core.Structs.Direction.op_Subtraction*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.op_Subtraction
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_op_Subtraction_ShapeEngine_Core_Structs_Direction_ShapeEngine_Core_Structs_Direction_
  name: operator -
  nameWithType: Direction.operator -
  fullName: ShapeEngine.Core.Structs.Direction.operator -
  nameWithType.vb: Direction.-
  fullName.vb: ShapeEngine.Core.Structs.Direction.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ShapeEngine.Core.Structs.Direction.op_Subtraction*
    name: '-'
    href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_op_Subtraction_ShapeEngine_Core_Structs_Direction_ShapeEngine_Core_Structs_Direction_
- uid: ShapeEngine.Core.Structs.Direction.op_Multiply*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.op_Multiply
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_op_Multiply_ShapeEngine_Core_Structs_Direction_ShapeEngine_Core_Structs_Direction_
  name: operator *
  nameWithType: Direction.operator *
  fullName: ShapeEngine.Core.Structs.Direction.operator *
  nameWithType.vb: Direction.*
  fullName.vb: ShapeEngine.Core.Structs.Direction.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ShapeEngine.Core.Structs.Direction.op_Multiply*
    name: '*'
    href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_op_Multiply_ShapeEngine_Core_Structs_Direction_ShapeEngine_Core_Structs_Direction_
- uid: ShapeEngine.Core.Structs.Direction.op_Division*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.op_Division
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_op_Division_ShapeEngine_Core_Structs_Direction_ShapeEngine_Core_Structs_Direction_
  name: operator /
  nameWithType: Direction.operator /
  fullName: ShapeEngine.Core.Structs.Direction.operator /
  nameWithType.vb: Direction./
  fullName.vb: ShapeEngine.Core.Structs.Direction./
  name.vb: /
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ShapeEngine.Core.Structs.Direction.op_Division*
    name: /
    href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_op_Division_ShapeEngine_Core_Structs_Direction_ShapeEngine_Core_Structs_Direction_
- uid: ShapeEngine.Core.Structs.Direction.Equals*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.Equals
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_Equals_ShapeEngine_Core_Structs_Direction_
  name: Equals
  nameWithType: Direction.Equals
  fullName: ShapeEngine.Core.Structs.Direction.Equals
- uid: System.IEquatable{ShapeEngine.Core.Structs.Direction}.Equals(ShapeEngine.Core.Structs.Direction)
  commentId: M:System.IEquatable{ShapeEngine.Core.Structs.Direction}.Equals(ShapeEngine.Core.Structs.Direction)
  parent: System.IEquatable{ShapeEngine.Core.Structs.Direction}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Direction)
  nameWithType: IEquatable<Direction>.Equals(Direction)
  fullName: System.IEquatable<ShapeEngine.Core.Structs.Direction>.Equals(ShapeEngine.Core.Structs.Direction)
  nameWithType.vb: IEquatable(Of Direction).Equals(Direction)
  fullName.vb: System.IEquatable(Of ShapeEngine.Core.Structs.Direction).Equals(ShapeEngine.Core.Structs.Direction)
  spec.csharp:
  - uid: System.IEquatable{ShapeEngine.Core.Structs.Direction}.Equals(ShapeEngine.Core.Structs.Direction)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: ShapeEngine.Core.Structs.Direction
    name: Direction
    href: ShapeEngine.Core.Structs.Direction.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{ShapeEngine.Core.Structs.Direction}.Equals(ShapeEngine.Core.Structs.Direction)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: ShapeEngine.Core.Structs.Direction
    name: Direction
    href: ShapeEngine.Core.Structs.Direction.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: ShapeEngine.Core.Structs.Direction.GetHashCode*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.GetHashCode
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_GetHashCode
  name: GetHashCode
  nameWithType: Direction.GetHashCode
  fullName: ShapeEngine.Core.Structs.Direction.GetHashCode
- uid: ShapeEngine.Core.Structs.Direction.op_Equality*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.op_Equality
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_op_Equality_ShapeEngine_Core_Structs_Direction_ShapeEngine_Core_Structs_Direction_
  name: operator ==
  nameWithType: Direction.operator ==
  fullName: ShapeEngine.Core.Structs.Direction.operator ==
  nameWithType.vb: Direction.=
  fullName.vb: ShapeEngine.Core.Structs.Direction.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ShapeEngine.Core.Structs.Direction.op_Equality*
    name: ==
    href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_op_Equality_ShapeEngine_Core_Structs_Direction_ShapeEngine_Core_Structs_Direction_
- uid: ShapeEngine.Core.Structs.Direction.op_Inequality*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.op_Inequality
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_op_Inequality_ShapeEngine_Core_Structs_Direction_ShapeEngine_Core_Structs_Direction_
  name: operator !=
  nameWithType: Direction.operator !=
  fullName: ShapeEngine.Core.Structs.Direction.operator !=
  nameWithType.vb: Direction.<>
  fullName.vb: ShapeEngine.Core.Structs.Direction.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ShapeEngine.Core.Structs.Direction.op_Inequality*
    name: '!='
    href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_op_Inequality_ShapeEngine_Core_Structs_Direction_ShapeEngine_Core_Structs_Direction_
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: ShapeEngine.Core.Structs.Direction.ToString*
  commentId: Overload:ShapeEngine.Core.Structs.Direction.ToString
  href: ShapeEngine.Core.Structs.Direction.html#ShapeEngine_Core_Structs_Direction_ToString
  name: ToString
  nameWithType: Direction.ToString
  fullName: ShapeEngine.Core.Structs.Direction.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
