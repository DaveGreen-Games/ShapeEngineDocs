### YamlMime:ManagedReference
items:
- uid: ShapeEngine.Core.Shapes.Triangulation
  commentId: T:ShapeEngine.Core.Shapes.Triangulation
  id: Triangulation
  parent: ShapeEngine.Core.Shapes
  children:
  - ShapeEngine.Core.Shapes.Triangulation.#ctor
  - ShapeEngine.Core.Shapes.Triangulation.#ctor(System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Triangle})
  - ShapeEngine.Core.Shapes.Triangulation.#ctor(System.Int32)
  - ShapeEngine.Core.Shapes.Triangulation.ApplyOffset(ShapeEngine.Core.Structs.Transform2D,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.ApplyOffsetCopy(ShapeEngine.Core.Structs.Transform2D,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.ChangePosition(System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.ChangePositionCopy(System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.ChangeRotation(System.Single)
  - ShapeEngine.Core.Shapes.Triangulation.ChangeRotation(System.Single,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.ChangeRotationCopy(System.Single)
  - ShapeEngine.Core.Shapes.Triangulation.ChangeRotationCopy(System.Single,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.ChangeSize(System.Single)
  - ShapeEngine.Core.Shapes.Triangulation.ChangeSize(System.Single,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.ChangeSizeCopy(System.Single)
  - ShapeEngine.Core.Shapes.Triangulation.ChangeSizeCopy(System.Single,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.ContainsPoint(System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.ContainsPoint(System.Numerics.Vector2,System.Int32@)
  - ShapeEngine.Core.Shapes.Triangulation.Equals(ShapeEngine.Core.Shapes.Triangulation)
  - ShapeEngine.Core.Shapes.Triangulation.Get(System.Single)
  - ShapeEngine.Core.Shapes.Triangulation.GetArea
  - ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Circle,System.Int32@)
  - ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Line,System.Int32@)
  - ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Polygon,System.Int32@)
  - ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Polyline,System.Int32@)
  - ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Quad,System.Int32@)
  - ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Ray,System.Int32@)
  - ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Rect,System.Int32@)
  - ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Segment,System.Int32@)
  - ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Segments,System.Int32@)
  - ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Triangle,System.Int32@)
  - ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(System.Numerics.Vector2,System.Single@)
  - ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(System.Numerics.Vector2,System.Single@,System.Int32@,System.Int32@)
  - ShapeEngine.Core.Shapes.Triangulation.GetClosestPointTriangulationPoint(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle},System.Numerics.Vector2,System.Single@)
  - ShapeEngine.Core.Shapes.Triangulation.GetClosestSegment(System.Numerics.Vector2,System.Single@,System.Int32@)
  - ShapeEngine.Core.Shapes.Triangulation.GetClosestTriangle(System.Numerics.Vector2,System.Single@,System.Int32@)
  - ShapeEngine.Core.Shapes.Triangulation.GetClosestVertex(System.Numerics.Vector2,System.Single@,System.Int32@,System.Int32@)
  - ShapeEngine.Core.Shapes.Triangulation.GetContainingTriangles(System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.GetHashCode
  - ShapeEngine.Core.Shapes.Triangulation.GetSegment(System.Int32,System.Int32)
  - ShapeEngine.Core.Shapes.Triangulation.GetUniquePoints
  - ShapeEngine.Core.Shapes.Triangulation.GetUniqueSegments
  - ShapeEngine.Core.Shapes.Triangulation.GetUniqueTriangles
  - ShapeEngine.Core.Shapes.Triangulation.Intersect(ShapeEngine.Core.CollisionSystem.Collider)
  - ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Circle)
  - ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Line)
  - ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Polygon)
  - ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Polyline)
  - ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Quad)
  - ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Ray)
  - ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Rect)
  - ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Segment)
  - ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Segments)
  - ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Triangle)
  - ShapeEngine.Core.Shapes.Triangulation.Overlap(ShapeEngine.Core.CollisionSystem.Collider)
  - ShapeEngine.Core.Shapes.Triangulation.Overlap(ShapeEngine.Core.CollisionSystem.Collider,System.Collections.Generic.List{System.Int32}@)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Circle)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Circle,System.Collections.Generic.List{System.Int32}@)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Line)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Line,System.Collections.Generic.List{System.Int32}@)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Polygon)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Polygon,System.Collections.Generic.List{System.Int32}@)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Polyline)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Polyline,System.Collections.Generic.List{System.Int32}@)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Quad)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Quad,System.Collections.Generic.List{System.Int32}@)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Ray)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Ray,System.Collections.Generic.List{System.Int32}@)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Rect)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Rect,System.Collections.Generic.List{System.Int32}@)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Segment)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Segment,System.Collections.Generic.List{System.Int32}@)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Segments)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Segments,System.Collections.Generic.List{System.Int32}@)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Triangle)
  - ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Triangle,System.Collections.Generic.List{System.Int32}@)
  - ShapeEngine.Core.Shapes.Triangulation.Remove(System.Single)
  - ShapeEngine.Core.Shapes.Triangulation.ScaleSize(ShapeEngine.Core.Structs.Size)
  - ShapeEngine.Core.Shapes.Triangulation.ScaleSize(ShapeEngine.Core.Structs.Size,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.ScaleSize(System.Single)
  - ShapeEngine.Core.Shapes.Triangulation.ScaleSize(System.Single,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy(ShapeEngine.Core.Structs.Size)
  - ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy(ShapeEngine.Core.Structs.Size,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy(System.Single)
  - ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy(System.Single,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.SetPosition(System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.SetPositionCopy(System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.SetRotation(System.Single)
  - ShapeEngine.Core.Shapes.Triangulation.SetRotation(System.Single,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.SetRotationCopy(System.Single)
  - ShapeEngine.Core.Shapes.Triangulation.SetRotationCopy(System.Single,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.SetSize(System.Single)
  - ShapeEngine.Core.Shapes.Triangulation.SetSize(System.Single,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.SetSizeCopy(System.Single)
  - ShapeEngine.Core.Shapes.Triangulation.SetSizeCopy(System.Single,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.SetTransform(ShapeEngine.Core.Structs.Transform2D,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.SetTransformCopy(ShapeEngine.Core.Structs.Transform2D,System.Numerics.Vector2)
  - ShapeEngine.Core.Shapes.Triangulation.Subdivide(System.Single)
  - ShapeEngine.Core.Shapes.Triangulation.Subdivide(System.Single,System.Single,System.Single,System.Single)
  langs:
  - csharp
  - vb
  name: Triangulation
  nameWithType: Triangulation
  fullName: ShapeEngine.Core.Shapes.Triangulation
  type: Class
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Triangulation
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 7
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: 'public class Triangulation : ShapeList<Triangle>, IList<Triangle>, ICollection<Triangle>, IReadOnlyList<Triangle>, IReadOnlyCollection<Triangle>, IEnumerable<Triangle>, IList, ICollection, IEnumerable'
    content.vb: Public Class Triangulation Inherits ShapeList(Of Triangle) Implements IList(Of Triangle), ICollection(Of Triangle), IReadOnlyList(Of Triangle), IReadOnlyCollection(Of Triangle), IEnumerable(Of Triangle), IList, ICollection, IEnumerable
  inheritance:
  - System.Object
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  - ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}
  implements:
  - System.Collections.Generic.IList{ShapeEngine.Core.Shapes.Triangle}
  - System.Collections.Generic.ICollection{ShapeEngine.Core.Shapes.Triangle}
  - System.Collections.Generic.IReadOnlyList{ShapeEngine.Core.Shapes.Triangle}
  - System.Collections.Generic.IReadOnlyCollection{ShapeEngine.Core.Shapes.Triangle}
  - System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Triangle}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.AddRange(ShapeEngine.Core.Shapes.Triangle[])
  - ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.Copy
  - ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.IsIndexValid(System.Int32)
  - ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetRandomItem
  - ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetRandomItems(System.Int32)
  - ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetItem(System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Add(ShapeEngine.Core.Shapes.Triangle)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.AddRange(System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.AsReadOnly
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.BinarySearch(System.Int32,System.Int32,ShapeEngine.Core.Shapes.Triangle,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.BinarySearch(ShapeEngine.Core.Shapes.Triangle)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.BinarySearch(ShapeEngine.Core.Shapes.Triangle,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Clear
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Contains(ShapeEngine.Core.Shapes.Triangle)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.ConvertAll``1(System.Converter{ShapeEngine.Core.Shapes.Triangle,{TOutput}})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.CopyTo(System.Int32,ShapeEngine.Core.Shapes.Triangle[],System.Int32,System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.CopyTo(ShapeEngine.Core.Shapes.Triangle[])
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.CopyTo(ShapeEngine.Core.Shapes.Triangle[],System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.EnsureCapacity(System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Exists(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Find(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindAll(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindIndex(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLast(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLastIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLastIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLastIndex(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.ForEach(System.Action{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.GetEnumerator
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.GetRange(System.Int32,System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.IndexOf(ShapeEngine.Core.Shapes.Triangle)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.IndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.IndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32,System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Insert(System.Int32,ShapeEngine.Core.Shapes.Triangle)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.LastIndexOf(ShapeEngine.Core.Shapes.Triangle)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.LastIndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.LastIndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32,System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Remove(ShapeEngine.Core.Shapes.Triangle)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.RemoveAll(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.RemoveAt(System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.RemoveRange(System.Int32,System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Reverse
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Reverse(System.Int32,System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Slice(System.Int32,System.Int32)
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort(System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort(System.Comparison{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.ToArray
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.TrimExcess
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.TrueForAll(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Capacity
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Count
  - System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Item(System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - ShapeEngine.Core.Shapes.Triangulation.ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.Draw(ShapeEngine.Color.ColorRgba)
  - ShapeEngine.Core.Shapes.Triangulation.ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Structs.LineDrawingInfo)
  - ShapeEngine.Core.Shapes.Triangulation.ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Core.Structs.LineCapType,System.Int32)
- uid: ShapeEngine.Core.Shapes.Triangulation.#ctor
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.#ctor
  id: '#ctor'
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: Triangulation()
  nameWithType: Triangulation.Triangulation()
  fullName: ShapeEngine.Core.Shapes.Triangulation.Triangulation()
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 10
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation()
    content.vb: Public Sub New()
  overload: ShapeEngine.Core.Shapes.Triangulation.#ctor*
  nameWithType.vb: Triangulation.New()
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.New()
  name.vb: New()
- uid: ShapeEngine.Core.Shapes.Triangulation.#ctor(System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: Triangulation(int)
  nameWithType: Triangulation.Triangulation(int)
  fullName: ShapeEngine.Core.Shapes.Triangulation.Triangulation(int)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 11
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation(int capacity)
    parameters:
    - id: capacity
      type: System.Int32
    content.vb: Public Sub New(capacity As Integer)
  overload: ShapeEngine.Core.Shapes.Triangulation.#ctor*
  nameWithType.vb: Triangulation.New(Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.New(Integer)
  name.vb: New(Integer)
- uid: ShapeEngine.Core.Shapes.Triangulation.#ctor(System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.#ctor(System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Triangle})
  id: '#ctor(System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Triangle})'
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: Triangulation(IEnumerable<Triangle>)
  nameWithType: Triangulation.Triangulation(IEnumerable<Triangle>)
  fullName: ShapeEngine.Core.Shapes.Triangulation.Triangulation(System.Collections.Generic.IEnumerable<ShapeEngine.Core.Shapes.Triangle>)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 13
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation(IEnumerable<Triangle> triangles)
    parameters:
    - id: triangles
      type: System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Triangle}
    content.vb: Public Sub New(triangles As IEnumerable(Of Triangle))
  overload: ShapeEngine.Core.Shapes.Triangulation.#ctor*
  nameWithType.vb: Triangulation.New(IEnumerable(Of Triangle))
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.New(System.Collections.Generic.IEnumerable(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: New(IEnumerable(Of Triangle))
- uid: ShapeEngine.Core.Shapes.Triangulation.GetHashCode
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetHashCode
  id: GetHashCode
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Triangulation.GetHashCode()
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetHashCode()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetHashCode
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 17
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Serves as the default hash function.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for the current object.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetHashCode
  overload: ShapeEngine.Core.Shapes.Triangulation.GetHashCode*
- uid: ShapeEngine.Core.Shapes.Triangulation.Equals(ShapeEngine.Core.Shapes.Triangulation)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.Equals(ShapeEngine.Core.Shapes.Triangulation)
  id: Equals(ShapeEngine.Core.Shapes.Triangulation)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: Equals(Triangulation?)
  nameWithType: Triangulation.Equals(Triangulation?)
  fullName: ShapeEngine.Core.Shapes.Triangulation.Equals(ShapeEngine.Core.Shapes.Triangulation?)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Equals
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 19
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool Equals(Triangulation? other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Triangulation
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As Triangulation) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.Equals*
  nameWithType.vb: Triangulation.Equals(Triangulation)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.Equals(ShapeEngine.Core.Shapes.Triangulation)
  name.vb: Equals(Triangulation)
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(System.Numerics.Vector2)
  id: GetClosestPoint(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Vector2)
  nameWithType: Triangulation.GetClosestPoint(Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 32
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Vector2 p)
    parameters:
    - id: p
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(p As Vector2) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint*
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestTriangle(System.Numerics.Vector2,System.Single@,System.Int32@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetClosestTriangle(System.Numerics.Vector2,System.Single@,System.Int32@)
  id: GetClosestTriangle(System.Numerics.Vector2,System.Single@,System.Int32@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetClosestTriangle(Vector2, out float, out int)
  nameWithType: Triangulation.GetClosestTriangle(Vector2, out float, out int)
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestTriangle(System.Numerics.Vector2, out float, out int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestTriangle
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 61
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public (CollisionPoint point, Triangle triangle) GetClosestTriangle(Vector2 p, out float disSquared, out int triangleIndex)
    parameters:
    - id: p
      type: System.Numerics.Vector2
    - id: disSquared
      type: System.Single
    - id: triangleIndex
      type: System.Int32
    return:
      type: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Shapes.Triangle}
    content.vb: Public Function GetClosestTriangle(p As Vector2, disSquared As Single, triangleIndex As Integer) As (point As CollisionPoint, triangle As Triangle)
  overload: ShapeEngine.Core.Shapes.Triangulation.GetClosestTriangle*
  nameWithType.vb: Triangulation.GetClosestTriangle(Vector2, Single, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.GetClosestTriangle(System.Numerics.Vector2, Single, Integer)
  name.vb: GetClosestTriangle(Vector2, Single, Integer)
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestPointTriangulationPoint(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle},System.Numerics.Vector2,System.Single@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetClosestPointTriangulationPoint(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle},System.Numerics.Vector2,System.Single@)
  id: GetClosestPointTriangulationPoint(System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle},System.Numerics.Vector2,System.Single@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetClosestPointTriangulationPoint(List<Triangle>, Vector2, out float)
  nameWithType: Triangulation.GetClosestPointTriangulationPoint(List<Triangle>, Vector2, out float)
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestPointTriangulationPoint(System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>, System.Numerics.Vector2, out float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPointTriangulationPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 104
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public static CollisionPoint GetClosestPointTriangulationPoint(List<Triangle> triangles, Vector2 p, out float disSquared)
    parameters:
    - id: triangles
      type: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
    - id: p
      type: System.Numerics.Vector2
    - id: disSquared
      type: System.Single
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Shared Function GetClosestPointTriangulationPoint(triangles As List(Of Triangle), p As Vector2, disSquared As Single) As CollisionPoint
  overload: ShapeEngine.Core.Shapes.Triangulation.GetClosestPointTriangulationPoint*
  nameWithType.vb: Triangulation.GetClosestPointTriangulationPoint(List(Of Triangle), Vector2, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.GetClosestPointTriangulationPoint(System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle), System.Numerics.Vector2, Single)
  name.vb: GetClosestPointTriangulationPoint(List(Of Triangle), Vector2, Single)
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(System.Numerics.Vector2,System.Single@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(System.Numerics.Vector2,System.Single@)
  id: GetClosestPoint(System.Numerics.Vector2,System.Single@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Vector2, out float)
  nameWithType: Triangulation.GetClosestPoint(Vector2, out float)
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(System.Numerics.Vector2, out float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 126
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoint GetClosestPoint(Vector2 p, out float disSquared)
    parameters:
    - id: p
      type: System.Numerics.Vector2
    - id: disSquared
      type: System.Single
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Function GetClosestPoint(p As Vector2, disSquared As Single) As CollisionPoint
  overload: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint*
  nameWithType.vb: Triangulation.GetClosestPoint(Vector2, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(System.Numerics.Vector2, Single)
  name.vb: GetClosestPoint(Vector2, Single)
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(System.Numerics.Vector2,System.Single@,System.Int32@,System.Int32@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(System.Numerics.Vector2,System.Single@,System.Int32@,System.Int32@)
  id: GetClosestPoint(System.Numerics.Vector2,System.Single@,System.Int32@,System.Int32@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Vector2, out float, out int, out int)
  nameWithType: Triangulation.GetClosestPoint(Vector2, out float, out int, out int)
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(System.Numerics.Vector2, out float, out int, out int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 149
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public CollisionPoint GetClosestPoint(Vector2 p, out float disSquared, out int triangleIndex, out int segmentIndex)
    parameters:
    - id: p
      type: System.Numerics.Vector2
    - id: disSquared
      type: System.Single
    - id: triangleIndex
      type: System.Int32
    - id: segmentIndex
      type: System.Int32
    return:
      type: ShapeEngine.Core.Structs.CollisionPoint
    content.vb: Public Function GetClosestPoint(p As Vector2, disSquared As Single, triangleIndex As Integer, segmentIndex As Integer) As CollisionPoint
  overload: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint*
  nameWithType.vb: Triangulation.GetClosestPoint(Vector2, Single, Integer, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(System.Numerics.Vector2, Single, Integer, Integer)
  name.vb: GetClosestPoint(Vector2, Single, Integer, Integer)
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestVertex(System.Numerics.Vector2,System.Single@,System.Int32@,System.Int32@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetClosestVertex(System.Numerics.Vector2,System.Single@,System.Int32@,System.Int32@)
  id: GetClosestVertex(System.Numerics.Vector2,System.Single@,System.Int32@,System.Int32@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetClosestVertex(Vector2, out float, out int, out int)
  nameWithType: Triangulation.GetClosestVertex(Vector2, out float, out int, out int)
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestVertex(System.Numerics.Vector2, out float, out int, out int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestVertex
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 177
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Vector2 GetClosestVertex(Vector2 p, out float disSquared, out int triangleIndex, out int segmentIndex)
    parameters:
    - id: p
      type: System.Numerics.Vector2
    - id: disSquared
      type: System.Single
    - id: triangleIndex
      type: System.Int32
    - id: segmentIndex
      type: System.Int32
    return:
      type: System.Numerics.Vector2
    content.vb: Public Function GetClosestVertex(p As Vector2, disSquared As Single, triangleIndex As Integer, segmentIndex As Integer) As Vector2
  overload: ShapeEngine.Core.Shapes.Triangulation.GetClosestVertex*
  nameWithType.vb: Triangulation.GetClosestVertex(Vector2, Single, Integer, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.GetClosestVertex(System.Numerics.Vector2, Single, Integer, Integer)
  name.vb: GetClosestVertex(Vector2, Single, Integer, Integer)
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Line,System.Int32@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Line,System.Int32@)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Line,System.Int32@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Line, out int)
  nameWithType: Triangulation.GetClosestPoint(Line, out int)
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Line, out int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 204
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Line other, out int triangleIndex)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Line
    - id: triangleIndex
      type: System.Int32
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Line, triangleIndex As Integer) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint*
  nameWithType.vb: Triangulation.GetClosestPoint(Line, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Line, Integer)
  name.vb: GetClosestPoint(Line, Integer)
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Ray,System.Int32@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Ray,System.Int32@)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Ray,System.Int32@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Ray, out int)
  nameWithType: Triangulation.GetClosestPoint(Ray, out int)
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Ray, out int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 226
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Ray other, out int triangleIndex)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Ray
    - id: triangleIndex
      type: System.Int32
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Ray, triangleIndex As Integer) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint*
  nameWithType.vb: Triangulation.GetClosestPoint(Ray, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Ray, Integer)
  name.vb: GetClosestPoint(Ray, Integer)
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Segment,System.Int32@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Segment,System.Int32@)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Segment,System.Int32@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Segment, out int)
  nameWithType: Triangulation.GetClosestPoint(Segment, out int)
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Segment, out int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 248
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Segment other, out int triangleIndex)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Segment
    - id: triangleIndex
      type: System.Int32
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Segment, triangleIndex As Integer) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint*
  nameWithType.vb: Triangulation.GetClosestPoint(Segment, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Segment, Integer)
  name.vb: GetClosestPoint(Segment, Integer)
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Circle,System.Int32@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Circle,System.Int32@)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Circle,System.Int32@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Circle, out int)
  nameWithType: Triangulation.GetClosestPoint(Circle, out int)
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Circle, out int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 270
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Circle other, out int triangleIndex)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Circle
    - id: triangleIndex
      type: System.Int32
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Circle, triangleIndex As Integer) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint*
  nameWithType.vb: Triangulation.GetClosestPoint(Circle, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Circle, Integer)
  name.vb: GetClosestPoint(Circle, Integer)
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Triangle,System.Int32@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Triangle,System.Int32@)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Triangle,System.Int32@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Triangle, out int)
  nameWithType: Triangulation.GetClosestPoint(Triangle, out int)
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Triangle, out int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 292
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Triangle other, out int triangleIndex)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Triangle
    - id: triangleIndex
      type: System.Int32
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Triangle, triangleIndex As Integer) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint*
  nameWithType.vb: Triangulation.GetClosestPoint(Triangle, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Triangle, Integer)
  name.vb: GetClosestPoint(Triangle, Integer)
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Quad,System.Int32@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Quad,System.Int32@)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Quad,System.Int32@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Quad, out int)
  nameWithType: Triangulation.GetClosestPoint(Quad, out int)
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Quad, out int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 314
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Quad other, out int triangleIndex)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Quad
    - id: triangleIndex
      type: System.Int32
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Quad, triangleIndex As Integer) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint*
  nameWithType.vb: Triangulation.GetClosestPoint(Quad, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Quad, Integer)
  name.vb: GetClosestPoint(Quad, Integer)
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Rect,System.Int32@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Rect,System.Int32@)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Rect,System.Int32@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Rect, out int)
  nameWithType: Triangulation.GetClosestPoint(Rect, out int)
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Rect, out int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 336
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Rect other, out int triangleIndex)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Rect
    - id: triangleIndex
      type: System.Int32
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Rect, triangleIndex As Integer) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint*
  nameWithType.vb: Triangulation.GetClosestPoint(Rect, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Rect, Integer)
  name.vb: GetClosestPoint(Rect, Integer)
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Polygon,System.Int32@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Polygon,System.Int32@)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Polygon,System.Int32@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Polygon, out int)
  nameWithType: Triangulation.GetClosestPoint(Polygon, out int)
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Polygon, out int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 358
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Polygon other, out int triangleIndex)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Polygon
    - id: triangleIndex
      type: System.Int32
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Polygon, triangleIndex As Integer) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint*
  nameWithType.vb: Triangulation.GetClosestPoint(Polygon, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Polygon, Integer)
  name.vb: GetClosestPoint(Polygon, Integer)
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Polyline,System.Int32@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Polyline,System.Int32@)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Polyline,System.Int32@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Polyline, out int)
  nameWithType: Triangulation.GetClosestPoint(Polyline, out int)
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Polyline, out int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 380
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Polyline other, out int triangleIndex)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Polyline
    - id: triangleIndex
      type: System.Int32
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Polyline, triangleIndex As Integer) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint*
  nameWithType.vb: Triangulation.GetClosestPoint(Polyline, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Polyline, Integer)
  name.vb: GetClosestPoint(Polyline, Integer)
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Segments,System.Int32@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Segments,System.Int32@)
  id: GetClosestPoint(ShapeEngine.Core.Shapes.Segments,System.Int32@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetClosestPoint(Segments, out int)
  nameWithType: Triangulation.GetClosestPoint(Segments, out int)
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Segments, out int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 402
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public ClosestPointResult GetClosestPoint(Segments other, out int triangleIndex)
    parameters:
    - id: other
      type: ShapeEngine.Core.Shapes.Segments
    - id: triangleIndex
      type: System.Int32
    return:
      type: ShapeEngine.Core.Structs.ClosestPointResult
    content.vb: Public Function GetClosestPoint(other As Segments, triangleIndex As Integer) As ClosestPointResult
  overload: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint*
  nameWithType.vb: Triangulation.GetClosestPoint(Segments, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint(ShapeEngine.Core.Shapes.Segments, Integer)
  name.vb: GetClosestPoint(Segments, Integer)
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestSegment(System.Numerics.Vector2,System.Single@,System.Int32@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetClosestSegment(System.Numerics.Vector2,System.Single@,System.Int32@)
  id: GetClosestSegment(System.Numerics.Vector2,System.Single@,System.Int32@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetClosestSegment(Vector2, out float, out int)
  nameWithType: Triangulation.GetClosestSegment(Vector2, out float, out int)
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestSegment(System.Numerics.Vector2, out float, out int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetClosestSegment
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 425
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public (Segment segment, CollisionPoint segmentPoint) GetClosestSegment(Vector2 p, out float disSquared, out int triangleIndex)
    parameters:
    - id: p
      type: System.Numerics.Vector2
    - id: disSquared
      type: System.Single
    - id: triangleIndex
      type: System.Int32
    return:
      type: System.ValueTuple{ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.Structs.CollisionPoint}
    content.vb: Public Function GetClosestSegment(p As Vector2, disSquared As Single, triangleIndex As Integer) As (segment As Segment, segmentPoint As CollisionPoint)
  overload: ShapeEngine.Core.Shapes.Triangulation.GetClosestSegment*
  nameWithType.vb: Triangulation.GetClosestSegment(Vector2, Single, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.GetClosestSegment(System.Numerics.Vector2, Single, Integer)
  name.vb: GetClosestSegment(Vector2, Single, Integer)
- uid: ShapeEngine.Core.Shapes.Triangulation.ContainsPoint(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ContainsPoint(System.Numerics.Vector2)
  id: ContainsPoint(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ContainsPoint(Vector2)
  nameWithType: Triangulation.ContainsPoint(Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ContainsPoint(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ContainsPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 457
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool ContainsPoint(Vector2 p)
    parameters:
    - id: p
      type: System.Numerics.Vector2
    return:
      type: System.Boolean
    content.vb: Public Function ContainsPoint(p As Vector2) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.ContainsPoint*
- uid: ShapeEngine.Core.Shapes.Triangulation.ContainsPoint(System.Numerics.Vector2,System.Int32@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ContainsPoint(System.Numerics.Vector2,System.Int32@)
  id: ContainsPoint(System.Numerics.Vector2,System.Int32@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ContainsPoint(Vector2, out int)
  nameWithType: Triangulation.ContainsPoint(Vector2, out int)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ContainsPoint(System.Numerics.Vector2, out int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ContainsPoint
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 466
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public bool ContainsPoint(Vector2 p, out int triangleIndex)
    parameters:
    - id: p
      type: System.Numerics.Vector2
    - id: triangleIndex
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function ContainsPoint(p As Vector2, triangleIndex As Integer) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.ContainsPoint*
  nameWithType.vb: Triangulation.ContainsPoint(Vector2, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.ContainsPoint(System.Numerics.Vector2, Integer)
  name.vb: ContainsPoint(Vector2, Integer)
- uid: ShapeEngine.Core.Shapes.Triangulation.Overlap(ShapeEngine.Core.CollisionSystem.Collider)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.Overlap(ShapeEngine.Core.CollisionSystem.Collider)
  id: Overlap(ShapeEngine.Core.CollisionSystem.Collider)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: Overlap(Collider)
  nameWithType: Triangulation.Overlap(Collider)
  fullName: ShapeEngine.Core.Shapes.Triangulation.Overlap(ShapeEngine.Core.CollisionSystem.Collider)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Overlap
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 489
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find if any triangle in this collection overlaps the specified shape.
  example: []
  syntax:
    content: public bool Overlap(Collider collider)
    parameters:
    - id: collider
      type: ShapeEngine.Core.CollisionSystem.Collider
      description: ''
    return:
      type: System.Boolean
      description: Returns true after the first overlap is found. If no overlap is found, returns false.
    content.vb: Public Function Overlap(collider As Collider) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.Overlap*
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Line)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Line)
  id: OverlapShape(ShapeEngine.Core.Shapes.Line)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Line)
  nameWithType: Triangulation.OverlapShape(Line)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Line)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 504
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find if any triangle in this collection overlaps the specified shape.
  example: []
  syntax:
    content: public bool OverlapShape(Line shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Line
      description: ''
    return:
      type: System.Boolean
      description: Returns true after the first overlap is found. If no overlap is found, returns false.
    content.vb: Public Function OverlapShape(shape As Line) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Ray)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Ray)
  id: OverlapShape(ShapeEngine.Core.Shapes.Ray)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Ray)
  nameWithType: Triangulation.OverlapShape(Ray)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Ray)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 519
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find if any triangle in this collection overlaps the specified shape.
  example: []
  syntax:
    content: public bool OverlapShape(Ray shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Ray
      description: ''
    return:
      type: System.Boolean
      description: Returns true after the first overlap is found. If no overlap is found, returns false.
    content.vb: Public Function OverlapShape(shape As Ray) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Segment)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Segment)
  id: OverlapShape(ShapeEngine.Core.Shapes.Segment)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Segment)
  nameWithType: Triangulation.OverlapShape(Segment)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Segment)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 534
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find if any triangle in this collection overlaps the specified shape.
  example: []
  syntax:
    content: public bool OverlapShape(Segment shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Segment
      description: ''
    return:
      type: System.Boolean
      description: Returns true after the first overlap is found. If no overlap is found, returns false.
    content.vb: Public Function OverlapShape(shape As Segment) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Circle)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Circle)
  id: OverlapShape(ShapeEngine.Core.Shapes.Circle)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Circle)
  nameWithType: Triangulation.OverlapShape(Circle)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Circle)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 549
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find if any triangle in this collection overlaps the specified shape.
  example: []
  syntax:
    content: public bool OverlapShape(Circle shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Circle
      description: ''
    return:
      type: System.Boolean
      description: Returns true after the first overlap is found. If no overlap is found, returns false.
    content.vb: Public Function OverlapShape(shape As Circle) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Triangle)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Triangle)
  id: OverlapShape(ShapeEngine.Core.Shapes.Triangle)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Triangle)
  nameWithType: Triangulation.OverlapShape(Triangle)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Triangle)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 564
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find if any triangle in this collection overlaps the specified shape.
  example: []
  syntax:
    content: public bool OverlapShape(Triangle shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Triangle
      description: ''
    return:
      type: System.Boolean
      description: Returns true after the first overlap is found. If no overlap is found, returns false.
    content.vb: Public Function OverlapShape(shape As Triangle) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Rect)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Rect)
  id: OverlapShape(ShapeEngine.Core.Shapes.Rect)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Rect)
  nameWithType: Triangulation.OverlapShape(Rect)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Rect)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 579
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find if any triangle in this collection overlaps the specified shape.
  example: []
  syntax:
    content: public bool OverlapShape(Rect shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Rect
      description: ''
    return:
      type: System.Boolean
      description: Returns true after the first overlap is found. If no overlap is found, returns false.
    content.vb: Public Function OverlapShape(shape As Rect) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Quad)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Quad)
  id: OverlapShape(ShapeEngine.Core.Shapes.Quad)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Quad)
  nameWithType: Triangulation.OverlapShape(Quad)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Quad)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 594
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find if any triangle in this collection overlaps the specified shape.
  example: []
  syntax:
    content: public bool OverlapShape(Quad shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Quad
      description: ''
    return:
      type: System.Boolean
      description: Returns true after the first overlap is found. If no overlap is found, returns false.
    content.vb: Public Function OverlapShape(shape As Quad) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Polygon)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Polygon)
  id: OverlapShape(ShapeEngine.Core.Shapes.Polygon)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Polygon)
  nameWithType: Triangulation.OverlapShape(Polygon)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Polygon)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 609
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find if any triangle in this collection overlaps the specified shape.
  example: []
  syntax:
    content: public bool OverlapShape(Polygon shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Polygon
      description: ''
    return:
      type: System.Boolean
      description: Returns true after the first overlap is found. If no overlap is found, returns false.
    content.vb: Public Function OverlapShape(shape As Polygon) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Polyline)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Polyline)
  id: OverlapShape(ShapeEngine.Core.Shapes.Polyline)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Polyline)
  nameWithType: Triangulation.OverlapShape(Polyline)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Polyline)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 624
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find if any triangle in this collection overlaps the specified shape.
  example: []
  syntax:
    content: public bool OverlapShape(Polyline shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Polyline
      description: ''
    return:
      type: System.Boolean
      description: Returns true after the first overlap is found. If no overlap is found, returns false.
    content.vb: Public Function OverlapShape(shape As Polyline) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Segments)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Segments)
  id: OverlapShape(ShapeEngine.Core.Shapes.Segments)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Segments)
  nameWithType: Triangulation.OverlapShape(Segments)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Segments)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 639
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find if any triangle in this collection overlaps the specified shape.
  example: []
  syntax:
    content: public bool OverlapShape(Segments segments)
    parameters:
    - id: segments
      type: ShapeEngine.Core.Shapes.Segments
      description: ''
    return:
      type: System.Boolean
      description: Returns true after the first overlap is found. If no overlap is found, returns false.
    content.vb: Public Function OverlapShape(segments As Segments) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.Overlap(ShapeEngine.Core.CollisionSystem.Collider,System.Collections.Generic.List{System.Int32}@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.Overlap(ShapeEngine.Core.CollisionSystem.Collider,System.Collections.Generic.List{System.Int32}@)
  id: Overlap(ShapeEngine.Core.CollisionSystem.Collider,System.Collections.Generic.List{System.Int32}@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: Overlap(Collider, out List<int>?)
  nameWithType: Triangulation.Overlap(Collider, out List<int>?)
  fullName: ShapeEngine.Core.Shapes.Triangulation.Overlap(ShapeEngine.Core.CollisionSystem.Collider, out System.Collections.Generic.List<int>?)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Overlap
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 656
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles in this collection that overlap the specified shape.
  example: []
  syntax:
    content: public bool Overlap(Collider collider, out List<int>? triangleIndices)
    parameters:
    - id: collider
      type: ShapeEngine.Core.CollisionSystem.Collider
      description: The collider to check against.
    - id: triangleIndices
      type: System.Collections.Generic.List{System.Int32}
      description: All triangle indices that overlap the specified collider.
    return:
      type: System.Boolean
      description: Return true if at least 1 overlap was found, otherwise return false. Does not return early. All triangle have to be checked.
    content.vb: Public Function Overlap(collider As Collider, triangleIndices As List(Of Integer)) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.Overlap*
  nameWithType.vb: Triangulation.Overlap(Collider, List(Of Integer))
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.Overlap(ShapeEngine.Core.CollisionSystem.Collider, System.Collections.Generic.List(Of Integer))
  name.vb: Overlap(Collider, List(Of Integer))
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Line,System.Collections.Generic.List{System.Int32}@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Line,System.Collections.Generic.List{System.Int32}@)
  id: OverlapShape(ShapeEngine.Core.Shapes.Line,System.Collections.Generic.List{System.Int32}@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Line, out List<int>?)
  nameWithType: Triangulation.OverlapShape(Line, out List<int>?)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Line, out System.Collections.Generic.List<int>?)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 675
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles in this collection that overlap the specified shape.
  example: []
  syntax:
    content: public bool OverlapShape(Line shape, out List<int>? triangleIndices)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Line
      description: The shape to check against.
    - id: triangleIndices
      type: System.Collections.Generic.List{System.Int32}
      description: All triangle indices that overlap the specified shape.
    return:
      type: System.Boolean
      description: Return true if at least 1 overlap was found, otherwise return false. Does not return early. All triangle have to be checked.
    content.vb: Public Function OverlapShape(shape As Line, triangleIndices As List(Of Integer)) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
  nameWithType.vb: Triangulation.OverlapShape(Line, List(Of Integer))
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Line, System.Collections.Generic.List(Of Integer))
  name.vb: OverlapShape(Line, List(Of Integer))
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Ray,System.Collections.Generic.List{System.Int32}@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Ray,System.Collections.Generic.List{System.Int32}@)
  id: OverlapShape(ShapeEngine.Core.Shapes.Ray,System.Collections.Generic.List{System.Int32}@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Ray, out List<int>?)
  nameWithType: Triangulation.OverlapShape(Ray, out List<int>?)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Ray, out System.Collections.Generic.List<int>?)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 694
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles in this collection that overlap the specified shape.
  example: []
  syntax:
    content: public bool OverlapShape(Ray shape, out List<int>? triangleIndices)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Ray
      description: The shape to check against.
    - id: triangleIndices
      type: System.Collections.Generic.List{System.Int32}
      description: All triangle indices that overlap the specified shape.
    return:
      type: System.Boolean
      description: Return true if at least 1 overlap was found, otherwise return false. Does not return early. All triangle have to be checked.
    content.vb: Public Function OverlapShape(shape As Ray, triangleIndices As List(Of Integer)) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
  nameWithType.vb: Triangulation.OverlapShape(Ray, List(Of Integer))
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Ray, System.Collections.Generic.List(Of Integer))
  name.vb: OverlapShape(Ray, List(Of Integer))
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Segment,System.Collections.Generic.List{System.Int32}@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Segment,System.Collections.Generic.List{System.Int32}@)
  id: OverlapShape(ShapeEngine.Core.Shapes.Segment,System.Collections.Generic.List{System.Int32}@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Segment, out List<int>?)
  nameWithType: Triangulation.OverlapShape(Segment, out List<int>?)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Segment, out System.Collections.Generic.List<int>?)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 713
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles in this collection that overlap the specified shape.
  example: []
  syntax:
    content: public bool OverlapShape(Segment shape, out List<int>? triangleIndices)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Segment
      description: The shape to check against.
    - id: triangleIndices
      type: System.Collections.Generic.List{System.Int32}
      description: All triangle indices that overlap the specified shape.
    return:
      type: System.Boolean
      description: Return true if at least 1 overlap was found, otherwise return false. Does not return early. All triangle have to be checked.
    content.vb: Public Function OverlapShape(shape As Segment, triangleIndices As List(Of Integer)) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
  nameWithType.vb: Triangulation.OverlapShape(Segment, List(Of Integer))
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Segment, System.Collections.Generic.List(Of Integer))
  name.vb: OverlapShape(Segment, List(Of Integer))
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Circle,System.Collections.Generic.List{System.Int32}@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Circle,System.Collections.Generic.List{System.Int32}@)
  id: OverlapShape(ShapeEngine.Core.Shapes.Circle,System.Collections.Generic.List{System.Int32}@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Circle, out List<int>?)
  nameWithType: Triangulation.OverlapShape(Circle, out List<int>?)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Circle, out System.Collections.Generic.List<int>?)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 732
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles in this collection that overlap the specified shape.
  example: []
  syntax:
    content: public bool OverlapShape(Circle shape, out List<int>? triangleIndices)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Circle
      description: The shape to check against.
    - id: triangleIndices
      type: System.Collections.Generic.List{System.Int32}
      description: All triangle indices that overlap the specified shape.
    return:
      type: System.Boolean
      description: Return true if at least 1 overlap was found, otherwise return false. Does not return early. All triangle have to be checked.
    content.vb: Public Function OverlapShape(shape As Circle, triangleIndices As List(Of Integer)) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
  nameWithType.vb: Triangulation.OverlapShape(Circle, List(Of Integer))
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Circle, System.Collections.Generic.List(Of Integer))
  name.vb: OverlapShape(Circle, List(Of Integer))
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Triangle,System.Collections.Generic.List{System.Int32}@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Triangle,System.Collections.Generic.List{System.Int32}@)
  id: OverlapShape(ShapeEngine.Core.Shapes.Triangle,System.Collections.Generic.List{System.Int32}@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Triangle, out List<int>?)
  nameWithType: Triangulation.OverlapShape(Triangle, out List<int>?)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Triangle, out System.Collections.Generic.List<int>?)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 751
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles in this collection that overlap the specified shape.
  example: []
  syntax:
    content: public bool OverlapShape(Triangle shape, out List<int>? triangleIndices)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Triangle
      description: The shape to check against.
    - id: triangleIndices
      type: System.Collections.Generic.List{System.Int32}
      description: All triangle indices that overlap the specified shape.
    return:
      type: System.Boolean
      description: Return true if at least 1 overlap was found, otherwise return false. Does not return early. All triangle have to be checked.
    content.vb: Public Function OverlapShape(shape As Triangle, triangleIndices As List(Of Integer)) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
  nameWithType.vb: Triangulation.OverlapShape(Triangle, List(Of Integer))
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Triangle, System.Collections.Generic.List(Of Integer))
  name.vb: OverlapShape(Triangle, List(Of Integer))
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Rect,System.Collections.Generic.List{System.Int32}@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Rect,System.Collections.Generic.List{System.Int32}@)
  id: OverlapShape(ShapeEngine.Core.Shapes.Rect,System.Collections.Generic.List{System.Int32}@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Rect, out List<int>?)
  nameWithType: Triangulation.OverlapShape(Rect, out List<int>?)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Rect, out System.Collections.Generic.List<int>?)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 770
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles in this collection that overlap the specified shape.
  example: []
  syntax:
    content: public bool OverlapShape(Rect shape, out List<int>? triangleIndices)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Rect
      description: The shape to check against.
    - id: triangleIndices
      type: System.Collections.Generic.List{System.Int32}
      description: All triangle indices that overlap the specified shape.
    return:
      type: System.Boolean
      description: Return true if at least 1 overlap was found, otherwise return false. Does not return early. All triangle have to be checked.
    content.vb: Public Function OverlapShape(shape As Rect, triangleIndices As List(Of Integer)) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
  nameWithType.vb: Triangulation.OverlapShape(Rect, List(Of Integer))
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Rect, System.Collections.Generic.List(Of Integer))
  name.vb: OverlapShape(Rect, List(Of Integer))
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Quad,System.Collections.Generic.List{System.Int32}@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Quad,System.Collections.Generic.List{System.Int32}@)
  id: OverlapShape(ShapeEngine.Core.Shapes.Quad,System.Collections.Generic.List{System.Int32}@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Quad, out List<int>?)
  nameWithType: Triangulation.OverlapShape(Quad, out List<int>?)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Quad, out System.Collections.Generic.List<int>?)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 789
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles in this collection that overlap the specified shape.
  example: []
  syntax:
    content: public bool OverlapShape(Quad shape, out List<int>? triangleIndices)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Quad
      description: The shape to check against.
    - id: triangleIndices
      type: System.Collections.Generic.List{System.Int32}
      description: All triangle indices that overlap the specified shape.
    return:
      type: System.Boolean
      description: Return true if at least 1 overlap was found, otherwise return false. Does not return early. All triangle have to be checked.
    content.vb: Public Function OverlapShape(shape As Quad, triangleIndices As List(Of Integer)) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
  nameWithType.vb: Triangulation.OverlapShape(Quad, List(Of Integer))
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Quad, System.Collections.Generic.List(Of Integer))
  name.vb: OverlapShape(Quad, List(Of Integer))
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Polygon,System.Collections.Generic.List{System.Int32}@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Polygon,System.Collections.Generic.List{System.Int32}@)
  id: OverlapShape(ShapeEngine.Core.Shapes.Polygon,System.Collections.Generic.List{System.Int32}@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Polygon, out List<int>?)
  nameWithType: Triangulation.OverlapShape(Polygon, out List<int>?)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Polygon, out System.Collections.Generic.List<int>?)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 808
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles in this collection that overlap the specified shape.
  example: []
  syntax:
    content: public bool OverlapShape(Polygon shape, out List<int>? triangleIndices)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Polygon
      description: The shape to check against.
    - id: triangleIndices
      type: System.Collections.Generic.List{System.Int32}
      description: All triangle indices that overlap the specified shape.
    return:
      type: System.Boolean
      description: Return true if at least 1 overlap was found, otherwise return false. Does not return early. All triangle have to be checked.
    content.vb: Public Function OverlapShape(shape As Polygon, triangleIndices As List(Of Integer)) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
  nameWithType.vb: Triangulation.OverlapShape(Polygon, List(Of Integer))
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Polygon, System.Collections.Generic.List(Of Integer))
  name.vb: OverlapShape(Polygon, List(Of Integer))
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Polyline,System.Collections.Generic.List{System.Int32}@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Polyline,System.Collections.Generic.List{System.Int32}@)
  id: OverlapShape(ShapeEngine.Core.Shapes.Polyline,System.Collections.Generic.List{System.Int32}@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Polyline, out List<int>?)
  nameWithType: Triangulation.OverlapShape(Polyline, out List<int>?)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Polyline, out System.Collections.Generic.List<int>?)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 827
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles in this collection that overlap the specified shape.
  example: []
  syntax:
    content: public bool OverlapShape(Polyline shape, out List<int>? triangleIndices)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Polyline
      description: The shape to check against.
    - id: triangleIndices
      type: System.Collections.Generic.List{System.Int32}
      description: All triangle indices that overlap the specified shape.
    return:
      type: System.Boolean
      description: Return true if at least 1 overlap was found, otherwise return false. Does not return early. All triangle have to be checked.
    content.vb: Public Function OverlapShape(shape As Polyline, triangleIndices As List(Of Integer)) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
  nameWithType.vb: Triangulation.OverlapShape(Polyline, List(Of Integer))
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Polyline, System.Collections.Generic.List(Of Integer))
  name.vb: OverlapShape(Polyline, List(Of Integer))
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Segments,System.Collections.Generic.List{System.Int32}@)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Segments,System.Collections.Generic.List{System.Int32}@)
  id: OverlapShape(ShapeEngine.Core.Shapes.Segments,System.Collections.Generic.List{System.Int32}@)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: OverlapShape(Segments, out List<int>?)
  nameWithType: Triangulation.OverlapShape(Segments, out List<int>?)
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Segments, out System.Collections.Generic.List<int>?)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: OverlapShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 846
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles in this collection that overlap the specified segments.
  example: []
  syntax:
    content: public bool OverlapShape(Segments segments, out List<int>? triangleIndices)
    parameters:
    - id: segments
      type: ShapeEngine.Core.Shapes.Segments
      description: The segments to check against.
    - id: triangleIndices
      type: System.Collections.Generic.List{System.Int32}
      description: All triangle indices that overlap the specified segments.
    return:
      type: System.Boolean
      description: Return true if at least 1 overlap was found, otherwise return false. Does not return early. All triangle have to be checked.
    content.vb: Public Function OverlapShape(segments As Segments, triangleIndices As List(Of Integer)) As Boolean
  overload: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
  nameWithType.vb: Triangulation.OverlapShape(Segments, List(Of Integer))
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.OverlapShape(ShapeEngine.Core.Shapes.Segments, System.Collections.Generic.List(Of Integer))
  name.vb: OverlapShape(Segments, List(Of Integer))
- uid: ShapeEngine.Core.Shapes.Triangulation.Intersect(ShapeEngine.Core.CollisionSystem.Collider)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.Intersect(ShapeEngine.Core.CollisionSystem.Collider)
  id: Intersect(ShapeEngine.Core.CollisionSystem.Collider)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: Intersect(Collider)
  nameWithType: Triangulation.Intersect(Collider)
  fullName: ShapeEngine.Core.Shapes.Triangulation.Intersect(ShapeEngine.Core.CollisionSystem.Collider)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Intersect
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 869
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles that intersect the specified collider.
  example: []
  syntax:
    content: public Dictionary<int, CollisionPoints>? Intersect(Collider collider)
    parameters:
    - id: collider
      type: ShapeEngine.Core.CollisionSystem.Collider
      description: The collider to check the triangles against.
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,ShapeEngine.Core.CollisionSystem.CollisionPoints}
      description: Returns a dictionary where the key represents the index of the triangle and the value represents the found collision points.
    content.vb: Public Function Intersect(collider As Collider) As Dictionary(Of Integer, CollisionPoints)
  overload: ShapeEngine.Core.Shapes.Triangulation.Intersect*
- uid: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Line)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Line)
  id: IntersectShape(ShapeEngine.Core.Shapes.Line)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: IntersectShape(Line)
  nameWithType: Triangulation.IntersectShape(Line)
  fullName: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Line)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 891
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles that intersect the specified shape.
  example: []
  syntax:
    content: public Dictionary<int, CollisionPoints>? IntersectShape(Line shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Line
      description: The shape to check the triangles against.
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,ShapeEngine.Core.CollisionSystem.CollisionPoints}
      description: Returns a dictionary where the key represents the index of the triangle and the value represents the found collision points.
    content.vb: Public Function IntersectShape(shape As Line) As Dictionary(Of Integer, CollisionPoints)
  overload: ShapeEngine.Core.Shapes.Triangulation.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Ray)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Ray)
  id: IntersectShape(ShapeEngine.Core.Shapes.Ray)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: IntersectShape(Ray)
  nameWithType: Triangulation.IntersectShape(Ray)
  fullName: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Ray)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 912
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles that intersect the specified shape.
  example: []
  syntax:
    content: public Dictionary<int, CollisionPoints>? IntersectShape(Ray shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Ray
      description: The shape to check the triangles against.
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,ShapeEngine.Core.CollisionSystem.CollisionPoints}
      description: Returns a dictionary where the key represents the index of the triangle and the value represents the found collision points.
    content.vb: Public Function IntersectShape(shape As Ray) As Dictionary(Of Integer, CollisionPoints)
  overload: ShapeEngine.Core.Shapes.Triangulation.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Segment)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Segment)
  id: IntersectShape(ShapeEngine.Core.Shapes.Segment)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: IntersectShape(Segment)
  nameWithType: Triangulation.IntersectShape(Segment)
  fullName: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Segment)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 933
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles that intersect the specified shape.
  example: []
  syntax:
    content: public Dictionary<int, CollisionPoints>? IntersectShape(Segment shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Segment
      description: The shape to check the triangles against.
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,ShapeEngine.Core.CollisionSystem.CollisionPoints}
      description: Returns a dictionary where the key represents the index of the triangle and the value represents the found collision points.
    content.vb: Public Function IntersectShape(shape As Segment) As Dictionary(Of Integer, CollisionPoints)
  overload: ShapeEngine.Core.Shapes.Triangulation.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Circle)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Circle)
  id: IntersectShape(ShapeEngine.Core.Shapes.Circle)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: IntersectShape(Circle)
  nameWithType: Triangulation.IntersectShape(Circle)
  fullName: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Circle)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 954
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles that intersect the specified shape.
  example: []
  syntax:
    content: public Dictionary<int, CollisionPoints>? IntersectShape(Circle shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Circle
      description: The shape to check the triangles against.
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,ShapeEngine.Core.CollisionSystem.CollisionPoints}
      description: Returns a dictionary where the key represents the index of the triangle and the value represents the found collision points.
    content.vb: Public Function IntersectShape(shape As Circle) As Dictionary(Of Integer, CollisionPoints)
  overload: ShapeEngine.Core.Shapes.Triangulation.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Triangle)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Triangle)
  id: IntersectShape(ShapeEngine.Core.Shapes.Triangle)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: IntersectShape(Triangle)
  nameWithType: Triangulation.IntersectShape(Triangle)
  fullName: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Triangle)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 975
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles that intersect the specified shape.
  example: []
  syntax:
    content: public Dictionary<int, CollisionPoints>? IntersectShape(Triangle shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Triangle
      description: The shape to check the triangles against.
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,ShapeEngine.Core.CollisionSystem.CollisionPoints}
      description: Returns a dictionary where the key represents the index of the triangle and the value represents the found collision points.
    content.vb: Public Function IntersectShape(shape As Triangle) As Dictionary(Of Integer, CollisionPoints)
  overload: ShapeEngine.Core.Shapes.Triangulation.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Rect)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Rect)
  id: IntersectShape(ShapeEngine.Core.Shapes.Rect)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: IntersectShape(Rect)
  nameWithType: Triangulation.IntersectShape(Rect)
  fullName: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Rect)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 996
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles that intersect the specified shape.
  example: []
  syntax:
    content: public Dictionary<int, CollisionPoints>? IntersectShape(Rect shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Rect
      description: The shape to check the triangles against.
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,ShapeEngine.Core.CollisionSystem.CollisionPoints}
      description: Returns a dictionary where the key represents the index of the triangle and the value represents the found collision points.
    content.vb: Public Function IntersectShape(shape As Rect) As Dictionary(Of Integer, CollisionPoints)
  overload: ShapeEngine.Core.Shapes.Triangulation.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Quad)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Quad)
  id: IntersectShape(ShapeEngine.Core.Shapes.Quad)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: IntersectShape(Quad)
  nameWithType: Triangulation.IntersectShape(Quad)
  fullName: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Quad)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1017
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles that intersect the specified shape.
  example: []
  syntax:
    content: public Dictionary<int, CollisionPoints>? IntersectShape(Quad shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Quad
      description: The shape to check the triangles against.
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,ShapeEngine.Core.CollisionSystem.CollisionPoints}
      description: Returns a dictionary where the key represents the index of the triangle and the value represents the found collision points.
    content.vb: Public Function IntersectShape(shape As Quad) As Dictionary(Of Integer, CollisionPoints)
  overload: ShapeEngine.Core.Shapes.Triangulation.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Polygon)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Polygon)
  id: IntersectShape(ShapeEngine.Core.Shapes.Polygon)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: IntersectShape(Polygon)
  nameWithType: Triangulation.IntersectShape(Polygon)
  fullName: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Polygon)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1038
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles that intersect the specified shape.
  example: []
  syntax:
    content: public Dictionary<int, CollisionPoints>? IntersectShape(Polygon shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Polygon
      description: The shape to check the triangles against.
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,ShapeEngine.Core.CollisionSystem.CollisionPoints}
      description: Returns a dictionary where the key represents the index of the triangle and the value represents the found collision points.
    content.vb: Public Function IntersectShape(shape As Polygon) As Dictionary(Of Integer, CollisionPoints)
  overload: ShapeEngine.Core.Shapes.Triangulation.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Polyline)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Polyline)
  id: IntersectShape(ShapeEngine.Core.Shapes.Polyline)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: IntersectShape(Polyline)
  nameWithType: Triangulation.IntersectShape(Polyline)
  fullName: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Polyline)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1059
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles that intersect the specified shape.
  example: []
  syntax:
    content: public Dictionary<int, CollisionPoints>? IntersectShape(Polyline shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Polyline
      description: The shape to check the triangles against.
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,ShapeEngine.Core.CollisionSystem.CollisionPoints}
      description: Returns a dictionary where the key represents the index of the triangle and the value represents the found collision points.
    content.vb: Public Function IntersectShape(shape As Polyline) As Dictionary(Of Integer, CollisionPoints)
  overload: ShapeEngine.Core.Shapes.Triangulation.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Segments)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Segments)
  id: IntersectShape(ShapeEngine.Core.Shapes.Segments)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: IntersectShape(Segments)
  nameWithType: Triangulation.IntersectShape(Segments)
  fullName: ShapeEngine.Core.Shapes.Triangulation.IntersectShape(ShapeEngine.Core.Shapes.Segments)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IntersectShape
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1080
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Find all triangles that intersect the specified shape.
  example: []
  syntax:
    content: public Dictionary<int, CollisionPoints>? IntersectShape(Segments shape)
    parameters:
    - id: shape
      type: ShapeEngine.Core.Shapes.Segments
      description: The shape to check the triangles against.
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,ShapeEngine.Core.CollisionSystem.CollisionPoints}
      description: Returns a dictionary where the key represents the index of the triangle and the value represents the found collision points.
    content.vb: Public Function IntersectShape(shape As Segments) As Dictionary(Of Integer, CollisionPoints)
  overload: ShapeEngine.Core.Shapes.Triangulation.IntersectShape*
- uid: ShapeEngine.Core.Shapes.Triangulation.GetUniquePoints
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetUniquePoints
  id: GetUniquePoints
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetUniquePoints()
  nameWithType: Triangulation.GetUniquePoints()
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetUniquePoints()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetUniquePoints
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1101
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Points GetUniquePoints()
    return:
      type: ShapeEngine.Core.Shapes.Points
    content.vb: Public Function GetUniquePoints() As Points
  overload: ShapeEngine.Core.Shapes.Triangulation.GetUniquePoints*
- uid: ShapeEngine.Core.Shapes.Triangulation.GetUniqueSegments
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetUniqueSegments
  id: GetUniqueSegments
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetUniqueSegments()
  nameWithType: Triangulation.GetUniqueSegments()
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetUniqueSegments()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetUniqueSegments
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1114
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Segments GetUniqueSegments()
    return:
      type: ShapeEngine.Core.Shapes.Segments
    content.vb: Public Function GetUniqueSegments() As Segments
  overload: ShapeEngine.Core.Shapes.Triangulation.GetUniqueSegments*
- uid: ShapeEngine.Core.Shapes.Triangulation.GetUniqueTriangles
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetUniqueTriangles
  id: GetUniqueTriangles
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetUniqueTriangles()
  nameWithType: Triangulation.GetUniqueTriangles()
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetUniqueTriangles()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetUniqueTriangles
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1127
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation GetUniqueTriangles()
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
    content.vb: Public Function GetUniqueTriangles() As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.GetUniqueTriangles*
- uid: ShapeEngine.Core.Shapes.Triangulation.GetContainingTriangles(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetContainingTriangles(System.Numerics.Vector2)
  id: GetContainingTriangles(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetContainingTriangles(Vector2)
  nameWithType: Triangulation.GetContainingTriangles(Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetContainingTriangles(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetContainingTriangles
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1138
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation GetContainingTriangles(Vector2 p)
    parameters:
    - id: p
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
    content.vb: Public Function GetContainingTriangles(p As Vector2) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.GetContainingTriangles*
- uid: ShapeEngine.Core.Shapes.Triangulation.GetSegment(System.Int32,System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetSegment(System.Int32,System.Int32)
  id: GetSegment(System.Int32,System.Int32)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetSegment(int, int)
  nameWithType: Triangulation.GetSegment(int, int)
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetSegment(int, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetSegment
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1149
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Segment GetSegment(int triangleIndex, int segmentIndex)
    parameters:
    - id: triangleIndex
      type: System.Int32
    - id: segmentIndex
      type: System.Int32
    return:
      type: ShapeEngine.Core.Shapes.Segment
    content.vb: Public Function GetSegment(triangleIndex As Integer, segmentIndex As Integer) As Segment
  overload: ShapeEngine.Core.Shapes.Triangulation.GetSegment*
  nameWithType.vb: Triangulation.GetSegment(Integer, Integer)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.GetSegment(Integer, Integer)
  name.vb: GetSegment(Integer, Integer)
- uid: ShapeEngine.Core.Shapes.Triangulation.GetArea
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.GetArea
  id: GetArea
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: GetArea()
  nameWithType: Triangulation.GetArea()
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetArea()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetArea
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1159
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Get the total area of all triangles in this triangulation.
  example: []
  syntax:
    content: public float GetArea()
    return:
      type: System.Single
      description: ''
    content.vb: Public Function GetArea() As Single
  overload: ShapeEngine.Core.Shapes.Triangulation.GetArea*
- uid: ShapeEngine.Core.Shapes.Triangulation.Remove(System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.Remove(System.Single)
  id: Remove(System.Single)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: Remove(float)
  nameWithType: Triangulation.Remove(float)
  fullName: ShapeEngine.Core.Shapes.Triangulation.Remove(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Remove
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1174
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Remove all triangles with an area less than the threshold. If threshold is smaller or equal to 0, nothing happens.
  example: []
  syntax:
    content: public int Remove(float areaThreshold)
    parameters:
    - id: areaThreshold
      type: System.Single
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function Remove(areaThreshold As Single) As Integer
  overload: ShapeEngine.Core.Shapes.Triangulation.Remove*
  nameWithType.vb: Triangulation.Remove(Single)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.Remove(Single)
  name.vb: Remove(Single)
- uid: ShapeEngine.Core.Shapes.Triangulation.ChangeRotation(System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ChangeRotation(System.Single)
  id: ChangeRotation(System.Single)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ChangeRotation(float)
  nameWithType: Triangulation.ChangeRotation(float)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ChangeRotation(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChangeRotation
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1192
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void ChangeRotation(float rad)
    parameters:
    - id: rad
      type: System.Single
    content.vb: Public Sub ChangeRotation(rad As Single)
  overload: ShapeEngine.Core.Shapes.Triangulation.ChangeRotation*
  nameWithType.vb: Triangulation.ChangeRotation(Single)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.ChangeRotation(Single)
  name.vb: ChangeRotation(Single)
- uid: ShapeEngine.Core.Shapes.Triangulation.ChangeRotation(System.Single,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ChangeRotation(System.Single,System.Numerics.Vector2)
  id: ChangeRotation(System.Single,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ChangeRotation(float, Vector2)
  nameWithType: Triangulation.ChangeRotation(float, Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ChangeRotation(float, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChangeRotation
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1199
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void ChangeRotation(float rad, Vector2 origin)
    parameters:
    - id: rad
      type: System.Single
    - id: origin
      type: System.Numerics.Vector2
    content.vb: Public Sub ChangeRotation(rad As Single, origin As Vector2)
  overload: ShapeEngine.Core.Shapes.Triangulation.ChangeRotation*
  nameWithType.vb: Triangulation.ChangeRotation(Single, Vector2)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.ChangeRotation(Single, System.Numerics.Vector2)
  name.vb: ChangeRotation(Single, Vector2)
- uid: ShapeEngine.Core.Shapes.Triangulation.SetRotation(System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.SetRotation(System.Single)
  id: SetRotation(System.Single)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: SetRotation(float)
  nameWithType: Triangulation.SetRotation(float)
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetRotation(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetRotation
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1207
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void SetRotation(float rad)
    parameters:
    - id: rad
      type: System.Single
    content.vb: Public Sub SetRotation(rad As Single)
  overload: ShapeEngine.Core.Shapes.Triangulation.SetRotation*
  nameWithType.vb: Triangulation.SetRotation(Single)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.SetRotation(Single)
  name.vb: SetRotation(Single)
- uid: ShapeEngine.Core.Shapes.Triangulation.SetRotation(System.Single,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.SetRotation(System.Single,System.Numerics.Vector2)
  id: SetRotation(System.Single,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: SetRotation(float, Vector2)
  nameWithType: Triangulation.SetRotation(float, Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetRotation(float, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetRotation
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1214
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void SetRotation(float rad, Vector2 origin)
    parameters:
    - id: rad
      type: System.Single
    - id: origin
      type: System.Numerics.Vector2
    content.vb: Public Sub SetRotation(rad As Single, origin As Vector2)
  overload: ShapeEngine.Core.Shapes.Triangulation.SetRotation*
  nameWithType.vb: Triangulation.SetRotation(Single, Vector2)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.SetRotation(Single, System.Numerics.Vector2)
  name.vb: SetRotation(Single, Vector2)
- uid: ShapeEngine.Core.Shapes.Triangulation.ScaleSize(System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ScaleSize(System.Single)
  id: ScaleSize(System.Single)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ScaleSize(float)
  nameWithType: Triangulation.ScaleSize(float)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ScaleSize(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ScaleSize
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1222
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void ScaleSize(float scale)
    parameters:
    - id: scale
      type: System.Single
    content.vb: Public Sub ScaleSize(scale As Single)
  overload: ShapeEngine.Core.Shapes.Triangulation.ScaleSize*
  nameWithType.vb: Triangulation.ScaleSize(Single)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.ScaleSize(Single)
  name.vb: ScaleSize(Single)
- uid: ShapeEngine.Core.Shapes.Triangulation.ScaleSize(ShapeEngine.Core.Structs.Size)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ScaleSize(ShapeEngine.Core.Structs.Size)
  id: ScaleSize(ShapeEngine.Core.Structs.Size)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ScaleSize(Size)
  nameWithType: Triangulation.ScaleSize(Size)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ScaleSize(ShapeEngine.Core.Structs.Size)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ScaleSize
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1229
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void ScaleSize(Size scale)
    parameters:
    - id: scale
      type: ShapeEngine.Core.Structs.Size
    content.vb: Public Sub ScaleSize(scale As Size)
  overload: ShapeEngine.Core.Shapes.Triangulation.ScaleSize*
- uid: ShapeEngine.Core.Shapes.Triangulation.ScaleSize(System.Single,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ScaleSize(System.Single,System.Numerics.Vector2)
  id: ScaleSize(System.Single,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ScaleSize(float, Vector2)
  nameWithType: Triangulation.ScaleSize(float, Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ScaleSize(float, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ScaleSize
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1236
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void ScaleSize(float scale, Vector2 origin)
    parameters:
    - id: scale
      type: System.Single
    - id: origin
      type: System.Numerics.Vector2
    content.vb: Public Sub ScaleSize(scale As Single, origin As Vector2)
  overload: ShapeEngine.Core.Shapes.Triangulation.ScaleSize*
  nameWithType.vb: Triangulation.ScaleSize(Single, Vector2)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.ScaleSize(Single, System.Numerics.Vector2)
  name.vb: ScaleSize(Single, Vector2)
- uid: ShapeEngine.Core.Shapes.Triangulation.ScaleSize(ShapeEngine.Core.Structs.Size,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ScaleSize(ShapeEngine.Core.Structs.Size,System.Numerics.Vector2)
  id: ScaleSize(ShapeEngine.Core.Structs.Size,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ScaleSize(Size, Vector2)
  nameWithType: Triangulation.ScaleSize(Size, Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ScaleSize(ShapeEngine.Core.Structs.Size, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ScaleSize
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1243
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void ScaleSize(Size scale, Vector2 origin)
    parameters:
    - id: scale
      type: ShapeEngine.Core.Structs.Size
    - id: origin
      type: System.Numerics.Vector2
    content.vb: Public Sub ScaleSize(scale As Size, origin As Vector2)
  overload: ShapeEngine.Core.Shapes.Triangulation.ScaleSize*
- uid: ShapeEngine.Core.Shapes.Triangulation.ChangeSize(System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ChangeSize(System.Single)
  id: ChangeSize(System.Single)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ChangeSize(float)
  nameWithType: Triangulation.ChangeSize(float)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ChangeSize(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChangeSize
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1251
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void ChangeSize(float amount)
    parameters:
    - id: amount
      type: System.Single
    content.vb: Public Sub ChangeSize(amount As Single)
  overload: ShapeEngine.Core.Shapes.Triangulation.ChangeSize*
  nameWithType.vb: Triangulation.ChangeSize(Single)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.ChangeSize(Single)
  name.vb: ChangeSize(Single)
- uid: ShapeEngine.Core.Shapes.Triangulation.ChangeSize(System.Single,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ChangeSize(System.Single,System.Numerics.Vector2)
  id: ChangeSize(System.Single,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ChangeSize(float, Vector2)
  nameWithType: Triangulation.ChangeSize(float, Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ChangeSize(float, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChangeSize
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1258
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void ChangeSize(float amount, Vector2 origin)
    parameters:
    - id: amount
      type: System.Single
    - id: origin
      type: System.Numerics.Vector2
    content.vb: Public Sub ChangeSize(amount As Single, origin As Vector2)
  overload: ShapeEngine.Core.Shapes.Triangulation.ChangeSize*
  nameWithType.vb: Triangulation.ChangeSize(Single, Vector2)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.ChangeSize(Single, System.Numerics.Vector2)
  name.vb: ChangeSize(Single, Vector2)
- uid: ShapeEngine.Core.Shapes.Triangulation.SetSize(System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.SetSize(System.Single)
  id: SetSize(System.Single)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: SetSize(float)
  nameWithType: Triangulation.SetSize(float)
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetSize(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetSize
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1266
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void SetSize(float size)
    parameters:
    - id: size
      type: System.Single
    content.vb: Public Sub SetSize(size As Single)
  overload: ShapeEngine.Core.Shapes.Triangulation.SetSize*
  nameWithType.vb: Triangulation.SetSize(Single)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.SetSize(Single)
  name.vb: SetSize(Single)
- uid: ShapeEngine.Core.Shapes.Triangulation.SetSize(System.Single,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.SetSize(System.Single,System.Numerics.Vector2)
  id: SetSize(System.Single,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: SetSize(float, Vector2)
  nameWithType: Triangulation.SetSize(float, Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetSize(float, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetSize
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1273
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void SetSize(float size, Vector2 origin)
    parameters:
    - id: size
      type: System.Single
    - id: origin
      type: System.Numerics.Vector2
    content.vb: Public Sub SetSize(size As Single, origin As Vector2)
  overload: ShapeEngine.Core.Shapes.Triangulation.SetSize*
  nameWithType.vb: Triangulation.SetSize(Single, Vector2)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.SetSize(Single, System.Numerics.Vector2)
  name.vb: SetSize(Single, Vector2)
- uid: ShapeEngine.Core.Shapes.Triangulation.ChangePosition(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ChangePosition(System.Numerics.Vector2)
  id: ChangePosition(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ChangePosition(Vector2)
  nameWithType: Triangulation.ChangePosition(Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ChangePosition(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChangePosition
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1281
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void ChangePosition(Vector2 offset)
    parameters:
    - id: offset
      type: System.Numerics.Vector2
    content.vb: Public Sub ChangePosition(offset As Vector2)
  overload: ShapeEngine.Core.Shapes.Triangulation.ChangePosition*
- uid: ShapeEngine.Core.Shapes.Triangulation.SetPosition(System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.SetPosition(System.Numerics.Vector2,System.Numerics.Vector2)
  id: SetPosition(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: SetPosition(Vector2, Vector2)
  nameWithType: Triangulation.SetPosition(Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetPosition(System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetPosition
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1288
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void SetPosition(Vector2 position, Vector2 origin)
    parameters:
    - id: position
      type: System.Numerics.Vector2
    - id: origin
      type: System.Numerics.Vector2
    content.vb: Public Sub SetPosition(position As Vector2, origin As Vector2)
  overload: ShapeEngine.Core.Shapes.Triangulation.SetPosition*
- uid: ShapeEngine.Core.Shapes.Triangulation.ApplyOffset(ShapeEngine.Core.Structs.Transform2D,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ApplyOffset(ShapeEngine.Core.Structs.Transform2D,System.Numerics.Vector2)
  id: ApplyOffset(ShapeEngine.Core.Structs.Transform2D,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ApplyOffset(Transform2D, Vector2)
  nameWithType: Triangulation.ApplyOffset(Transform2D, Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ApplyOffset(ShapeEngine.Core.Structs.Transform2D, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ApplyOffset
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1296
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void ApplyOffset(Transform2D offset, Vector2 origin)
    parameters:
    - id: offset
      type: ShapeEngine.Core.Structs.Transform2D
    - id: origin
      type: System.Numerics.Vector2
    content.vb: Public Sub ApplyOffset(offset As Transform2D, origin As Vector2)
  overload: ShapeEngine.Core.Shapes.Triangulation.ApplyOffset*
- uid: ShapeEngine.Core.Shapes.Triangulation.SetTransform(ShapeEngine.Core.Structs.Transform2D,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.SetTransform(ShapeEngine.Core.Structs.Transform2D,System.Numerics.Vector2)
  id: SetTransform(ShapeEngine.Core.Structs.Transform2D,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: SetTransform(Transform2D, Vector2)
  nameWithType: Triangulation.SetTransform(Transform2D, Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetTransform(ShapeEngine.Core.Structs.Transform2D, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetTransform
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1303
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public void SetTransform(Transform2D transform, Vector2 origin)
    parameters:
    - id: transform
      type: ShapeEngine.Core.Structs.Transform2D
    - id: origin
      type: System.Numerics.Vector2
    content.vb: Public Sub SetTransform(transform As Transform2D, origin As Vector2)
  overload: ShapeEngine.Core.Shapes.Triangulation.SetTransform*
- uid: ShapeEngine.Core.Shapes.Triangulation.ChangeRotationCopy(System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ChangeRotationCopy(System.Single)
  id: ChangeRotationCopy(System.Single)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ChangeRotationCopy(float)
  nameWithType: Triangulation.ChangeRotationCopy(float)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ChangeRotationCopy(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChangeRotationCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1311
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation ChangeRotationCopy(float rad)
    parameters:
    - id: rad
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
    content.vb: Public Function ChangeRotationCopy(rad As Single) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.ChangeRotationCopy*
  nameWithType.vb: Triangulation.ChangeRotationCopy(Single)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.ChangeRotationCopy(Single)
  name.vb: ChangeRotationCopy(Single)
- uid: ShapeEngine.Core.Shapes.Triangulation.ChangeRotationCopy(System.Single,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ChangeRotationCopy(System.Single,System.Numerics.Vector2)
  id: ChangeRotationCopy(System.Single,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ChangeRotationCopy(float, Vector2)
  nameWithType: Triangulation.ChangeRotationCopy(float, Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ChangeRotationCopy(float, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChangeRotationCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1321
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation ChangeRotationCopy(float rad, Vector2 origin)
    parameters:
    - id: rad
      type: System.Single
    - id: origin
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
    content.vb: Public Function ChangeRotationCopy(rad As Single, origin As Vector2) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.ChangeRotationCopy*
  nameWithType.vb: Triangulation.ChangeRotationCopy(Single, Vector2)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.ChangeRotationCopy(Single, System.Numerics.Vector2)
  name.vb: ChangeRotationCopy(Single, Vector2)
- uid: ShapeEngine.Core.Shapes.Triangulation.SetRotationCopy(System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.SetRotationCopy(System.Single)
  id: SetRotationCopy(System.Single)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: SetRotationCopy(float)
  nameWithType: Triangulation.SetRotationCopy(float)
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetRotationCopy(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetRotationCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1332
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation SetRotationCopy(float rad)
    parameters:
    - id: rad
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
    content.vb: Public Function SetRotationCopy(rad As Single) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.SetRotationCopy*
  nameWithType.vb: Triangulation.SetRotationCopy(Single)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.SetRotationCopy(Single)
  name.vb: SetRotationCopy(Single)
- uid: ShapeEngine.Core.Shapes.Triangulation.SetRotationCopy(System.Single,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.SetRotationCopy(System.Single,System.Numerics.Vector2)
  id: SetRotationCopy(System.Single,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: SetRotationCopy(float, Vector2)
  nameWithType: Triangulation.SetRotationCopy(float, Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetRotationCopy(float, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetRotationCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1341
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation SetRotationCopy(float rad, Vector2 origin)
    parameters:
    - id: rad
      type: System.Single
    - id: origin
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
    content.vb: Public Function SetRotationCopy(rad As Single, origin As Vector2) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.SetRotationCopy*
  nameWithType.vb: Triangulation.SetRotationCopy(Single, Vector2)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.SetRotationCopy(Single, System.Numerics.Vector2)
  name.vb: SetRotationCopy(Single, Vector2)
- uid: ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy(System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy(System.Single)
  id: ScaleSizeCopy(System.Single)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ScaleSizeCopy(float)
  nameWithType: Triangulation.ScaleSizeCopy(float)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ScaleSizeCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1352
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation ScaleSizeCopy(float scale)
    parameters:
    - id: scale
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
    content.vb: Public Function ScaleSizeCopy(scale As Single) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy*
  nameWithType.vb: Triangulation.ScaleSizeCopy(Single)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy(Single)
  name.vb: ScaleSizeCopy(Single)
- uid: ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy(ShapeEngine.Core.Structs.Size)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy(ShapeEngine.Core.Structs.Size)
  id: ScaleSizeCopy(ShapeEngine.Core.Structs.Size)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ScaleSizeCopy(Size)
  nameWithType: Triangulation.ScaleSizeCopy(Size)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy(ShapeEngine.Core.Structs.Size)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ScaleSizeCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1362
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation ScaleSizeCopy(Size scale)
    parameters:
    - id: scale
      type: ShapeEngine.Core.Structs.Size
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
    content.vb: Public Function ScaleSizeCopy(scale As Size) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy*
- uid: ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy(System.Single,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy(System.Single,System.Numerics.Vector2)
  id: ScaleSizeCopy(System.Single,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ScaleSizeCopy(float, Vector2)
  nameWithType: Triangulation.ScaleSizeCopy(float, Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy(float, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ScaleSizeCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1372
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation ScaleSizeCopy(float scale, Vector2 origin)
    parameters:
    - id: scale
      type: System.Single
    - id: origin
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
    content.vb: Public Function ScaleSizeCopy(scale As Single, origin As Vector2) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy*
  nameWithType.vb: Triangulation.ScaleSizeCopy(Single, Vector2)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy(Single, System.Numerics.Vector2)
  name.vb: ScaleSizeCopy(Single, Vector2)
- uid: ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy(ShapeEngine.Core.Structs.Size,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy(ShapeEngine.Core.Structs.Size,System.Numerics.Vector2)
  id: ScaleSizeCopy(ShapeEngine.Core.Structs.Size,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ScaleSizeCopy(Size, Vector2)
  nameWithType: Triangulation.ScaleSizeCopy(Size, Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy(ShapeEngine.Core.Structs.Size, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ScaleSizeCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1382
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation ScaleSizeCopy(Size scale, Vector2 origin)
    parameters:
    - id: scale
      type: ShapeEngine.Core.Structs.Size
    - id: origin
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
    content.vb: Public Function ScaleSizeCopy(scale As Size, origin As Vector2) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy*
- uid: ShapeEngine.Core.Shapes.Triangulation.ChangeSizeCopy(System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ChangeSizeCopy(System.Single)
  id: ChangeSizeCopy(System.Single)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ChangeSizeCopy(float)
  nameWithType: Triangulation.ChangeSizeCopy(float)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ChangeSizeCopy(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChangeSizeCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1393
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation ChangeSizeCopy(float amount)
    parameters:
    - id: amount
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
    content.vb: Public Function ChangeSizeCopy(amount As Single) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.ChangeSizeCopy*
  nameWithType.vb: Triangulation.ChangeSizeCopy(Single)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.ChangeSizeCopy(Single)
  name.vb: ChangeSizeCopy(Single)
- uid: ShapeEngine.Core.Shapes.Triangulation.ChangeSizeCopy(System.Single,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ChangeSizeCopy(System.Single,System.Numerics.Vector2)
  id: ChangeSizeCopy(System.Single,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ChangeSizeCopy(float, Vector2)
  nameWithType: Triangulation.ChangeSizeCopy(float, Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ChangeSizeCopy(float, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChangeSizeCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1403
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation ChangeSizeCopy(float amount, Vector2 origin)
    parameters:
    - id: amount
      type: System.Single
    - id: origin
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
    content.vb: Public Function ChangeSizeCopy(amount As Single, origin As Vector2) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.ChangeSizeCopy*
  nameWithType.vb: Triangulation.ChangeSizeCopy(Single, Vector2)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.ChangeSizeCopy(Single, System.Numerics.Vector2)
  name.vb: ChangeSizeCopy(Single, Vector2)
- uid: ShapeEngine.Core.Shapes.Triangulation.SetSizeCopy(System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.SetSizeCopy(System.Single)
  id: SetSizeCopy(System.Single)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: SetSizeCopy(float)
  nameWithType: Triangulation.SetSizeCopy(float)
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetSizeCopy(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetSizeCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1414
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation SetSizeCopy(float size)
    parameters:
    - id: size
      type: System.Single
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
    content.vb: Public Function SetSizeCopy(size As Single) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.SetSizeCopy*
  nameWithType.vb: Triangulation.SetSizeCopy(Single)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.SetSizeCopy(Single)
  name.vb: SetSizeCopy(Single)
- uid: ShapeEngine.Core.Shapes.Triangulation.SetSizeCopy(System.Single,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.SetSizeCopy(System.Single,System.Numerics.Vector2)
  id: SetSizeCopy(System.Single,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: SetSizeCopy(float, Vector2)
  nameWithType: Triangulation.SetSizeCopy(float, Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetSizeCopy(float, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetSizeCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1424
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation SetSizeCopy(float size, Vector2 origin)
    parameters:
    - id: size
      type: System.Single
    - id: origin
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
    content.vb: Public Function SetSizeCopy(size As Single, origin As Vector2) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.SetSizeCopy*
  nameWithType.vb: Triangulation.SetSizeCopy(Single, Vector2)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.SetSizeCopy(Single, System.Numerics.Vector2)
  name.vb: SetSizeCopy(Single, Vector2)
- uid: ShapeEngine.Core.Shapes.Triangulation.ChangePositionCopy(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ChangePositionCopy(System.Numerics.Vector2)
  id: ChangePositionCopy(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ChangePositionCopy(Vector2)
  nameWithType: Triangulation.ChangePositionCopy(Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ChangePositionCopy(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ChangePositionCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1435
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation ChangePositionCopy(Vector2 offset)
    parameters:
    - id: offset
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
    content.vb: Public Function ChangePositionCopy(offset As Vector2) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.ChangePositionCopy*
- uid: ShapeEngine.Core.Shapes.Triangulation.SetPositionCopy(System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.SetPositionCopy(System.Numerics.Vector2,System.Numerics.Vector2)
  id: SetPositionCopy(System.Numerics.Vector2,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: SetPositionCopy(Vector2, Vector2)
  nameWithType: Triangulation.SetPositionCopy(Vector2, Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetPositionCopy(System.Numerics.Vector2, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetPositionCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1445
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation SetPositionCopy(Vector2 position, Vector2 origin)
    parameters:
    - id: position
      type: System.Numerics.Vector2
    - id: origin
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
    content.vb: Public Function SetPositionCopy(position As Vector2, origin As Vector2) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.SetPositionCopy*
- uid: ShapeEngine.Core.Shapes.Triangulation.ApplyOffsetCopy(ShapeEngine.Core.Structs.Transform2D,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.ApplyOffsetCopy(ShapeEngine.Core.Structs.Transform2D,System.Numerics.Vector2)
  id: ApplyOffsetCopy(ShapeEngine.Core.Structs.Transform2D,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: ApplyOffsetCopy(Transform2D, Vector2)
  nameWithType: Triangulation.ApplyOffsetCopy(Transform2D, Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.ApplyOffsetCopy(ShapeEngine.Core.Structs.Transform2D, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: ApplyOffsetCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1456
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation ApplyOffsetCopy(Transform2D offset, Vector2 origin)
    parameters:
    - id: offset
      type: ShapeEngine.Core.Structs.Transform2D
    - id: origin
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
    content.vb: Public Function ApplyOffsetCopy(offset As Transform2D, origin As Vector2) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.ApplyOffsetCopy*
- uid: ShapeEngine.Core.Shapes.Triangulation.SetTransformCopy(ShapeEngine.Core.Structs.Transform2D,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.SetTransformCopy(ShapeEngine.Core.Structs.Transform2D,System.Numerics.Vector2)
  id: SetTransformCopy(ShapeEngine.Core.Structs.Transform2D,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: SetTransformCopy(Transform2D, Vector2)
  nameWithType: Triangulation.SetTransformCopy(Transform2D, Vector2)
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetTransformCopy(ShapeEngine.Core.Structs.Transform2D, System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetTransformCopy
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1466
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  syntax:
    content: public Triangulation SetTransformCopy(Transform2D transform, Vector2 origin)
    parameters:
    - id: transform
      type: ShapeEngine.Core.Structs.Transform2D
    - id: origin
      type: System.Numerics.Vector2
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
    content.vb: Public Function SetTransformCopy(transform As Transform2D, origin As Vector2) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.SetTransformCopy*
- uid: ShapeEngine.Core.Shapes.Triangulation.Get(System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.Get(System.Single)
  id: Get(System.Single)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: Get(float)
  nameWithType: Triangulation.Get(float)
  fullName: ShapeEngine.Core.Shapes.Triangulation.Get(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Get
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1485
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Get a new triangulation with triangles with an area &gt;= areaThreshold.
  example: []
  syntax:
    content: public Triangulation Get(float areaThreshold)
    parameters:
    - id: areaThreshold
      type: System.Single
      description: ''
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
      description: ''
    content.vb: Public Function [Get](areaThreshold As Single) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.Get*
  nameWithType.vb: Triangulation.Get(Single)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.Get(Single)
  name.vb: Get(Single)
- uid: ShapeEngine.Core.Shapes.Triangulation.Subdivide(System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.Subdivide(System.Single)
  id: Subdivide(System.Single)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: Subdivide(float)
  nameWithType: Triangulation.Subdivide(float)
  fullName: ShapeEngine.Core.Shapes.Triangulation.Subdivide(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Subdivide
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1507
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Subdivide the triangulation until all triangles are smaller than min area.
  example: []
  syntax:
    content: public Triangulation Subdivide(float minArea)
    parameters:
    - id: minArea
      type: System.Single
      description: A triangle will always be subdivided if the area is bigger than min area.s
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
      description: ''
    content.vb: Public Function Subdivide(minArea As Single) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.Subdivide*
  nameWithType.vb: Triangulation.Subdivide(Single)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.Subdivide(Single)
  name.vb: Subdivide(Single)
- uid: ShapeEngine.Core.Shapes.Triangulation.Subdivide(System.Single,System.Single,System.Single,System.Single)
  commentId: M:ShapeEngine.Core.Shapes.Triangulation.Subdivide(System.Single,System.Single,System.Single,System.Single)
  id: Subdivide(System.Single,System.Single,System.Single,System.Single)
  parent: ShapeEngine.Core.Shapes.Triangulation
  langs:
  - csharp
  - vb
  name: Subdivide(float, float, float, float)
  nameWithType: Triangulation.Subdivide(float, float, float, float)
  fullName: ShapeEngine.Core.Shapes.Triangulation.Subdivide(float, float, float, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Shapes/Triangulation.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Subdivide
    path: ../ShapeEngine/ShapeEngine/Core/Shapes/Triangulation.cs
    startLine: 1534
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Shapes
  summary: Subdivide the triangles further based on the parameters.
  example: []
  syntax:
    content: public Triangulation Subdivide(float minArea, float maxArea, float keepChance = 0.5, float narrowValue = 0.2)
    parameters:
    - id: minArea
      type: System.Single
      description: Triangles with an area smaller than min area will never be subdivided.
    - id: maxArea
      type: System.Single
      description: Triangles with an area bigger than maxArea will always be subdivided.
    - id: keepChance
      type: System.Single
      description: The chance to keep a triangle and not subdivide it.
    - id: narrowValue
      type: System.Single
      description: Triangles that are considered narrow will not be subdivided.
    return:
      type: ShapeEngine.Core.Shapes.Triangulation
      description: ''
    content.vb: Public Function Subdivide(minArea As Single, maxArea As Single, keepChance As Single = 0.5, narrowValue As Single = 0.2) As Triangulation
  overload: ShapeEngine.Core.Shapes.Triangulation.Subdivide*
  nameWithType.vb: Triangulation.Subdivide(Single, Single, Single, Single)
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.Subdivide(Single, Single, Single, Single)
  name.vb: Subdivide(Single, Single, Single, Single)
references:
- uid: ShapeEngine.Core.Shapes
  commentId: N:ShapeEngine.Core.Shapes
  href: ShapeEngine.html
  name: ShapeEngine.Core.Shapes
  nameWithType: ShapeEngine.Core.Shapes
  fullName: ShapeEngine.Core.Shapes
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Shapes
    name: Shapes
    href: ShapeEngine.Core.Shapes.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Shapes
    name: Shapes
    href: ShapeEngine.Core.Shapes.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  commentId: T:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Triangle>
  nameWithType: List<Triangle>
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>
  nameWithType.vb: List(Of Triangle)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle)
  name.vb: List(Of Triangle)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}
  commentId: T:ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}
  parent: ShapeEngine.Core.Shapes
  definition: ShapeEngine.Core.Shapes.ShapeList`1
  href: ShapeEngine.Core.Shapes.ShapeList-1.html
  name: ShapeList<Triangle>
  nameWithType: ShapeList<Triangle>
  fullName: ShapeEngine.Core.Shapes.ShapeList<ShapeEngine.Core.Shapes.Triangle>
  nameWithType.vb: ShapeList(Of Triangle)
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of ShapeEngine.Core.Shapes.Triangle)
  name.vb: ShapeList(Of Triangle)
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1
    name: ShapeList
    href: ShapeEngine.Core.Shapes.ShapeList-1.html
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1
    name: ShapeList
    href: ShapeEngine.Core.Shapes.ShapeList-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
- uid: System.Collections.Generic.IList{ShapeEngine.Core.Shapes.Triangle}
  commentId: T:System.Collections.Generic.IList{ShapeEngine.Core.Shapes.Triangle}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<Triangle>
  nameWithType: IList<Triangle>
  fullName: System.Collections.Generic.IList<ShapeEngine.Core.Shapes.Triangle>
  nameWithType.vb: IList(Of Triangle)
  fullName.vb: System.Collections.Generic.IList(Of ShapeEngine.Core.Shapes.Triangle)
  name.vb: IList(Of Triangle)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
- uid: System.Collections.Generic.ICollection{ShapeEngine.Core.Shapes.Triangle}
  commentId: T:System.Collections.Generic.ICollection{ShapeEngine.Core.Shapes.Triangle}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<Triangle>
  nameWithType: ICollection<Triangle>
  fullName: System.Collections.Generic.ICollection<ShapeEngine.Core.Shapes.Triangle>
  nameWithType.vb: ICollection(Of Triangle)
  fullName.vb: System.Collections.Generic.ICollection(Of ShapeEngine.Core.Shapes.Triangle)
  name.vb: ICollection(Of Triangle)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyList{ShapeEngine.Core.Shapes.Triangle}
  commentId: T:System.Collections.Generic.IReadOnlyList{ShapeEngine.Core.Shapes.Triangle}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<Triangle>
  nameWithType: IReadOnlyList<Triangle>
  fullName: System.Collections.Generic.IReadOnlyList<ShapeEngine.Core.Shapes.Triangle>
  nameWithType.vb: IReadOnlyList(Of Triangle)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of ShapeEngine.Core.Shapes.Triangle)
  name.vb: IReadOnlyList(Of Triangle)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection{ShapeEngine.Core.Shapes.Triangle}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{ShapeEngine.Core.Shapes.Triangle}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<Triangle>
  nameWithType: IReadOnlyCollection<Triangle>
  fullName: System.Collections.Generic.IReadOnlyCollection<ShapeEngine.Core.Shapes.Triangle>
  nameWithType.vb: IReadOnlyCollection(Of Triangle)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of ShapeEngine.Core.Shapes.Triangle)
  name.vb: IReadOnlyCollection(Of Triangle)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
- uid: System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Triangle}
  commentId: T:System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Triangle}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Triangle>
  nameWithType: IEnumerable<Triangle>
  fullName: System.Collections.Generic.IEnumerable<ShapeEngine.Core.Shapes.Triangle>
  nameWithType.vb: IEnumerable(Of Triangle)
  fullName.vb: System.Collections.Generic.IEnumerable(Of ShapeEngine.Core.Shapes.Triangle)
  name.vb: IEnumerable(Of Triangle)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.icollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.AddRange(ShapeEngine.Core.Shapes.Triangle[])
  commentId: M:ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.AddRange(ShapeEngine.Core.Shapes.Triangle[])
  parent: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}
  definition: ShapeEngine.Core.Shapes.ShapeList`1.AddRange(`0[])
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_AddRange__0___
  name: AddRange(params Triangle[])
  nameWithType: ShapeList<Triangle>.AddRange(params Triangle[])
  fullName: ShapeEngine.Core.Shapes.ShapeList<ShapeEngine.Core.Shapes.Triangle>.AddRange(params ShapeEngine.Core.Shapes.Triangle[])
  nameWithType.vb: ShapeList(Of Triangle).AddRange(ParamArray Triangle())
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of ShapeEngine.Core.Shapes.Triangle).AddRange(ParamArray ShapeEngine.Core.Shapes.Triangle())
  name.vb: AddRange(ParamArray Triangle())
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.AddRange(ShapeEngine.Core.Shapes.Triangle[])
    name: AddRange
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_AddRange__0___
  - name: (
  - name: params
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.AddRange(ShapeEngine.Core.Shapes.Triangle[])
    name: AddRange
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_AddRange__0___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: (
  - name: )
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.Copy
  commentId: M:ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.Copy
  parent: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}
  definition: ShapeEngine.Core.Shapes.ShapeList`1.Copy
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_Copy
  name: Copy()
  nameWithType: ShapeList<Triangle>.Copy()
  fullName: ShapeEngine.Core.Shapes.ShapeList<ShapeEngine.Core.Shapes.Triangle>.Copy()
  nameWithType.vb: ShapeList(Of Triangle).Copy()
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of ShapeEngine.Core.Shapes.Triangle).Copy()
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.Copy
    name: Copy
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_Copy
  - name: (
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.Copy
    name: Copy
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_Copy
  - name: (
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.IsIndexValid(System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.IsIndexValid(System.Int32)
  parent: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}
  definition: ShapeEngine.Core.Shapes.ShapeList`1.IsIndexValid(System.Int32)
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_IsIndexValid_System_Int32_
  name: IsIndexValid(int)
  nameWithType: ShapeList<Triangle>.IsIndexValid(int)
  fullName: ShapeEngine.Core.Shapes.ShapeList<ShapeEngine.Core.Shapes.Triangle>.IsIndexValid(int)
  nameWithType.vb: ShapeList(Of Triangle).IsIndexValid(Integer)
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of ShapeEngine.Core.Shapes.Triangle).IsIndexValid(Integer)
  name.vb: IsIndexValid(Integer)
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.IsIndexValid(System.Int32)
    name: IsIndexValid
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_IsIndexValid_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.IsIndexValid(System.Int32)
    name: IsIndexValid
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_IsIndexValid_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetRandomItem
  commentId: M:ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetRandomItem
  parent: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}
  definition: ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItem
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItem
  name: GetRandomItem()
  nameWithType: ShapeList<Triangle>.GetRandomItem()
  fullName: ShapeEngine.Core.Shapes.ShapeList<ShapeEngine.Core.Shapes.Triangle>.GetRandomItem()
  nameWithType.vb: ShapeList(Of Triangle).GetRandomItem()
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of ShapeEngine.Core.Shapes.Triangle).GetRandomItem()
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetRandomItem
    name: GetRandomItem
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItem
  - name: (
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetRandomItem
    name: GetRandomItem
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItem
  - name: (
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetRandomItems(System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetRandomItems(System.Int32)
  parent: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}
  definition: ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItems(System.Int32)
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItems_System_Int32_
  name: GetRandomItems(int)
  nameWithType: ShapeList<Triangle>.GetRandomItems(int)
  fullName: ShapeEngine.Core.Shapes.ShapeList<ShapeEngine.Core.Shapes.Triangle>.GetRandomItems(int)
  nameWithType.vb: ShapeList(Of Triangle).GetRandomItems(Integer)
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of ShapeEngine.Core.Shapes.Triangle).GetRandomItems(Integer)
  name.vb: GetRandomItems(Integer)
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetRandomItems(System.Int32)
    name: GetRandomItems
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItems_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetRandomItems(System.Int32)
    name: GetRandomItems
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItems_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetItem(System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetItem(System.Int32)
  parent: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}
  definition: ShapeEngine.Core.Shapes.ShapeList`1.GetItem(System.Int32)
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetItem_System_Int32_
  name: GetItem(int)
  nameWithType: ShapeList<Triangle>.GetItem(int)
  fullName: ShapeEngine.Core.Shapes.ShapeList<ShapeEngine.Core.Shapes.Triangle>.GetItem(int)
  nameWithType.vb: ShapeList(Of Triangle).GetItem(Integer)
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of ShapeEngine.Core.Shapes.Triangle).GetItem(Integer)
  name.vb: GetItem(Integer)
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetItem(System.Int32)
    name: GetItem
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetItem_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetItem(System.Int32)
    name: GetItem
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetItem_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Add(ShapeEngine.Core.Shapes.Triangle)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Add(ShapeEngine.Core.Shapes.Triangle)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.Add(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.add
  name: Add(Triangle)
  nameWithType: List<Triangle>.Add(Triangle)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.Add(ShapeEngine.Core.Shapes.Triangle)
  nameWithType.vb: List(Of Triangle).Add(Triangle)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).Add(ShapeEngine.Core.Shapes.Triangle)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Add(ShapeEngine.Core.Shapes.Triangle)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.add
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Add(ShapeEngine.Core.Shapes.Triangle)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.add
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.AddRange(System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.AddRange(System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.addrange
  name: AddRange(IEnumerable<Triangle>)
  nameWithType: List<Triangle>.AddRange(IEnumerable<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.AddRange(System.Collections.Generic.IEnumerable<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).AddRange(IEnumerable(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).AddRange(System.Collections.Generic.IEnumerable(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: AddRange(IEnumerable(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.AddRange(System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Triangle})
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.addrange
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.AddRange(System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Triangle})
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.addrange
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.AsReadOnly
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.AsReadOnly
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.AsReadOnly
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.asreadonly
  name: AsReadOnly()
  nameWithType: List<Triangle>.AsReadOnly()
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.AsReadOnly()
  nameWithType.vb: List(Of Triangle).AsReadOnly()
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).AsReadOnly()
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.AsReadOnly
    name: AsReadOnly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.asreadonly
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.AsReadOnly
    name: AsReadOnly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.asreadonly
  - name: (
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.BinarySearch(System.Int32,System.Int32,ShapeEngine.Core.Shapes.Triangle,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.BinarySearch(System.Int32,System.Int32,ShapeEngine.Core.Shapes.Triangle,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(system-int32-system-int32-0-system-collections-generic-icomparer((-0)))
  name: BinarySearch(int, int, Triangle, IComparer<Triangle>)
  nameWithType: List<Triangle>.BinarySearch(int, int, Triangle, IComparer<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.BinarySearch(int, int, ShapeEngine.Core.Shapes.Triangle, System.Collections.Generic.IComparer<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).BinarySearch(Integer, Integer, Triangle, IComparer(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).BinarySearch(Integer, Integer, ShapeEngine.Core.Shapes.Triangle, System.Collections.Generic.IComparer(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: BinarySearch(Integer, Integer, Triangle, IComparer(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.BinarySearch(System.Int32,System.Int32,ShapeEngine.Core.Shapes.Triangle,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(system-int32-system-int32-0-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.BinarySearch(System.Int32,System.Int32,ShapeEngine.Core.Shapes.Triangle,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(system-int32-system-int32-0-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.BinarySearch(ShapeEngine.Core.Shapes.Triangle)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.BinarySearch(ShapeEngine.Core.Shapes.Triangle)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.BinarySearch(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0)
  name: BinarySearch(Triangle)
  nameWithType: List<Triangle>.BinarySearch(Triangle)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.BinarySearch(ShapeEngine.Core.Shapes.Triangle)
  nameWithType.vb: List(Of Triangle).BinarySearch(Triangle)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).BinarySearch(ShapeEngine.Core.Shapes.Triangle)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.BinarySearch(ShapeEngine.Core.Shapes.Triangle)
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.BinarySearch(ShapeEngine.Core.Shapes.Triangle)
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.BinarySearch(ShapeEngine.Core.Shapes.Triangle,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.BinarySearch(ShapeEngine.Core.Shapes.Triangle,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0-system-collections-generic-icomparer((-0)))
  name: BinarySearch(Triangle, IComparer<Triangle>)
  nameWithType: List<Triangle>.BinarySearch(Triangle, IComparer<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.BinarySearch(ShapeEngine.Core.Shapes.Triangle, System.Collections.Generic.IComparer<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).BinarySearch(Triangle, IComparer(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).BinarySearch(ShapeEngine.Core.Shapes.Triangle, System.Collections.Generic.IComparer(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: BinarySearch(Triangle, IComparer(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.BinarySearch(ShapeEngine.Core.Shapes.Triangle,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.BinarySearch(ShapeEngine.Core.Shapes.Triangle,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Clear
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Clear
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.clear
  name: Clear()
  nameWithType: List<Triangle>.Clear()
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.Clear()
  nameWithType.vb: List(Of Triangle).Clear()
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Contains(ShapeEngine.Core.Shapes.Triangle)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Contains(ShapeEngine.Core.Shapes.Triangle)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.Contains(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.contains
  name: Contains(Triangle)
  nameWithType: List<Triangle>.Contains(Triangle)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.Contains(ShapeEngine.Core.Shapes.Triangle)
  nameWithType.vb: List(Of Triangle).Contains(Triangle)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).Contains(ShapeEngine.Core.Shapes.Triangle)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Contains(ShapeEngine.Core.Shapes.Triangle)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.contains
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Contains(ShapeEngine.Core.Shapes.Triangle)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.contains
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.ConvertAll``1(System.Converter{ShapeEngine.Core.Shapes.Triangle,{TOutput}})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.ConvertAll``1(System.Converter{ShapeEngine.Core.Shapes.Triangle,``0})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.convertall
  name: ConvertAll<TOutput>(Converter<Triangle, TOutput>)
  nameWithType: List<Triangle>.ConvertAll<TOutput>(Converter<Triangle, TOutput>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.ConvertAll<TOutput>(System.Converter<ShapeEngine.Core.Shapes.Triangle, TOutput>)
  nameWithType.vb: List(Of Triangle).ConvertAll(Of TOutput)(Converter(Of Triangle, TOutput))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).ConvertAll(Of TOutput)(System.Converter(Of ShapeEngine.Core.Shapes.Triangle, TOutput))
  name.vb: ConvertAll(Of TOutput)(Converter(Of Triangle, TOutput))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.ConvertAll``1(System.Converter{ShapeEngine.Core.Shapes.Triangle,``0})
    name: ConvertAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.convertall
  - name: <
  - name: TOutput
  - name: '>'
  - name: (
  - uid: System.Converter`2
    name: Converter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.converter-2
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: ','
  - name: " "
  - name: TOutput
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.ConvertAll``1(System.Converter{ShapeEngine.Core.Shapes.Triangle,``0})
    name: ConvertAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.convertall
  - name: (
  - name: Of
  - name: " "
  - name: TOutput
  - name: )
  - name: (
  - uid: System.Converter`2
    name: Converter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.converter-2
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: ','
  - name: " "
  - name: TOutput
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.CopyTo(System.Int32,ShapeEngine.Core.Shapes.Triangle[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.CopyTo(System.Int32,ShapeEngine.Core.Shapes.Triangle[],System.Int32,System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(system-int32-0()-system-int32-system-int32)
  name: CopyTo(int, Triangle[], int, int)
  nameWithType: List<Triangle>.CopyTo(int, Triangle[], int, int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.CopyTo(int, ShapeEngine.Core.Shapes.Triangle[], int, int)
  nameWithType.vb: List(Of Triangle).CopyTo(Integer, Triangle(), Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).CopyTo(Integer, ShapeEngine.Core.Shapes.Triangle(), Integer, Integer)
  name.vb: CopyTo(Integer, Triangle(), Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.CopyTo(System.Int32,ShapeEngine.Core.Shapes.Triangle[],System.Int32,System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(system-int32-0()-system-int32-system-int32)
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.CopyTo(System.Int32,ShapeEngine.Core.Shapes.Triangle[],System.Int32,System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(system-int32-0()-system-int32-system-int32)
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.CopyTo(ShapeEngine.Core.Shapes.Triangle[])
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.CopyTo(ShapeEngine.Core.Shapes.Triangle[])
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.CopyTo(`0[])
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0())
  name: CopyTo(Triangle[])
  nameWithType: List<Triangle>.CopyTo(Triangle[])
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.CopyTo(ShapeEngine.Core.Shapes.Triangle[])
  nameWithType.vb: List(Of Triangle).CopyTo(Triangle())
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).CopyTo(ShapeEngine.Core.Shapes.Triangle())
  name.vb: CopyTo(Triangle())
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.CopyTo(ShapeEngine.Core.Shapes.Triangle[])
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0())
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.CopyTo(ShapeEngine.Core.Shapes.Triangle[])
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0())
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: (
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.CopyTo(ShapeEngine.Core.Shapes.Triangle[],System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.CopyTo(ShapeEngine.Core.Shapes.Triangle[],System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0()-system-int32)
  name: CopyTo(Triangle[], int)
  nameWithType: List<Triangle>.CopyTo(Triangle[], int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.CopyTo(ShapeEngine.Core.Shapes.Triangle[], int)
  nameWithType.vb: List(Of Triangle).CopyTo(Triangle(), Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).CopyTo(ShapeEngine.Core.Shapes.Triangle(), Integer)
  name.vb: CopyTo(Triangle(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.CopyTo(ShapeEngine.Core.Shapes.Triangle[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0()-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.CopyTo(ShapeEngine.Core.Shapes.Triangle[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0()-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.EnsureCapacity(System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.EnsureCapacity(System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.EnsureCapacity(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.ensurecapacity
  name: EnsureCapacity(int)
  nameWithType: List<Triangle>.EnsureCapacity(int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.EnsureCapacity(int)
  nameWithType.vb: List(Of Triangle).EnsureCapacity(Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).EnsureCapacity(Integer)
  name.vb: EnsureCapacity(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.ensurecapacity
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.ensurecapacity
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Exists(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Exists(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.exists
  name: Exists(Predicate<Triangle>)
  nameWithType: List<Triangle>.Exists(Predicate<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.Exists(System.Predicate<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).Exists(Predicate(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).Exists(System.Predicate(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: Exists(Predicate(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Exists(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: Exists
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.exists
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Exists(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: Exists
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.exists
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Find(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Find(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.Find(System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.find
  name: Find(Predicate<Triangle>)
  nameWithType: List<Triangle>.Find(Predicate<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.Find(System.Predicate<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).Find(Predicate(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).Find(System.Predicate(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: Find(Predicate(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Find(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: Find
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.find
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Find(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: Find
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.find
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindAll(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindAll(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findall
  name: FindAll(Predicate<Triangle>)
  nameWithType: List<Triangle>.FindAll(Predicate<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.FindAll(System.Predicate<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).FindAll(Predicate(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).FindAll(System.Predicate(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: FindAll(Predicate(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindAll(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: FindAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindAll(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: FindAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-int32-system-predicate((-0)))
  name: FindIndex(int, int, Predicate<Triangle>)
  nameWithType: List<Triangle>.FindIndex(int, int, Predicate<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.FindIndex(int, int, System.Predicate<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).FindIndex(Integer, Integer, Predicate(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).FindIndex(Integer, Integer, System.Predicate(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: FindIndex(Integer, Integer, Predicate(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-predicate((-0)))
  name: FindIndex(int, Predicate<Triangle>)
  nameWithType: List<Triangle>.FindIndex(int, Predicate<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.FindIndex(int, System.Predicate<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).FindIndex(Integer, Predicate(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).FindIndex(Integer, System.Predicate(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: FindIndex(Integer, Predicate(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindIndex(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindIndex(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-predicate((-0)))
  name: FindIndex(Predicate<Triangle>)
  nameWithType: List<Triangle>.FindIndex(Predicate<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.FindIndex(System.Predicate<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).FindIndex(Predicate(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).FindIndex(System.Predicate(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: FindIndex(Predicate(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindIndex(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-predicate((-0)))
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindIndex(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-predicate((-0)))
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLast(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLast(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlast
  name: FindLast(Predicate<Triangle>)
  nameWithType: List<Triangle>.FindLast(Predicate<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.FindLast(System.Predicate<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).FindLast(Predicate(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).FindLast(System.Predicate(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: FindLast(Predicate(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLast(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: FindLast
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlast
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLast(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: FindLast
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlast
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLastIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLastIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-int32-system-predicate((-0)))
  name: FindLastIndex(int, int, Predicate<Triangle>)
  nameWithType: List<Triangle>.FindLastIndex(int, int, Predicate<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.FindLastIndex(int, int, System.Predicate<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).FindLastIndex(Integer, Integer, Predicate(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).FindLastIndex(Integer, Integer, System.Predicate(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: FindLastIndex(Integer, Integer, Predicate(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLastIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLastIndex(System.Int32,System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLastIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLastIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-predicate((-0)))
  name: FindLastIndex(int, Predicate<Triangle>)
  nameWithType: List<Triangle>.FindLastIndex(int, Predicate<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.FindLastIndex(int, System.Predicate<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).FindLastIndex(Integer, Predicate(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).FindLastIndex(Integer, System.Predicate(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: FindLastIndex(Integer, Predicate(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLastIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLastIndex(System.Int32,System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLastIndex(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLastIndex(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-predicate((-0)))
  name: FindLastIndex(Predicate<Triangle>)
  nameWithType: List<Triangle>.FindLastIndex(Predicate<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.FindLastIndex(System.Predicate<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).FindLastIndex(Predicate(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).FindLastIndex(System.Predicate(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: FindLastIndex(Predicate(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLastIndex(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-predicate((-0)))
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.FindLastIndex(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-predicate((-0)))
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.ForEach(System.Action{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.ForEach(System.Action{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.ForEach(System.Action{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.foreach
  name: ForEach(Action<Triangle>)
  nameWithType: List<Triangle>.ForEach(Action<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.ForEach(System.Action<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).ForEach(Action(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).ForEach(System.Action(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: ForEach(Action(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.ForEach(System.Action{ShapeEngine.Core.Shapes.Triangle})
    name: ForEach
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.foreach
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.ForEach(System.Action{ShapeEngine.Core.Shapes.Triangle})
    name: ForEach
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.foreach
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.GetEnumerator
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.GetEnumerator
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getenumerator
  name: GetEnumerator()
  nameWithType: List<Triangle>.GetEnumerator()
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.GetEnumerator()
  nameWithType.vb: List(Of Triangle).GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.GetRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getrange
  name: GetRange(int, int)
  nameWithType: List<Triangle>.GetRange(int, int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.GetRange(int, int)
  nameWithType.vb: List(Of Triangle).GetRange(Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).GetRange(Integer, Integer)
  name.vb: GetRange(Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.GetRange(System.Int32,System.Int32)
    name: GetRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getrange
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.GetRange(System.Int32,System.Int32)
    name: GetRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getrange
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.IndexOf(ShapeEngine.Core.Shapes.Triangle)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.IndexOf(ShapeEngine.Core.Shapes.Triangle)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.IndexOf(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0)
  name: IndexOf(Triangle)
  nameWithType: List<Triangle>.IndexOf(Triangle)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.IndexOf(ShapeEngine.Core.Shapes.Triangle)
  nameWithType.vb: List(Of Triangle).IndexOf(Triangle)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).IndexOf(ShapeEngine.Core.Shapes.Triangle)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.IndexOf(ShapeEngine.Core.Shapes.Triangle)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.IndexOf(ShapeEngine.Core.Shapes.Triangle)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.IndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.IndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32)
  name: IndexOf(Triangle, int)
  nameWithType: List<Triangle>.IndexOf(Triangle, int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.IndexOf(ShapeEngine.Core.Shapes.Triangle, int)
  nameWithType.vb: List(Of Triangle).IndexOf(Triangle, Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).IndexOf(ShapeEngine.Core.Shapes.Triangle, Integer)
  name.vb: IndexOf(Triangle, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.IndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.IndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.IndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.IndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32,System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32-system-int32)
  name: IndexOf(Triangle, int, int)
  nameWithType: List<Triangle>.IndexOf(Triangle, int, int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.IndexOf(ShapeEngine.Core.Shapes.Triangle, int, int)
  nameWithType.vb: List(Of Triangle).IndexOf(Triangle, Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).IndexOf(ShapeEngine.Core.Shapes.Triangle, Integer, Integer)
  name.vb: IndexOf(Triangle, Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.IndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32,System.Int32)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.IndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32,System.Int32)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Insert(System.Int32,ShapeEngine.Core.Shapes.Triangle)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Insert(System.Int32,ShapeEngine.Core.Shapes.Triangle)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.Insert(System.Int32,`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insert
  name: Insert(int, Triangle)
  nameWithType: List<Triangle>.Insert(int, Triangle)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.Insert(int, ShapeEngine.Core.Shapes.Triangle)
  nameWithType.vb: List(Of Triangle).Insert(Integer, Triangle)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).Insert(Integer, ShapeEngine.Core.Shapes.Triangle)
  name.vb: Insert(Integer, Triangle)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Insert(System.Int32,ShapeEngine.Core.Shapes.Triangle)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Insert(System.Int32,ShapeEngine.Core.Shapes.Triangle)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insertrange
  name: InsertRange(int, IEnumerable<Triangle>)
  nameWithType: List<Triangle>.InsertRange(int, IEnumerable<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.InsertRange(int, System.Collections.Generic.IEnumerable<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).InsertRange(Integer, IEnumerable(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).InsertRange(Integer, System.Collections.Generic.IEnumerable(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: InsertRange(Integer, IEnumerable(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Triangle})
    name: InsertRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insertrange
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{ShapeEngine.Core.Shapes.Triangle})
    name: InsertRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insertrange
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.LastIndexOf(ShapeEngine.Core.Shapes.Triangle)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.LastIndexOf(ShapeEngine.Core.Shapes.Triangle)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0)
  name: LastIndexOf(Triangle)
  nameWithType: List<Triangle>.LastIndexOf(Triangle)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.LastIndexOf(ShapeEngine.Core.Shapes.Triangle)
  nameWithType.vb: List(Of Triangle).LastIndexOf(Triangle)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).LastIndexOf(ShapeEngine.Core.Shapes.Triangle)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.LastIndexOf(ShapeEngine.Core.Shapes.Triangle)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.LastIndexOf(ShapeEngine.Core.Shapes.Triangle)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.LastIndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.LastIndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32)
  name: LastIndexOf(Triangle, int)
  nameWithType: List<Triangle>.LastIndexOf(Triangle, int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.LastIndexOf(ShapeEngine.Core.Shapes.Triangle, int)
  nameWithType.vb: List(Of Triangle).LastIndexOf(Triangle, Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).LastIndexOf(ShapeEngine.Core.Shapes.Triangle, Integer)
  name.vb: LastIndexOf(Triangle, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.LastIndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.LastIndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.LastIndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.LastIndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32,System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32-system-int32)
  name: LastIndexOf(Triangle, int, int)
  nameWithType: List<Triangle>.LastIndexOf(Triangle, int, int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.LastIndexOf(ShapeEngine.Core.Shapes.Triangle, int, int)
  nameWithType.vb: List(Of Triangle).LastIndexOf(Triangle, Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).LastIndexOf(ShapeEngine.Core.Shapes.Triangle, Integer, Integer)
  name.vb: LastIndexOf(Triangle, Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.LastIndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32,System.Int32)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.LastIndexOf(ShapeEngine.Core.Shapes.Triangle,System.Int32,System.Int32)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32-system-int32)
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Remove(ShapeEngine.Core.Shapes.Triangle)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Remove(ShapeEngine.Core.Shapes.Triangle)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.remove
  name: Remove(Triangle)
  nameWithType: List<Triangle>.Remove(Triangle)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.Remove(ShapeEngine.Core.Shapes.Triangle)
  nameWithType.vb: List(Of Triangle).Remove(Triangle)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).Remove(ShapeEngine.Core.Shapes.Triangle)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Remove(ShapeEngine.Core.Shapes.Triangle)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.remove
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Remove(ShapeEngine.Core.Shapes.Triangle)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.remove
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.RemoveAll(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.RemoveAll(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeall
  name: RemoveAll(Predicate<Triangle>)
  nameWithType: List<Triangle>.RemoveAll(Predicate<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.RemoveAll(System.Predicate<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).RemoveAll(Predicate(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).RemoveAll(System.Predicate(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: RemoveAll(Predicate(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.RemoveAll(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: RemoveAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.RemoveAll(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: RemoveAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.RemoveAt(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeat
  name: RemoveAt(int)
  nameWithType: List<Triangle>.RemoveAt(int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.RemoveAt(int)
  nameWithType.vb: List(Of Triangle).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.RemoveRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removerange
  name: RemoveRange(int, int)
  nameWithType: List<Triangle>.RemoveRange(int, int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.RemoveRange(int, int)
  nameWithType.vb: List(Of Triangle).RemoveRange(Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).RemoveRange(Integer, Integer)
  name.vb: RemoveRange(Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removerange
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removerange
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Reverse
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Reverse
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.Reverse
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse
  name: Reverse()
  nameWithType: List<Triangle>.Reverse()
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.Reverse()
  nameWithType.vb: List(Of Triangle).Reverse()
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).Reverse()
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Reverse
    name: Reverse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Reverse
    name: Reverse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse
  - name: (
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Reverse(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse(system-int32-system-int32)
  name: Reverse(int, int)
  nameWithType: List<Triangle>.Reverse(int, int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.Reverse(int, int)
  nameWithType.vb: List(Of Triangle).Reverse(Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).Reverse(Integer, Integer)
  name.vb: Reverse(Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Reverse(System.Int32,System.Int32)
    name: Reverse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse(system-int32-system-int32)
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Reverse(System.Int32,System.Int32)
    name: Reverse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse(system-int32-system-int32)
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Slice(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Slice(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.Slice(System.Int32,System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.slice
  name: Slice(int, int)
  nameWithType: List<Triangle>.Slice(int, int)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.Slice(int, int)
  nameWithType.vb: List(Of Triangle).Slice(Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).Slice(Integer, Integer)
  name.vb: Slice(Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Slice(System.Int32,System.Int32)
    name: Slice
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.slice
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Slice(System.Int32,System.Int32)
    name: Slice
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.slice
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.Sort
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort
  name: Sort()
  nameWithType: List<Triangle>.Sort()
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.Sort()
  nameWithType.vb: List(Of Triangle).Sort()
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).Sort()
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort
  - name: (
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort(System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort(System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-collections-generic-icomparer((-0)))
  name: Sort(IComparer<Triangle>)
  nameWithType: List<Triangle>.Sort(IComparer<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.Sort(System.Collections.Generic.IComparer<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).Sort(IComparer(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).Sort(System.Collections.Generic.IComparer(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: Sort(IComparer(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort(System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort(System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort(System.Comparison{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort(System.Comparison{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-comparison((-0)))
  name: Sort(Comparison<Triangle>)
  nameWithType: List<Triangle>.Sort(Comparison<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.Sort(System.Comparison<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).Sort(Comparison(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).Sort(System.Comparison(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: Sort(Comparison(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort(System.Comparison{ShapeEngine.Core.Shapes.Triangle})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-comparison((-0)))
  - name: (
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort(System.Comparison{ShapeEngine.Core.Shapes.Triangle})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-comparison((-0)))
  - name: (
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-int32-system-int32-system-collections-generic-icomparer((-0)))
  name: Sort(int, int, IComparer<Triangle>)
  nameWithType: List<Triangle>.Sort(int, int, IComparer<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.Sort(int, int, System.Collections.Generic.IComparer<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).Sort(Integer, Integer, IComparer(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).Sort(Integer, Integer, System.Collections.Generic.IComparer(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: Sort(Integer, Integer, IComparer(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-int32-system-int32-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{ShapeEngine.Core.Shapes.Triangle})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-int32-system-int32-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.ToArray
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.ToArray
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.ToArray
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.toarray
  name: ToArray()
  nameWithType: List<Triangle>.ToArray()
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.ToArray()
  nameWithType.vb: List(Of Triangle).ToArray()
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.ToArray
    name: ToArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.toarray
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.ToArray
    name: ToArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.toarray
  - name: (
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.TrimExcess
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.TrimExcess
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.TrimExcess
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trimexcess
  name: TrimExcess()
  nameWithType: List<Triangle>.TrimExcess()
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.TrimExcess()
  nameWithType.vb: List(Of Triangle).TrimExcess()
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.TrimExcess
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trimexcess
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.TrimExcess
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trimexcess
  - name: (
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.TrueForAll(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  commentId: M:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.TrueForAll(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trueforall
  name: TrueForAll(Predicate<Triangle>)
  nameWithType: List<Triangle>.TrueForAll(Predicate<Triangle>)
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.TrueForAll(System.Predicate<ShapeEngine.Core.Shapes.Triangle>)
  nameWithType.vb: List(Of Triangle).TrueForAll(Predicate(Of Triangle))
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).TrueForAll(System.Predicate(Of ShapeEngine.Core.Shapes.Triangle))
  name.vb: TrueForAll(Predicate(Of Triangle))
  spec.csharp:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.TrueForAll(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: TrueForAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trueforall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.TrueForAll(System.Predicate{ShapeEngine.Core.Shapes.Triangle})
    name: TrueForAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trueforall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Capacity
  commentId: P:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Capacity
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.Capacity
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.capacity
  name: Capacity
  nameWithType: List<Triangle>.Capacity
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.Capacity
  nameWithType.vb: List(Of Triangle).Capacity
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).Capacity
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Count
  commentId: P:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Count
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.count
  name: Count
  nameWithType: List<Triangle>.Count
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.Count
  nameWithType.vb: List(Of Triangle).Count
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).Count
- uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Item(System.Int32)
  commentId: P:System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Item(System.Int32)
  parent: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}
  definition: System.Collections.Generic.List`1.Item(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: List<Triangle>.this[int]
  fullName: System.Collections.Generic.List<ShapeEngine.Core.Shapes.Triangle>.this[int]
  nameWithType.vb: List(Of Triangle).this[](Integer)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Core.Shapes.Triangle).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.List{ShapeEngine.Core.Shapes.Triangle}.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: ShapeEngine.Core.Shapes.Triangulation.ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.Draw(ShapeEngine.Color.ColorRgba)
  commentId: M:ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.Draw(ShapeEngine.Core.Shapes.Triangulation,ShapeEngine.Color.ColorRgba)
  parent: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing
  definition: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.Draw(ShapeEngine.Core.Shapes.Triangulation,ShapeEngine.Color.ColorRgba)
  href: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeTriangleDrawing_Draw_ShapeEngine_Core_Shapes_Triangulation_ShapeEngine_Color_ColorRgba_
  name: Draw(Triangulation, ColorRgba)
  nameWithType: ShapeTriangleDrawing.Draw(Triangulation, ColorRgba)
  fullName: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.Draw(ShapeEngine.Core.Shapes.Triangulation, ShapeEngine.Color.ColorRgba)
  spec.csharp:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.Draw(ShapeEngine.Core.Shapes.Triangulation,ShapeEngine.Color.ColorRgba)
    name: Draw
    href: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeTriangleDrawing_Draw_ShapeEngine_Core_Shapes_Triangulation_ShapeEngine_Color_ColorRgba_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangulation
    name: Triangulation
    href: ShapeEngine.Core.Shapes.Triangulation.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: )
  spec.vb:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.Draw(ShapeEngine.Core.Shapes.Triangulation,ShapeEngine.Color.ColorRgba)
    name: Draw
    href: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeTriangleDrawing_Draw_ShapeEngine_Core_Shapes_Triangulation_ShapeEngine_Color_ColorRgba_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangulation
    name: Triangulation
    href: ShapeEngine.Core.Shapes.Triangulation.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: )
- uid: ShapeEngine.Core.Shapes.Triangulation.ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Structs.LineDrawingInfo)
  commentId: M:ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation,ShapeEngine.Core.Structs.LineDrawingInfo)
  parent: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing
  definition: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation,ShapeEngine.Core.Structs.LineDrawingInfo)
  href: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeTriangleDrawing_DrawLines_ShapeEngine_Core_Shapes_Triangulation_ShapeEngine_Core_Structs_LineDrawingInfo_
  name: DrawLines(Triangulation, LineDrawingInfo)
  nameWithType: ShapeTriangleDrawing.DrawLines(Triangulation, LineDrawingInfo)
  fullName: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation, ShapeEngine.Core.Structs.LineDrawingInfo)
  spec.csharp:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation,ShapeEngine.Core.Structs.LineDrawingInfo)
    name: DrawLines
    href: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeTriangleDrawing_DrawLines_ShapeEngine_Core_Shapes_Triangulation_ShapeEngine_Core_Structs_LineDrawingInfo_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangulation
    name: Triangulation
    href: ShapeEngine.Core.Shapes.Triangulation.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineDrawingInfo
    name: LineDrawingInfo
    href: ShapeEngine.Core.Structs.LineDrawingInfo.html
  - name: )
  spec.vb:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation,ShapeEngine.Core.Structs.LineDrawingInfo)
    name: DrawLines
    href: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeTriangleDrawing_DrawLines_ShapeEngine_Core_Shapes_Triangulation_ShapeEngine_Core_Structs_LineDrawingInfo_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangulation
    name: Triangulation
    href: ShapeEngine.Core.Shapes.Triangulation.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineDrawingInfo
    name: LineDrawingInfo
    href: ShapeEngine.Core.Structs.LineDrawingInfo.html
  - name: )
- uid: ShapeEngine.Core.Shapes.Triangulation.ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Core.Structs.LineCapType,System.Int32)
  commentId: M:ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation,System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Core.Structs.LineCapType,System.Int32)
  parent: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing
  definition: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation,System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Core.Structs.LineCapType,System.Int32)
  href: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeTriangleDrawing_DrawLines_ShapeEngine_Core_Shapes_Triangulation_System_Single_ShapeEngine_Color_ColorRgba_ShapeEngine_Core_Structs_LineCapType_System_Int32_
  name: DrawLines(Triangulation, float, ColorRgba, LineCapType, int)
  nameWithType: ShapeTriangleDrawing.DrawLines(Triangulation, float, ColorRgba, LineCapType, int)
  fullName: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation, float, ShapeEngine.Color.ColorRgba, ShapeEngine.Core.Structs.LineCapType, int)
  nameWithType.vb: ShapeTriangleDrawing.DrawLines(Triangulation, Single, ColorRgba, LineCapType, Integer)
  fullName.vb: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation, Single, ShapeEngine.Color.ColorRgba, ShapeEngine.Core.Structs.LineCapType, Integer)
  name.vb: DrawLines(Triangulation, Single, ColorRgba, LineCapType, Integer)
  spec.csharp:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation,System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Core.Structs.LineCapType,System.Int32)
    name: DrawLines
    href: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeTriangleDrawing_DrawLines_ShapeEngine_Core_Shapes_Triangulation_System_Single_ShapeEngine_Color_ColorRgba_ShapeEngine_Core_Structs_LineCapType_System_Int32_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangulation
    name: Triangulation
    href: ShapeEngine.Core.Shapes.Triangulation.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineCapType
    name: LineCapType
    href: ShapeEngine.Core.Structs.LineCapType.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation,System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Core.Structs.LineCapType,System.Int32)
    name: DrawLines
    href: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeTriangleDrawing_DrawLines_ShapeEngine_Core_Shapes_Triangulation_System_Single_ShapeEngine_Color_ColorRgba_ShapeEngine_Core_Structs_LineCapType_System_Int32_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangulation
    name: Triangulation
    href: ShapeEngine.Core.Shapes.Triangulation.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineCapType
    name: LineCapType
    href: ShapeEngine.Core.Structs.LineCapType.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: ShapeEngine.Core.Shapes.ShapeList`1
  commentId: T:ShapeEngine.Core.Shapes.ShapeList`1
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.ShapeList-1.html
  name: ShapeList<T>
  nameWithType: ShapeList<T>
  fullName: ShapeEngine.Core.Shapes.ShapeList<T>
  nameWithType.vb: ShapeList(Of T)
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of T)
  name.vb: ShapeList(Of T)
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1
    name: ShapeList
    href: ShapeEngine.Core.Shapes.ShapeList-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1
    name: ShapeList
    href: ShapeEngine.Core.Shapes.ShapeList-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: ShapeEngine.Core.Shapes.ShapeList`1.AddRange(`0[])
  commentId: M:ShapeEngine.Core.Shapes.ShapeList`1.AddRange(`0[])
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_AddRange__0___
  name: AddRange(params T[])
  nameWithType: ShapeList<T>.AddRange(params T[])
  fullName: ShapeEngine.Core.Shapes.ShapeList<T>.AddRange(params T[])
  nameWithType.vb: ShapeList(Of T).AddRange(ParamArray T())
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of T).AddRange(ParamArray T())
  name.vb: AddRange(ParamArray T())
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.AddRange(`0[])
    name: AddRange
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_AddRange__0___
  - name: (
  - name: params
  - name: " "
  - name: T
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.AddRange(`0[])
    name: AddRange
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_AddRange__0___
  - name: (
  - name: ParamArray
  - name: " "
  - name: T
  - name: (
  - name: )
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList`1.Copy
  commentId: M:ShapeEngine.Core.Shapes.ShapeList`1.Copy
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_Copy
  name: Copy()
  nameWithType: ShapeList<T>.Copy()
  fullName: ShapeEngine.Core.Shapes.ShapeList<T>.Copy()
  nameWithType.vb: ShapeList(Of T).Copy()
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of T).Copy()
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.Copy
    name: Copy
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_Copy
  - name: (
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.Copy
    name: Copy
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_Copy
  - name: (
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList`1.IsIndexValid(System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.ShapeList`1.IsIndexValid(System.Int32)
  isExternal: true
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_IsIndexValid_System_Int32_
  name: IsIndexValid(int)
  nameWithType: ShapeList<T>.IsIndexValid(int)
  fullName: ShapeEngine.Core.Shapes.ShapeList<T>.IsIndexValid(int)
  nameWithType.vb: ShapeList(Of T).IsIndexValid(Integer)
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of T).IsIndexValid(Integer)
  name.vb: IsIndexValid(Integer)
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.IsIndexValid(System.Int32)
    name: IsIndexValid
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_IsIndexValid_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.IsIndexValid(System.Int32)
    name: IsIndexValid
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_IsIndexValid_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItem
  commentId: M:ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItem
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItem
  name: GetRandomItem()
  nameWithType: ShapeList<T>.GetRandomItem()
  fullName: ShapeEngine.Core.Shapes.ShapeList<T>.GetRandomItem()
  nameWithType.vb: ShapeList(Of T).GetRandomItem()
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of T).GetRandomItem()
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItem
    name: GetRandomItem
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItem
  - name: (
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItem
    name: GetRandomItem
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItem
  - name: (
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItems(System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItems(System.Int32)
  isExternal: true
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItems_System_Int32_
  name: GetRandomItems(int)
  nameWithType: ShapeList<T>.GetRandomItems(int)
  fullName: ShapeEngine.Core.Shapes.ShapeList<T>.GetRandomItems(int)
  nameWithType.vb: ShapeList(Of T).GetRandomItems(Integer)
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of T).GetRandomItems(Integer)
  name.vb: GetRandomItems(Integer)
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItems(System.Int32)
    name: GetRandomItems
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItems_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.GetRandomItems(System.Int32)
    name: GetRandomItems
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetRandomItems_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ShapeEngine.Core.Shapes.ShapeList`1.GetItem(System.Int32)
  commentId: M:ShapeEngine.Core.Shapes.ShapeList`1.GetItem(System.Int32)
  isExternal: true
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetItem_System_Int32_
  name: GetItem(int)
  nameWithType: ShapeList<T>.GetItem(int)
  fullName: ShapeEngine.Core.Shapes.ShapeList<T>.GetItem(int)
  nameWithType.vb: ShapeList(Of T).GetItem(Integer)
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of T).GetItem(Integer)
  name.vb: GetItem(Integer)
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.GetItem(System.Int32)
    name: GetItem
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetItem_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.GetItem(System.Int32)
    name: GetItem
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetItem_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.Add(`0)
  commentId: M:System.Collections.Generic.List`1.Add(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.add
  name: Add(T)
  nameWithType: List<T>.Add(T)
  fullName: System.Collections.Generic.List<T>.Add(T)
  nameWithType.vb: List(Of T).Add(T)
  fullName.vb: System.Collections.Generic.List(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.add
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.add
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.addrange
  name: AddRange(IEnumerable<T>)
  nameWithType: List<T>.AddRange(IEnumerable<T>)
  fullName: System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: List(Of T).AddRange(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.addrange
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.addrange
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.AsReadOnly
  commentId: M:System.Collections.Generic.List`1.AsReadOnly
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.asreadonly
  name: AsReadOnly()
  nameWithType: List<T>.AsReadOnly()
  fullName: System.Collections.Generic.List<T>.AsReadOnly()
  nameWithType.vb: List(Of T).AsReadOnly()
  fullName.vb: System.Collections.Generic.List(Of T).AsReadOnly()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.asreadonly
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.asreadonly
  - name: (
  - name: )
- uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(system-int32-system-int32-0-system-collections-generic-icomparer((-0)))
  name: BinarySearch(int, int, T, IComparer<T>)
  nameWithType: List<T>.BinarySearch(int, int, T, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.BinarySearch(int, int, T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).BinarySearch(Integer, Integer, T, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(Integer, Integer, T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(Integer, Integer, T, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(system-int32-system-int32-0-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(system-int32-system-int32-0-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.BinarySearch(`0)
  commentId: M:System.Collections.Generic.List`1.BinarySearch(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0)
  name: BinarySearch(T)
  nameWithType: List<T>.BinarySearch(T)
  fullName: System.Collections.Generic.List<T>.BinarySearch(T)
  nameWithType.vb: List(Of T).BinarySearch(T)
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0)
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0)
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0-system-collections-generic-icomparer((-0)))
  name: BinarySearch(T, IComparer<T>)
  nameWithType: List<T>.BinarySearch(T, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.BinarySearch(T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).BinarySearch(T, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(T, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0-system-collections-generic-icomparer((-0)))
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0-system-collections-generic-icomparer((-0)))
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.Clear
  commentId: M:System.Collections.Generic.List`1.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.clear
  name: Clear()
  nameWithType: List<T>.Clear()
  fullName: System.Collections.Generic.List<T>.Clear()
  nameWithType.vb: List(Of T).Clear()
  fullName.vb: System.Collections.Generic.List(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.List`1.Contains(`0)
  commentId: M:System.Collections.Generic.List`1.Contains(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.contains
  name: Contains(T)
  nameWithType: List<T>.Contains(T)
  fullName: System.Collections.Generic.List<T>.Contains(T)
  nameWithType.vb: List(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.List(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.contains
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.contains
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  commentId: M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.convertall
  name: ConvertAll<TOutput>(Converter<T, TOutput>)
  nameWithType: List<T>.ConvertAll<TOutput>(Converter<T, TOutput>)
  fullName: System.Collections.Generic.List<T>.ConvertAll<TOutput>(System.Converter<T, TOutput>)
  nameWithType.vb: List(Of T).ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  fullName.vb: System.Collections.Generic.List(Of T).ConvertAll(Of TOutput)(System.Converter(Of T, TOutput))
  name.vb: ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.convertall
  - name: <
  - name: TOutput
  - name: '>'
  - name: (
  - uid: System.Converter`2
    name: Converter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.converter-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TOutput
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.convertall
  - name: (
  - name: Of
  - name: " "
  - name: TOutput
  - name: )
  - name: (
  - uid: System.Converter`2
    name: Converter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.converter-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TOutput
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(system-int32-0()-system-int32-system-int32)
  name: CopyTo(int, T[], int, int)
  nameWithType: List<T>.CopyTo(int, T[], int, int)
  fullName: System.Collections.Generic.List<T>.CopyTo(int, T[], int, int)
  nameWithType.vb: List(Of T).CopyTo(Integer, T(), Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(Integer, T(), Integer, Integer)
  name.vb: CopyTo(Integer, T(), Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(system-int32-0()-system-int32-system-int32)
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(system-int32-0()-system-int32-system-int32)
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.CopyTo(`0[])
  commentId: M:System.Collections.Generic.List`1.CopyTo(`0[])
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0())
  name: CopyTo(T[])
  nameWithType: List<T>.CopyTo(T[])
  fullName: System.Collections.Generic.List<T>.CopyTo(T[])
  nameWithType.vb: List(Of T).CopyTo(T())
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T())
  name.vb: CopyTo(T())
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0())
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0())
  - name: (
  - name: T
  - name: (
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0()-system-int32)
  name: CopyTo(T[], int)
  nameWithType: List<T>.CopyTo(T[], int)
  fullName: System.Collections.Generic.List<T>.CopyTo(T[], int)
  nameWithType.vb: List(Of T).CopyTo(T(), Integer)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T(), Integer)
  name.vb: CopyTo(T(), Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0()-system-int32)
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0()-system-int32)
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.EnsureCapacity(System.Int32)
  commentId: M:System.Collections.Generic.List`1.EnsureCapacity(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.ensurecapacity
  name: EnsureCapacity(int)
  nameWithType: List<T>.EnsureCapacity(int)
  fullName: System.Collections.Generic.List<T>.EnsureCapacity(int)
  nameWithType.vb: List(Of T).EnsureCapacity(Integer)
  fullName.vb: System.Collections.Generic.List(Of T).EnsureCapacity(Integer)
  name.vb: EnsureCapacity(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.ensurecapacity
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.ensurecapacity
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.exists
  name: Exists(Predicate<T>)
  nameWithType: List<T>.Exists(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.Exists(System.Predicate<T>)
  nameWithType.vb: List(Of T).Exists(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Exists(System.Predicate(Of T))
  name.vb: Exists(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.exists
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.exists
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.Find(System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.find
  name: Find(Predicate<T>)
  nameWithType: List<T>.Find(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.Find(System.Predicate<T>)
  nameWithType.vb: List(Of T).Find(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Find(System.Predicate(Of T))
  name.vb: Find(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.find
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.find
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findall
  name: FindAll(Predicate<T>)
  nameWithType: List<T>.FindAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindAll(System.Predicate(Of T))
  name.vb: FindAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-int32-system-predicate((-0)))
  name: FindIndex(int, int, Predicate<T>)
  nameWithType: List<T>.FindIndex(int, int, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(int, int, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Integer, Integer, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(Integer, Integer, System.Predicate(Of T))
  name.vb: FindIndex(Integer, Integer, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-predicate((-0)))
  name: FindIndex(int, Predicate<T>)
  nameWithType: List<T>.FindIndex(int, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(int, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Integer, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(Integer, System.Predicate(Of T))
  name.vb: FindIndex(Integer, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-predicate((-0)))
  name: FindIndex(Predicate<T>)
  nameWithType: List<T>.FindIndex(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Predicate(Of T))
  name.vb: FindIndex(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-predicate((-0)))
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-predicate((-0)))
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlast
  name: FindLast(Predicate<T>)
  nameWithType: List<T>.FindLast(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLast(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLast(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLast(System.Predicate(Of T))
  name.vb: FindLast(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlast
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlast
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-int32-system-predicate((-0)))
  name: FindLastIndex(int, int, Predicate<T>)
  nameWithType: List<T>.FindLastIndex(int, int, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(int, int, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Integer, Integer, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(Integer, Integer, System.Predicate(Of T))
  name.vb: FindLastIndex(Integer, Integer, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-predicate((-0)))
  name: FindLastIndex(int, Predicate<T>)
  nameWithType: List<T>.FindLastIndex(int, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(int, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Integer, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(Integer, System.Predicate(Of T))
  name.vb: FindLastIndex(Integer, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-predicate((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-predicate((-0)))
  name: FindLastIndex(Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Predicate(Of T))
  name.vb: FindLastIndex(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-predicate((-0)))
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-predicate((-0)))
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
  commentId: M:System.Collections.Generic.List`1.ForEach(System.Action{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.foreach
  name: ForEach(Action<T>)
  nameWithType: List<T>.ForEach(Action<T>)
  fullName: System.Collections.Generic.List<T>.ForEach(System.Action<T>)
  nameWithType.vb: List(Of T).ForEach(Action(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).ForEach(System.Action(Of T))
  name.vb: ForEach(Action(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.foreach
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.foreach
  - name: (
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.GetEnumerator
  commentId: M:System.Collections.Generic.List`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getenumerator
  name: GetEnumerator()
  nameWithType: List<T>.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.GetEnumerator()
  nameWithType.vb: List(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getrange
  name: GetRange(int, int)
  nameWithType: List<T>.GetRange(int, int)
  fullName: System.Collections.Generic.List<T>.GetRange(int, int)
  nameWithType.vb: List(Of T).GetRange(Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of T).GetRange(Integer, Integer)
  name.vb: GetRange(Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getrange
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getrange
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0)
  name: IndexOf(T)
  nameWithType: List<T>.IndexOf(T)
  fullName: System.Collections.Generic.List<T>.IndexOf(T)
  nameWithType.vb: List(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0)
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0)
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32)
  name: IndexOf(T, int)
  nameWithType: List<T>.IndexOf(T, int)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, int)
  nameWithType.vb: List(Of T).IndexOf(T, Integer)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, Integer)
  name.vb: IndexOf(T, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32)
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32)
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32-system-int32)
  name: IndexOf(T, int, int)
  nameWithType: List<T>.IndexOf(T, int, int)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, int, int)
  nameWithType.vb: List(Of T).IndexOf(T, Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, Integer, Integer)
  name.vb: IndexOf(T, Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32-system-int32)
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32-system-int32)
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.List`1.Insert(System.Int32,`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insert
  name: Insert(int, T)
  nameWithType: List<T>.Insert(int, T)
  fullName: System.Collections.Generic.List<T>.Insert(int, T)
  nameWithType.vb: List(Of T).Insert(Integer, T)
  fullName.vb: System.Collections.Generic.List(Of T).Insert(Integer, T)
  name.vb: Insert(Integer, T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insert
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insert
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insertrange
  name: InsertRange(int, IEnumerable<T>)
  nameWithType: List<T>.InsertRange(int, IEnumerable<T>)
  fullName: System.Collections.Generic.List<T>.InsertRange(int, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: List(Of T).InsertRange(Integer, IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).InsertRange(Integer, System.Collections.Generic.IEnumerable(Of T))
  name.vb: InsertRange(Integer, IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insertrange
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insertrange
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0)
  name: LastIndexOf(T)
  nameWithType: List<T>.LastIndexOf(T)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T)
  nameWithType.vb: List(Of T).LastIndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0)
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0)
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32)
  name: LastIndexOf(T, int)
  nameWithType: List<T>.LastIndexOf(T, int)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, int)
  nameWithType.vb: List(Of T).LastIndexOf(T, Integer)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, Integer)
  name.vb: LastIndexOf(T, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32)
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32)
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32-system-int32)
  name: LastIndexOf(T, int, int)
  nameWithType: List<T>.LastIndexOf(T, int, int)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, int, int)
  nameWithType.vb: List(Of T).LastIndexOf(T, Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, Integer, Integer)
  name.vb: LastIndexOf(T, Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32-system-int32)
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32-system-int32)
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.Remove(`0)
  commentId: M:System.Collections.Generic.List`1.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.remove
  name: Remove(T)
  nameWithType: List<T>.Remove(T)
  fullName: System.Collections.Generic.List<T>.Remove(T)
  nameWithType.vb: List(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.List(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.remove
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.remove
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeall
  name: RemoveAll(Predicate<T>)
  nameWithType: List<T>.RemoveAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).RemoveAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAll(System.Predicate(Of T))
  name.vb: RemoveAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.List`1.RemoveAt(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeat
  name: RemoveAt(int)
  nameWithType: List<T>.RemoveAt(int)
  fullName: System.Collections.Generic.List<T>.RemoveAt(int)
  nameWithType.vb: List(Of T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removerange
  name: RemoveRange(int, int)
  nameWithType: List<T>.RemoveRange(int, int)
  fullName: System.Collections.Generic.List<T>.RemoveRange(int, int)
  nameWithType.vb: List(Of T).RemoveRange(Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveRange(Integer, Integer)
  name.vb: RemoveRange(Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removerange
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removerange
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.Reverse
  commentId: M:System.Collections.Generic.List`1.Reverse
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse
  name: Reverse()
  nameWithType: List<T>.Reverse()
  fullName: System.Collections.Generic.List<T>.Reverse()
  nameWithType.vb: List(Of T).Reverse()
  fullName.vb: System.Collections.Generic.List(Of T).Reverse()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse
  - name: (
  - name: )
- uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse(system-int32-system-int32)
  name: Reverse(int, int)
  nameWithType: List<T>.Reverse(int, int)
  fullName: System.Collections.Generic.List<T>.Reverse(int, int)
  nameWithType.vb: List(Of T).Reverse(Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of T).Reverse(Integer, Integer)
  name.vb: Reverse(Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse(system-int32-system-int32)
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse(system-int32-system-int32)
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.Slice(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.Slice(System.Int32,System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.slice
  name: Slice(int, int)
  nameWithType: List<T>.Slice(int, int)
  fullName: System.Collections.Generic.List<T>.Slice(int, int)
  nameWithType.vb: List(Of T).Slice(Integer, Integer)
  fullName.vb: System.Collections.Generic.List(Of T).Slice(Integer, Integer)
  name.vb: Slice(Integer, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Slice(System.Int32,System.Int32)
    name: Slice
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.slice
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Slice(System.Int32,System.Int32)
    name: Slice
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.slice
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List`1.Sort
  commentId: M:System.Collections.Generic.List`1.Sort
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort
  name: Sort()
  nameWithType: List<T>.Sort()
  fullName: System.Collections.Generic.List<T>.Sort()
  nameWithType.vb: List(Of T).Sort()
  fullName.vb: System.Collections.Generic.List(Of T).Sort()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort
  - name: (
  - name: )
- uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-collections-generic-icomparer((-0)))
  name: Sort(IComparer<T>)
  nameWithType: List<T>.Sort(IComparer<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).Sort(IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-comparison((-0)))
  name: Sort(Comparison<T>)
  nameWithType: List<T>.Sort(Comparison<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Comparison<T>)
  nameWithType.vb: List(Of T).Sort(Comparison(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Comparison(Of T))
  name.vb: Sort(Comparison(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-comparison((-0)))
  - name: (
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-comparison((-0)))
  - name: (
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-int32-system-int32-system-collections-generic-icomparer((-0)))
  name: Sort(int, int, IComparer<T>)
  nameWithType: List<T>.Sort(int, int, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.Sort(int, int, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).Sort(Integer, Integer, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(Integer, Integer, System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(Integer, Integer, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-int32-system-int32-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-int32-system-int32-system-collections-generic-icomparer((-0)))
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icomparer-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.ToArray
  commentId: M:System.Collections.Generic.List`1.ToArray
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.toarray
  name: ToArray()
  nameWithType: List<T>.ToArray()
  fullName: System.Collections.Generic.List<T>.ToArray()
  nameWithType.vb: List(Of T).ToArray()
  fullName.vb: System.Collections.Generic.List(Of T).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.toarray
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.toarray
  - name: (
  - name: )
- uid: System.Collections.Generic.List`1.TrimExcess
  commentId: M:System.Collections.Generic.List`1.TrimExcess
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trimexcess
  name: TrimExcess()
  nameWithType: List<T>.TrimExcess()
  fullName: System.Collections.Generic.List<T>.TrimExcess()
  nameWithType.vb: List(Of T).TrimExcess()
  fullName.vb: System.Collections.Generic.List(Of T).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trimexcess
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trimexcess
  - name: (
  - name: )
- uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trueforall
  name: TrueForAll(Predicate<T>)
  nameWithType: List<T>.TrueForAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.TrueForAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).TrueForAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).TrueForAll(System.Predicate(Of T))
  name.vb: TrueForAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trueforall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trueforall
  - name: (
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1.Capacity
  commentId: P:System.Collections.Generic.List`1.Capacity
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.capacity
  name: Capacity
  nameWithType: List<T>.Capacity
  fullName: System.Collections.Generic.List<T>.Capacity
  nameWithType.vb: List(Of T).Capacity
  fullName.vb: System.Collections.Generic.List(Of T).Capacity
- uid: System.Collections.Generic.List`1.Count
  commentId: P:System.Collections.Generic.List`1.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.count
  name: Count
  nameWithType: List<T>.Count
  fullName: System.Collections.Generic.List<T>.Count
  nameWithType.vb: List(Of T).Count
  fullName.vb: System.Collections.Generic.List(Of T).Count
- uid: System.Collections.Generic.List`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.List`1.Item(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: this[int]
  nameWithType: List<T>.this[int]
  fullName: System.Collections.Generic.List<T>.this[int]
  nameWithType.vb: List(Of T).this[](Integer)
  fullName.vb: System.Collections.Generic.List(Of T).this[](Integer)
  name.vb: this[](Integer)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.item
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.Draw(ShapeEngine.Core.Shapes.Triangulation,ShapeEngine.Color.ColorRgba)
  commentId: M:ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.Draw(ShapeEngine.Core.Shapes.Triangulation,ShapeEngine.Color.ColorRgba)
  href: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeTriangleDrawing_Draw_ShapeEngine_Core_Shapes_Triangulation_ShapeEngine_Color_ColorRgba_
  name: Draw(Triangulation, ColorRgba)
  nameWithType: ShapeTriangleDrawing.Draw(Triangulation, ColorRgba)
  fullName: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.Draw(ShapeEngine.Core.Shapes.Triangulation, ShapeEngine.Color.ColorRgba)
  spec.csharp:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.Draw(ShapeEngine.Core.Shapes.Triangulation,ShapeEngine.Color.ColorRgba)
    name: Draw
    href: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeTriangleDrawing_Draw_ShapeEngine_Core_Shapes_Triangulation_ShapeEngine_Color_ColorRgba_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangulation
    name: Triangulation
    href: ShapeEngine.Core.Shapes.Triangulation.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: )
  spec.vb:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.Draw(ShapeEngine.Core.Shapes.Triangulation,ShapeEngine.Color.ColorRgba)
    name: Draw
    href: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeTriangleDrawing_Draw_ShapeEngine_Core_Shapes_Triangulation_ShapeEngine_Color_ColorRgba_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangulation
    name: Triangulation
    href: ShapeEngine.Core.Shapes.Triangulation.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: )
- uid: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing
  commentId: T:ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing
  parent: ShapeEngine.StaticLib.Drawing
  href: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.html
  name: ShapeTriangleDrawing
  nameWithType: ShapeTriangleDrawing
  fullName: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing
- uid: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation,ShapeEngine.Core.Structs.LineDrawingInfo)
  commentId: M:ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation,ShapeEngine.Core.Structs.LineDrawingInfo)
  href: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeTriangleDrawing_DrawLines_ShapeEngine_Core_Shapes_Triangulation_ShapeEngine_Core_Structs_LineDrawingInfo_
  name: DrawLines(Triangulation, LineDrawingInfo)
  nameWithType: ShapeTriangleDrawing.DrawLines(Triangulation, LineDrawingInfo)
  fullName: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation, ShapeEngine.Core.Structs.LineDrawingInfo)
  spec.csharp:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation,ShapeEngine.Core.Structs.LineDrawingInfo)
    name: DrawLines
    href: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeTriangleDrawing_DrawLines_ShapeEngine_Core_Shapes_Triangulation_ShapeEngine_Core_Structs_LineDrawingInfo_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangulation
    name: Triangulation
    href: ShapeEngine.Core.Shapes.Triangulation.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineDrawingInfo
    name: LineDrawingInfo
    href: ShapeEngine.Core.Structs.LineDrawingInfo.html
  - name: )
  spec.vb:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation,ShapeEngine.Core.Structs.LineDrawingInfo)
    name: DrawLines
    href: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeTriangleDrawing_DrawLines_ShapeEngine_Core_Shapes_Triangulation_ShapeEngine_Core_Structs_LineDrawingInfo_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangulation
    name: Triangulation
    href: ShapeEngine.Core.Shapes.Triangulation.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineDrawingInfo
    name: LineDrawingInfo
    href: ShapeEngine.Core.Structs.LineDrawingInfo.html
  - name: )
- uid: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation,System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Core.Structs.LineCapType,System.Int32)
  commentId: M:ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation,System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Core.Structs.LineCapType,System.Int32)
  isExternal: true
  href: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeTriangleDrawing_DrawLines_ShapeEngine_Core_Shapes_Triangulation_System_Single_ShapeEngine_Color_ColorRgba_ShapeEngine_Core_Structs_LineCapType_System_Int32_
  name: DrawLines(Triangulation, float, ColorRgba, LineCapType, int)
  nameWithType: ShapeTriangleDrawing.DrawLines(Triangulation, float, ColorRgba, LineCapType, int)
  fullName: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation, float, ShapeEngine.Color.ColorRgba, ShapeEngine.Core.Structs.LineCapType, int)
  nameWithType.vb: ShapeTriangleDrawing.DrawLines(Triangulation, Single, ColorRgba, LineCapType, Integer)
  fullName.vb: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation, Single, ShapeEngine.Color.ColorRgba, ShapeEngine.Core.Structs.LineCapType, Integer)
  name.vb: DrawLines(Triangulation, Single, ColorRgba, LineCapType, Integer)
  spec.csharp:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation,System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Core.Structs.LineCapType,System.Int32)
    name: DrawLines
    href: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeTriangleDrawing_DrawLines_ShapeEngine_Core_Shapes_Triangulation_System_Single_ShapeEngine_Color_ColorRgba_ShapeEngine_Core_Structs_LineCapType_System_Int32_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangulation
    name: Triangulation
    href: ShapeEngine.Core.Shapes.Triangulation.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineCapType
    name: LineCapType
    href: ShapeEngine.Core.Structs.LineCapType.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.DrawLines(ShapeEngine.Core.Shapes.Triangulation,System.Single,ShapeEngine.Color.ColorRgba,ShapeEngine.Core.Structs.LineCapType,System.Int32)
    name: DrawLines
    href: ShapeEngine.StaticLib.Drawing.ShapeTriangleDrawing.html#ShapeEngine_StaticLib_Drawing_ShapeTriangleDrawing_DrawLines_ShapeEngine_Core_Shapes_Triangulation_System_Single_ShapeEngine_Color_ColorRgba_ShapeEngine_Core_Structs_LineCapType_System_Int32_
  - name: (
  - uid: ShapeEngine.Core.Shapes.Triangulation
    name: Triangulation
    href: ShapeEngine.Core.Shapes.Triangulation.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: ShapeEngine.Color.ColorRgba
    name: ColorRgba
    href: ShapeEngine.Color.ColorRgba.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.LineCapType
    name: LineCapType
    href: ShapeEngine.Core.Structs.LineCapType.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ShapeEngine.StaticLib.Drawing
  commentId: N:ShapeEngine.StaticLib.Drawing
  href: ShapeEngine.html
  name: ShapeEngine.StaticLib.Drawing
  nameWithType: ShapeEngine.StaticLib.Drawing
  fullName: ShapeEngine.StaticLib.Drawing
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.StaticLib
    name: StaticLib
    href: ShapeEngine.StaticLib.html
  - name: .
  - uid: ShapeEngine.StaticLib.Drawing
    name: Drawing
    href: ShapeEngine.StaticLib.Drawing.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.StaticLib
    name: StaticLib
    href: ShapeEngine.StaticLib.html
  - name: .
  - uid: ShapeEngine.StaticLib.Drawing
    name: Drawing
    href: ShapeEngine.StaticLib.Drawing.html
- uid: ShapeEngine.Core.Shapes.Triangulation.#ctor*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.#ctor
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation__ctor
  name: Triangulation
  nameWithType: Triangulation.Triangulation
  fullName: ShapeEngine.Core.Shapes.Triangulation.Triangulation
  nameWithType.vb: Triangulation.New
  fullName.vb: ShapeEngine.Core.Shapes.Triangulation.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetHashCode
  commentId: M:ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetHashCode
  parent: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}
  definition: ShapeEngine.Core.Shapes.ShapeList`1.GetHashCode
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetHashCode
  name: GetHashCode()
  nameWithType: ShapeList<Triangle>.GetHashCode()
  fullName: ShapeEngine.Core.Shapes.ShapeList<ShapeEngine.Core.Shapes.Triangle>.GetHashCode()
  nameWithType.vb: ShapeList(Of Triangle).GetHashCode()
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of ShapeEngine.Core.Shapes.Triangle).GetHashCode()
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetHashCode
    name: GetHashCode
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList{ShapeEngine.Core.Shapes.Triangle}.GetHashCode
    name: GetHashCode
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetHashCode
  - name: (
  - name: )
- uid: ShapeEngine.Core.Shapes.Triangulation.GetHashCode*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.GetHashCode
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_GetHashCode
  name: GetHashCode
  nameWithType: Triangulation.GetHashCode
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetHashCode
- uid: ShapeEngine.Core.Shapes.ShapeList`1.GetHashCode
  commentId: M:ShapeEngine.Core.Shapes.ShapeList`1.GetHashCode
  href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetHashCode
  name: GetHashCode()
  nameWithType: ShapeList<T>.GetHashCode()
  fullName: ShapeEngine.Core.Shapes.ShapeList<T>.GetHashCode()
  nameWithType.vb: ShapeList(Of T).GetHashCode()
  fullName.vb: ShapeEngine.Core.Shapes.ShapeList(Of T).GetHashCode()
  spec.csharp:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.GetHashCode
    name: GetHashCode
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Shapes.ShapeList`1.GetHashCode
    name: GetHashCode
    href: ShapeEngine.Core.Shapes.ShapeList-1.html#ShapeEngine_Core_Shapes_ShapeList_1_GetHashCode
  - name: (
  - name: )
- uid: ShapeEngine.Core.Shapes.Triangulation.Equals*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.Equals
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_Equals_ShapeEngine_Core_Shapes_Triangulation_
  name: Equals
  nameWithType: Triangulation.Equals
  fullName: ShapeEngine.Core.Shapes.Triangulation.Equals
- uid: ShapeEngine.Core.Shapes.Triangulation
  commentId: T:ShapeEngine.Core.Shapes.Triangulation
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Triangulation.html
  name: Triangulation
  nameWithType: Triangulation
  fullName: ShapeEngine.Core.Shapes.Triangulation
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_GetClosestPoint_System_Numerics_Vector2_
  name: GetClosestPoint
  nameWithType: Triangulation.GetClosestPoint
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestPoint
- uid: System.Numerics.Vector2
  commentId: T:System.Numerics.Vector2
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
- uid: ShapeEngine.Core.Structs.ClosestPointResult
  commentId: T:ShapeEngine.Core.Structs.ClosestPointResult
  parent: ShapeEngine.Core.Structs
  href: ShapeEngine.Core.Structs.ClosestPointResult.html
  name: ClosestPointResult
  nameWithType: ClosestPointResult
  fullName: ShapeEngine.Core.Structs.ClosestPointResult
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: ShapeEngine.Core.Structs
  commentId: N:ShapeEngine.Core.Structs
  href: ShapeEngine.html
  name: ShapeEngine.Core.Structs
  nameWithType: ShapeEngine.Core.Structs
  fullName: ShapeEngine.Core.Structs
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Structs
    name: Structs
    href: ShapeEngine.Core.Structs.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Structs
    name: Structs
    href: ShapeEngine.Core.Structs.html
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestTriangle*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.GetClosestTriangle
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_GetClosestTriangle_System_Numerics_Vector2_System_Single__System_Int32__
  name: GetClosestTriangle
  nameWithType: Triangulation.GetClosestTriangle
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestTriangle
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Shapes.Triangle}
  commentId: T:System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Shapes.Triangle}
  parent: System
  definition: System.ValueTuple`2
  href: ShapeEngine.Core.Structs.CollisionPoint.html
  name: (CollisionPoint point, Triangle triangle)
  nameWithType: (CollisionPoint point, Triangle triangle)
  fullName: (ShapeEngine.Core.Structs.CollisionPoint point, ShapeEngine.Core.Shapes.Triangle triangle)
  nameWithType.vb: (point As CollisionPoint, triangle As Triangle)
  fullName.vb: (point As ShapeEngine.Core.Structs.CollisionPoint, triangle As ShapeEngine.Core.Shapes.Triangle)
  name.vb: (point As CollisionPoint, triangle As Triangle)
  spec.csharp:
  - name: (
  - uid: ShapeEngine.Core.Structs.CollisionPoint
    name: CollisionPoint
    href: ShapeEngine.Core.Structs.CollisionPoint.html
  - name: " "
  - uid: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Shapes.Triangle}.point
    name: point
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.structs.collisionpoint,shapeengine.core.shapes.triangle-.point
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: " "
  - uid: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Shapes.Triangle}.triangle
    name: triangle
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.structs.collisionpoint,shapeengine.core.shapes.triangle-.triangle
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Shapes.Triangle}.point
    name: point
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.structs.collisionpoint,shapeengine.core.shapes.triangle-.point
  - name: " "
  - name: As
  - name: " "
  - uid: ShapeEngine.Core.Structs.CollisionPoint
    name: CollisionPoint
    href: ShapeEngine.Core.Structs.CollisionPoint.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{ShapeEngine.Core.Structs.CollisionPoint,ShapeEngine.Core.Shapes.Triangle}.triangle
    name: triangle
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.structs.collisionpoint,shapeengine.core.shapes.triangle-.triangle
  - name: " "
  - name: As
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Triangle
    name: Triangle
    href: ShapeEngine.Core.Shapes.Triangle.html
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestPointTriangulationPoint*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.GetClosestPointTriangulationPoint
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_GetClosestPointTriangulationPoint_System_Collections_Generic_List_ShapeEngine_Core_Shapes_Triangle__System_Numerics_Vector2_System_Single__
  name: GetClosestPointTriangulationPoint
  nameWithType: Triangulation.GetClosestPointTriangulationPoint
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestPointTriangulationPoint
- uid: ShapeEngine.Core.Structs.CollisionPoint
  commentId: T:ShapeEngine.Core.Structs.CollisionPoint
  parent: ShapeEngine.Core.Structs
  href: ShapeEngine.Core.Structs.CollisionPoint.html
  name: CollisionPoint
  nameWithType: CollisionPoint
  fullName: ShapeEngine.Core.Structs.CollisionPoint
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestVertex*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.GetClosestVertex
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_GetClosestVertex_System_Numerics_Vector2_System_Single__System_Int32__System_Int32__
  name: GetClosestVertex
  nameWithType: Triangulation.GetClosestVertex
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestVertex
- uid: ShapeEngine.Core.Shapes.Line
  commentId: T:ShapeEngine.Core.Shapes.Line
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Line.html
  name: Line
  nameWithType: Line
  fullName: ShapeEngine.Core.Shapes.Line
- uid: ShapeEngine.Core.Shapes.Ray
  commentId: T:ShapeEngine.Core.Shapes.Ray
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Ray.html
  name: Ray
  nameWithType: Ray
  fullName: ShapeEngine.Core.Shapes.Ray
- uid: ShapeEngine.Core.Shapes.Segment
  commentId: T:ShapeEngine.Core.Shapes.Segment
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Segment.html
  name: Segment
  nameWithType: Segment
  fullName: ShapeEngine.Core.Shapes.Segment
- uid: ShapeEngine.Core.Shapes.Circle
  commentId: T:ShapeEngine.Core.Shapes.Circle
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Circle.html
  name: Circle
  nameWithType: Circle
  fullName: ShapeEngine.Core.Shapes.Circle
- uid: ShapeEngine.Core.Shapes.Triangle
  commentId: T:ShapeEngine.Core.Shapes.Triangle
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Triangle.html
  name: Triangle
  nameWithType: Triangle
  fullName: ShapeEngine.Core.Shapes.Triangle
- uid: ShapeEngine.Core.Shapes.Quad
  commentId: T:ShapeEngine.Core.Shapes.Quad
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Quad.html
  name: Quad
  nameWithType: Quad
  fullName: ShapeEngine.Core.Shapes.Quad
- uid: ShapeEngine.Core.Shapes.Rect
  commentId: T:ShapeEngine.Core.Shapes.Rect
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Rect.html
  name: Rect
  nameWithType: Rect
  fullName: ShapeEngine.Core.Shapes.Rect
- uid: ShapeEngine.Core.Shapes.Polygon
  commentId: T:ShapeEngine.Core.Shapes.Polygon
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Polygon.html
  name: Polygon
  nameWithType: Polygon
  fullName: ShapeEngine.Core.Shapes.Polygon
- uid: ShapeEngine.Core.Shapes.Polyline
  commentId: T:ShapeEngine.Core.Shapes.Polyline
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Polyline.html
  name: Polyline
  nameWithType: Polyline
  fullName: ShapeEngine.Core.Shapes.Polyline
- uid: ShapeEngine.Core.Shapes.Segments
  commentId: T:ShapeEngine.Core.Shapes.Segments
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Segments.html
  name: Segments
  nameWithType: Segments
  fullName: ShapeEngine.Core.Shapes.Segments
- uid: ShapeEngine.Core.Shapes.Triangulation.GetClosestSegment*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.GetClosestSegment
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_GetClosestSegment_System_Numerics_Vector2_System_Single__System_Int32__
  name: GetClosestSegment
  nameWithType: Triangulation.GetClosestSegment
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetClosestSegment
- uid: System.ValueTuple{ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.Structs.CollisionPoint}
  commentId: T:System.ValueTuple{ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.Structs.CollisionPoint}
  parent: System
  definition: System.ValueTuple`2
  href: ShapeEngine.Core.Shapes.Segment.html
  name: (Segment segment, CollisionPoint segmentPoint)
  nameWithType: (Segment segment, CollisionPoint segmentPoint)
  fullName: (ShapeEngine.Core.Shapes.Segment segment, ShapeEngine.Core.Structs.CollisionPoint segmentPoint)
  nameWithType.vb: (segment As Segment, segmentPoint As CollisionPoint)
  fullName.vb: (segment As ShapeEngine.Core.Shapes.Segment, segmentPoint As ShapeEngine.Core.Structs.CollisionPoint)
  name.vb: (segment As Segment, segmentPoint As CollisionPoint)
  spec.csharp:
  - name: (
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: " "
  - uid: System.ValueTuple{ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.Structs.CollisionPoint}.segment
    name: segment
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.shapes.segment,shapeengine.core.structs.collisionpoint-.segment
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.CollisionPoint
    name: CollisionPoint
    href: ShapeEngine.Core.Structs.CollisionPoint.html
  - name: " "
  - uid: System.ValueTuple{ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.Structs.CollisionPoint}.segmentPoint
    name: segmentPoint
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.shapes.segment,shapeengine.core.structs.collisionpoint-.segmentpoint
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.Structs.CollisionPoint}.segment
    name: segment
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.shapes.segment,shapeengine.core.structs.collisionpoint-.segment
  - name: " "
  - name: As
  - name: " "
  - uid: ShapeEngine.Core.Shapes.Segment
    name: Segment
    href: ShapeEngine.Core.Shapes.Segment.html
  - name: ','
  - name: " "
  - uid: System.ValueTuple{ShapeEngine.Core.Shapes.Segment,ShapeEngine.Core.Structs.CollisionPoint}.segmentPoint
    name: segmentPoint
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-shapeengine.core.shapes.segment,shapeengine.core.structs.collisionpoint-.segmentpoint
  - name: " "
  - name: As
  - name: " "
  - uid: ShapeEngine.Core.Structs.CollisionPoint
    name: CollisionPoint
    href: ShapeEngine.Core.Structs.CollisionPoint.html
  - name: )
- uid: ShapeEngine.Core.Shapes.Triangulation.ContainsPoint*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.ContainsPoint
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_ContainsPoint_System_Numerics_Vector2_
  name: ContainsPoint
  nameWithType: Triangulation.ContainsPoint
  fullName: ShapeEngine.Core.Shapes.Triangulation.ContainsPoint
- uid: ShapeEngine.Core.Shapes.Triangulation.Overlap*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.Overlap
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_Overlap_ShapeEngine_Core_CollisionSystem_Collider_
  name: Overlap
  nameWithType: Triangulation.Overlap
  fullName: ShapeEngine.Core.Shapes.Triangulation.Overlap
- uid: ShapeEngine.Core.CollisionSystem.Collider
  commentId: T:ShapeEngine.Core.CollisionSystem.Collider
  parent: ShapeEngine.Core.CollisionSystem
  href: ShapeEngine.Core.CollisionSystem.Collider.html
  name: Collider
  nameWithType: Collider
  fullName: ShapeEngine.Core.CollisionSystem.Collider
- uid: ShapeEngine.Core.CollisionSystem
  commentId: N:ShapeEngine.Core.CollisionSystem
  href: ShapeEngine.html
  name: ShapeEngine.Core.CollisionSystem
  nameWithType: ShapeEngine.Core.CollisionSystem
  fullName: ShapeEngine.Core.CollisionSystem
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.CollisionSystem
    name: CollisionSystem
    href: ShapeEngine.Core.CollisionSystem.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.CollisionSystem
    name: CollisionSystem
    href: ShapeEngine.Core.CollisionSystem.html
- uid: ShapeEngine.Core.Shapes.Triangulation.OverlapShape*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.OverlapShape
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_OverlapShape_ShapeEngine_Core_Shapes_Line_
  name: OverlapShape
  nameWithType: Triangulation.OverlapShape
  fullName: ShapeEngine.Core.Shapes.Triangulation.OverlapShape
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<int>
  nameWithType: List<int>
  fullName: System.Collections.Generic.List<int>
  nameWithType.vb: List(Of Integer)
  fullName.vb: System.Collections.Generic.List(Of Integer)
  name.vb: List(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: ShapeEngine.Core.Shapes.Triangulation.Intersect*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.Intersect
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_Intersect_ShapeEngine_Core_CollisionSystem_Collider_
  name: Intersect
  nameWithType: Triangulation.Intersect
  fullName: ShapeEngine.Core.Shapes.Triangulation.Intersect
- uid: System.Collections.Generic.Dictionary{System.Int32,ShapeEngine.Core.CollisionSystem.CollisionPoints}
  commentId: T:System.Collections.Generic.Dictionary{System.Int32,ShapeEngine.Core.CollisionSystem.CollisionPoints}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<int, CollisionPoints>
  nameWithType: Dictionary<int, CollisionPoints>
  fullName: System.Collections.Generic.Dictionary<int, ShapeEngine.Core.CollisionSystem.CollisionPoints>
  nameWithType.vb: Dictionary(Of Integer, CollisionPoints)
  fullName.vb: System.Collections.Generic.Dictionary(Of Integer, ShapeEngine.Core.CollisionSystem.CollisionPoints)
  name.vb: Dictionary(Of Integer, CollisionPoints)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.CollisionSystem.CollisionPoints
    name: CollisionPoints
    href: ShapeEngine.Core.CollisionSystem.CollisionPoints.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.CollisionSystem.CollisionPoints
    name: CollisionPoints
    href: ShapeEngine.Core.CollisionSystem.CollisionPoints.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: ShapeEngine.Core.Shapes.Triangulation.IntersectShape*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.IntersectShape
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_IntersectShape_ShapeEngine_Core_Shapes_Line_
  name: IntersectShape
  nameWithType: Triangulation.IntersectShape
  fullName: ShapeEngine.Core.Shapes.Triangulation.IntersectShape
- uid: ShapeEngine.Core.Shapes.Triangulation.GetUniquePoints*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.GetUniquePoints
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_GetUniquePoints
  name: GetUniquePoints
  nameWithType: Triangulation.GetUniquePoints
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetUniquePoints
- uid: ShapeEngine.Core.Shapes.Points
  commentId: T:ShapeEngine.Core.Shapes.Points
  parent: ShapeEngine.Core.Shapes
  href: ShapeEngine.Core.Shapes.Points.html
  name: Points
  nameWithType: Points
  fullName: ShapeEngine.Core.Shapes.Points
- uid: ShapeEngine.Core.Shapes.Triangulation.GetUniqueSegments*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.GetUniqueSegments
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_GetUniqueSegments
  name: GetUniqueSegments
  nameWithType: Triangulation.GetUniqueSegments
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetUniqueSegments
- uid: ShapeEngine.Core.Shapes.Triangulation.GetUniqueTriangles*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.GetUniqueTriangles
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_GetUniqueTriangles
  name: GetUniqueTriangles
  nameWithType: Triangulation.GetUniqueTriangles
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetUniqueTriangles
- uid: ShapeEngine.Core.Shapes.Triangulation.GetContainingTriangles*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.GetContainingTriangles
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_GetContainingTriangles_System_Numerics_Vector2_
  name: GetContainingTriangles
  nameWithType: Triangulation.GetContainingTriangles
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetContainingTriangles
- uid: ShapeEngine.Core.Shapes.Triangulation.GetSegment*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.GetSegment
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_GetSegment_System_Int32_System_Int32_
  name: GetSegment
  nameWithType: Triangulation.GetSegment
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetSegment
- uid: ShapeEngine.Core.Shapes.Triangulation.GetArea*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.GetArea
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_GetArea
  name: GetArea
  nameWithType: Triangulation.GetArea
  fullName: ShapeEngine.Core.Shapes.Triangulation.GetArea
- uid: ShapeEngine.Core.Shapes.Triangulation.Remove*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.Remove
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_Remove_System_Single_
  name: Remove
  nameWithType: Triangulation.Remove
  fullName: ShapeEngine.Core.Shapes.Triangulation.Remove
- uid: ShapeEngine.Core.Shapes.Triangulation.ChangeRotation*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.ChangeRotation
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_ChangeRotation_System_Single_
  name: ChangeRotation
  nameWithType: Triangulation.ChangeRotation
  fullName: ShapeEngine.Core.Shapes.Triangulation.ChangeRotation
- uid: ShapeEngine.Core.Shapes.Triangulation.SetRotation*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.SetRotation
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_SetRotation_System_Single_
  name: SetRotation
  nameWithType: Triangulation.SetRotation
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetRotation
- uid: ShapeEngine.Core.Shapes.Triangulation.ScaleSize*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.ScaleSize
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_ScaleSize_System_Single_
  name: ScaleSize
  nameWithType: Triangulation.ScaleSize
  fullName: ShapeEngine.Core.Shapes.Triangulation.ScaleSize
- uid: ShapeEngine.Core.Structs.Size
  commentId: T:ShapeEngine.Core.Structs.Size
  parent: ShapeEngine.Core.Structs
  href: ShapeEngine.Core.Structs.Size.html
  name: Size
  nameWithType: Size
  fullName: ShapeEngine.Core.Structs.Size
- uid: ShapeEngine.Core.Shapes.Triangulation.ChangeSize*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.ChangeSize
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_ChangeSize_System_Single_
  name: ChangeSize
  nameWithType: Triangulation.ChangeSize
  fullName: ShapeEngine.Core.Shapes.Triangulation.ChangeSize
- uid: ShapeEngine.Core.Shapes.Triangulation.SetSize*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.SetSize
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_SetSize_System_Single_
  name: SetSize
  nameWithType: Triangulation.SetSize
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetSize
- uid: ShapeEngine.Core.Shapes.Triangulation.ChangePosition*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.ChangePosition
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_ChangePosition_System_Numerics_Vector2_
  name: ChangePosition
  nameWithType: Triangulation.ChangePosition
  fullName: ShapeEngine.Core.Shapes.Triangulation.ChangePosition
- uid: ShapeEngine.Core.Shapes.Triangulation.SetPosition*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.SetPosition
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_SetPosition_System_Numerics_Vector2_System_Numerics_Vector2_
  name: SetPosition
  nameWithType: Triangulation.SetPosition
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetPosition
- uid: ShapeEngine.Core.Shapes.Triangulation.ApplyOffset*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.ApplyOffset
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_ApplyOffset_ShapeEngine_Core_Structs_Transform2D_System_Numerics_Vector2_
  name: ApplyOffset
  nameWithType: Triangulation.ApplyOffset
  fullName: ShapeEngine.Core.Shapes.Triangulation.ApplyOffset
- uid: ShapeEngine.Core.Structs.Transform2D
  commentId: T:ShapeEngine.Core.Structs.Transform2D
  parent: ShapeEngine.Core.Structs
  href: ShapeEngine.Core.Structs.Transform2D.html
  name: Transform2D
  nameWithType: Transform2D
  fullName: ShapeEngine.Core.Structs.Transform2D
- uid: ShapeEngine.Core.Shapes.Triangulation.SetTransform*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.SetTransform
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_SetTransform_ShapeEngine_Core_Structs_Transform2D_System_Numerics_Vector2_
  name: SetTransform
  nameWithType: Triangulation.SetTransform
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetTransform
- uid: ShapeEngine.Core.Shapes.Triangulation.ChangeRotationCopy*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.ChangeRotationCopy
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_ChangeRotationCopy_System_Single_
  name: ChangeRotationCopy
  nameWithType: Triangulation.ChangeRotationCopy
  fullName: ShapeEngine.Core.Shapes.Triangulation.ChangeRotationCopy
- uid: ShapeEngine.Core.Shapes.Triangulation.SetRotationCopy*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.SetRotationCopy
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_SetRotationCopy_System_Single_
  name: SetRotationCopy
  nameWithType: Triangulation.SetRotationCopy
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetRotationCopy
- uid: ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_ScaleSizeCopy_System_Single_
  name: ScaleSizeCopy
  nameWithType: Triangulation.ScaleSizeCopy
  fullName: ShapeEngine.Core.Shapes.Triangulation.ScaleSizeCopy
- uid: ShapeEngine.Core.Shapes.Triangulation.ChangeSizeCopy*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.ChangeSizeCopy
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_ChangeSizeCopy_System_Single_
  name: ChangeSizeCopy
  nameWithType: Triangulation.ChangeSizeCopy
  fullName: ShapeEngine.Core.Shapes.Triangulation.ChangeSizeCopy
- uid: ShapeEngine.Core.Shapes.Triangulation.SetSizeCopy*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.SetSizeCopy
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_SetSizeCopy_System_Single_
  name: SetSizeCopy
  nameWithType: Triangulation.SetSizeCopy
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetSizeCopy
- uid: ShapeEngine.Core.Shapes.Triangulation.ChangePositionCopy*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.ChangePositionCopy
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_ChangePositionCopy_System_Numerics_Vector2_
  name: ChangePositionCopy
  nameWithType: Triangulation.ChangePositionCopy
  fullName: ShapeEngine.Core.Shapes.Triangulation.ChangePositionCopy
- uid: ShapeEngine.Core.Shapes.Triangulation.SetPositionCopy*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.SetPositionCopy
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_SetPositionCopy_System_Numerics_Vector2_System_Numerics_Vector2_
  name: SetPositionCopy
  nameWithType: Triangulation.SetPositionCopy
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetPositionCopy
- uid: ShapeEngine.Core.Shapes.Triangulation.ApplyOffsetCopy*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.ApplyOffsetCopy
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_ApplyOffsetCopy_ShapeEngine_Core_Structs_Transform2D_System_Numerics_Vector2_
  name: ApplyOffsetCopy
  nameWithType: Triangulation.ApplyOffsetCopy
  fullName: ShapeEngine.Core.Shapes.Triangulation.ApplyOffsetCopy
- uid: ShapeEngine.Core.Shapes.Triangulation.SetTransformCopy*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.SetTransformCopy
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_SetTransformCopy_ShapeEngine_Core_Structs_Transform2D_System_Numerics_Vector2_
  name: SetTransformCopy
  nameWithType: Triangulation.SetTransformCopy
  fullName: ShapeEngine.Core.Shapes.Triangulation.SetTransformCopy
- uid: ShapeEngine.Core.Shapes.Triangulation.Get*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.Get
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_Get_System_Single_
  name: Get
  nameWithType: Triangulation.Get
  fullName: ShapeEngine.Core.Shapes.Triangulation.Get
- uid: ShapeEngine.Core.Shapes.Triangulation.Subdivide*
  commentId: Overload:ShapeEngine.Core.Shapes.Triangulation.Subdivide
  href: ShapeEngine.Core.Shapes.Triangulation.html#ShapeEngine_Core_Shapes_Triangulation_Subdivide_System_Single_
  name: Subdivide
  nameWithType: Triangulation.Subdivide
  fullName: ShapeEngine.Core.Shapes.Triangulation.Subdivide
