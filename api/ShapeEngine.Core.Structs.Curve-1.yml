### YamlMime:ManagedReference
items:
- uid: ShapeEngine.Core.Structs.Curve`1
  commentId: T:ShapeEngine.Core.Structs.Curve`1
  id: Curve`1
  parent: ShapeEngine.Core.Structs
  children:
  - ShapeEngine.Core.Structs.Curve`1.#ctor(System.Int32)
  - ShapeEngine.Core.Structs.Curve`1.Add(System.Single,`0)
  - ShapeEngine.Core.Structs.Curve`1.Add(System.ValueTuple{System.Single,`0}[])
  - ShapeEngine.Core.Structs.Curve`1.GetDefaultValue
  - ShapeEngine.Core.Structs.Curve`1.GetIndex(System.Single)
  - ShapeEngine.Core.Structs.Curve`1.GetValue(System.Single,`0@)
  - ShapeEngine.Core.Structs.Curve`1.HasKeys
  - ShapeEngine.Core.Structs.Curve`1.Interpolate(`0,`0,System.Single)
  - ShapeEngine.Core.Structs.Curve`1.Remove(System.Single,System.Single)
  - ShapeEngine.Core.Structs.Curve`1.Remove(`0)
  - ShapeEngine.Core.Structs.Curve`1.Remove(`0[])
  - ShapeEngine.Core.Structs.Curve`1.RemoveTimeRange(System.Single,System.Single)
  - ShapeEngine.Core.Structs.Curve`1.Sample(System.Single)
  - ShapeEngine.Core.Structs.Curve`1.Sample(System.Single,`0@)
  - ShapeEngine.Core.Structs.Curve`1.SampleMany(System.Single[])
  langs:
  - csharp
  - vb
  name: Curve<T>
  nameWithType: Curve<T>
  fullName: ShapeEngine.Core.Structs.Curve<T>
  type: Class
  source:
    remote:
      path: ShapeEngine/Core/Structs/Curve.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Curve
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Curve.cs
    startLine: 6
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: 'public abstract class Curve<T> : SortedList<float, T>, IDictionary<float, T>, ICollection<KeyValuePair<float, T>>, IReadOnlyDictionary<float, T>, IReadOnlyCollection<KeyValuePair<float, T>>, IEnumerable<KeyValuePair<float, T>>, IDictionary, ICollection, IEnumerable'
    typeParameters:
    - id: T
    content.vb: Public MustInherit Class Curve(Of T) Inherits SortedList(Of Single, T) Implements IDictionary(Of Single, T), ICollection(Of KeyValuePair(Of Single, T)), IReadOnlyDictionary(Of Single, T), IReadOnlyCollection(Of KeyValuePair(Of Single, T)), IEnumerable(Of KeyValuePair(Of Single, T)), IDictionary, ICollection, IEnumerable
  inheritance:
  - System.Object
  - System.Collections.Generic.SortedList{System.Single,{T}}
  derivedClasses:
  - ShapeEngine.Core.Structs.CurveColor
  - ShapeEngine.Core.Structs.CurveFloat
  - ShapeEngine.Core.Structs.CurveInt
  - ShapeEngine.Core.Structs.CurveVector2
  implements:
  - System.Collections.Generic.IDictionary{System.Single,{T}}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Single,{T}}}
  - System.Collections.Generic.IReadOnlyDictionary{System.Single,{T}}
  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.Single,{T}}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Single,{T}}}
  - System.Collections.IDictionary
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Collections.Generic.SortedList{System.Single,{T}}.Add(System.Single,{T})
  - System.Collections.Generic.SortedList{System.Single,{T}}.Clear
  - System.Collections.Generic.SortedList{System.Single,{T}}.ContainsKey(System.Single)
  - System.Collections.Generic.SortedList{System.Single,{T}}.ContainsValue({T})
  - System.Collections.Generic.SortedList{System.Single,{T}}.GetEnumerator
  - System.Collections.Generic.SortedList{System.Single,{T}}.GetKeyAtIndex(System.Int32)
  - System.Collections.Generic.SortedList{System.Single,{T}}.GetValueAtIndex(System.Int32)
  - System.Collections.Generic.SortedList{System.Single,{T}}.IndexOfKey(System.Single)
  - System.Collections.Generic.SortedList{System.Single,{T}}.IndexOfValue({T})
  - System.Collections.Generic.SortedList{System.Single,{T}}.Remove(System.Single)
  - System.Collections.Generic.SortedList{System.Single,{T}}.RemoveAt(System.Int32)
  - System.Collections.Generic.SortedList{System.Single,{T}}.SetValueAtIndex(System.Int32,{T})
  - System.Collections.Generic.SortedList{System.Single,{T}}.TrimExcess
  - System.Collections.Generic.SortedList{System.Single,{T}}.TryGetValue(System.Single,{T}@)
  - System.Collections.Generic.SortedList{System.Single,{T}}.Capacity
  - System.Collections.Generic.SortedList{System.Single,{T}}.Comparer
  - System.Collections.Generic.SortedList{System.Single,{T}}.Count
  - System.Collections.Generic.SortedList{System.Single,{T}}.Item(System.Single)
  - System.Collections.Generic.SortedList{System.Single,{T}}.Keys
  - System.Collections.Generic.SortedList{System.Single,{T}}.Values
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Curve(Of T)
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T)
  name.vb: Curve(Of T)
- uid: ShapeEngine.Core.Structs.Curve`1.#ctor(System.Int32)
  commentId: M:ShapeEngine.Core.Structs.Curve`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: ShapeEngine.Core.Structs.Curve`1
  langs:
  - csharp
  - vb
  name: Curve(int)
  nameWithType: Curve<T>.Curve(int)
  fullName: ShapeEngine.Core.Structs.Curve<T>.Curve(int)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Structs/Curve.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Curve.cs
    startLine: 6
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: protected Curve(int capacity)
    parameters:
    - id: capacity
      type: System.Int32
    content.vb: Protected Sub New(capacity As Integer)
  overload: ShapeEngine.Core.Structs.Curve`1.#ctor*
  nameWithType.vb: Curve(Of T).New(Integer)
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).New(Integer)
  name.vb: New(Integer)
- uid: ShapeEngine.Core.Structs.Curve`1.HasKeys
  commentId: P:ShapeEngine.Core.Structs.Curve`1.HasKeys
  id: HasKeys
  parent: ShapeEngine.Core.Structs.Curve`1
  langs:
  - csharp
  - vb
  name: HasKeys
  nameWithType: Curve<T>.HasKeys
  fullName: ShapeEngine.Core.Structs.Curve<T>.HasKeys
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/Curve.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: HasKeys
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Curve.cs
    startLine: 8
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool HasKeys { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasKeys As Boolean
  overload: ShapeEngine.Core.Structs.Curve`1.HasKeys*
  nameWithType.vb: Curve(Of T).HasKeys
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).HasKeys
- uid: ShapeEngine.Core.Structs.Curve`1.Add(System.Single,`0)
  commentId: M:ShapeEngine.Core.Structs.Curve`1.Add(System.Single,`0)
  id: Add(System.Single,`0)
  parent: ShapeEngine.Core.Structs.Curve`1
  langs:
  - csharp
  - vb
  name: Add(float, T)
  nameWithType: Curve<T>.Add(float, T)
  fullName: ShapeEngine.Core.Structs.Curve<T>.Add(float, T)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Curve.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Add
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Curve.cs
    startLine: 9
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool Add(float time, T key)
    parameters:
    - id: time
      type: System.Single
    - id: key
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Function Add(time As Single, key As T) As Boolean
  overload: ShapeEngine.Core.Structs.Curve`1.Add*
  nameWithType.vb: Curve(Of T).Add(Single, T)
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).Add(Single, T)
  name.vb: Add(Single, T)
- uid: ShapeEngine.Core.Structs.Curve`1.Add(System.ValueTuple{System.Single,`0}[])
  commentId: M:ShapeEngine.Core.Structs.Curve`1.Add(System.ValueTuple{System.Single,`0}[])
  id: Add(System.ValueTuple{System.Single,`0}[])
  parent: ShapeEngine.Core.Structs.Curve`1
  langs:
  - csharp
  - vb
  name: Add(params (float time, T key)[])
  nameWithType: Curve<T>.Add(params (float time, T key)[])
  fullName: ShapeEngine.Core.Structs.Curve<T>.Add(params (float time, T key)[])
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Curve.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Add
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Curve.cs
    startLine: 15
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public int Add(params (float time, T key)[] keys)
    parameters:
    - id: keys
      type: System.ValueTuple{System.Single,{T}}[]
    return:
      type: System.Int32
    content.vb: Public Function Add(ParamArray keys As (time As Single, key As T)()) As Integer
  overload: ShapeEngine.Core.Structs.Curve`1.Add*
  nameWithType.vb: Curve(Of T).Add(ParamArray (time As Single, key As T)())
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).Add(ParamArray (time As Single, key As T)())
  name.vb: Add(ParamArray (time As Single, key As T)())
- uid: ShapeEngine.Core.Structs.Curve`1.GetIndex(System.Single)
  commentId: M:ShapeEngine.Core.Structs.Curve`1.GetIndex(System.Single)
  id: GetIndex(System.Single)
  parent: ShapeEngine.Core.Structs.Curve`1
  langs:
  - csharp
  - vb
  name: GetIndex(float)
  nameWithType: Curve<T>.GetIndex(float)
  fullName: ShapeEngine.Core.Structs.Curve<T>.GetIndex(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Curve.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetIndex
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Curve.cs
    startLine: 26
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public int GetIndex(float time)
    parameters:
    - id: time
      type: System.Single
    return:
      type: System.Int32
    content.vb: Public Function GetIndex(time As Single) As Integer
  overload: ShapeEngine.Core.Structs.Curve`1.GetIndex*
  nameWithType.vb: Curve(Of T).GetIndex(Single)
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).GetIndex(Single)
  name.vb: GetIndex(Single)
- uid: ShapeEngine.Core.Structs.Curve`1.GetValue(System.Single,`0@)
  commentId: M:ShapeEngine.Core.Structs.Curve`1.GetValue(System.Single,`0@)
  id: GetValue(System.Single,`0@)
  parent: ShapeEngine.Core.Structs.Curve`1
  langs:
  - csharp
  - vb
  name: GetValue(float, out T)
  nameWithType: Curve<T>.GetValue(float, out T)
  fullName: ShapeEngine.Core.Structs.Curve<T>.GetValue(float, out T)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Curve.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetValue
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Curve.cs
    startLine: 55
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool GetValue(float time, out T value)
    parameters:
    - id: time
      type: System.Single
    - id: value
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Function GetValue(time As Single, value As T) As Boolean
  overload: ShapeEngine.Core.Structs.Curve`1.GetValue*
  nameWithType.vb: Curve(Of T).GetValue(Single, T)
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).GetValue(Single, T)
  name.vb: GetValue(Single, T)
- uid: ShapeEngine.Core.Structs.Curve`1.RemoveTimeRange(System.Single,System.Single)
  commentId: M:ShapeEngine.Core.Structs.Curve`1.RemoveTimeRange(System.Single,System.Single)
  id: RemoveTimeRange(System.Single,System.Single)
  parent: ShapeEngine.Core.Structs.Curve`1
  langs:
  - csharp
  - vb
  name: RemoveTimeRange(float, float)
  nameWithType: Curve<T>.RemoveTimeRange(float, float)
  fullName: ShapeEngine.Core.Structs.Curve<T>.RemoveTimeRange(float, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Curve.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: RemoveTimeRange
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Curve.cs
    startLine: 67
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public int RemoveTimeRange(float timeStart, float timeEnd)
    parameters:
    - id: timeStart
      type: System.Single
    - id: timeEnd
      type: System.Single
    return:
      type: System.Int32
    content.vb: Public Function RemoveTimeRange(timeStart As Single, timeEnd As Single) As Integer
  overload: ShapeEngine.Core.Structs.Curve`1.RemoveTimeRange*
  nameWithType.vb: Curve(Of T).RemoveTimeRange(Single, Single)
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).RemoveTimeRange(Single, Single)
  name.vb: RemoveTimeRange(Single, Single)
- uid: ShapeEngine.Core.Structs.Curve`1.Remove(System.Single,System.Single)
  commentId: M:ShapeEngine.Core.Structs.Curve`1.Remove(System.Single,System.Single)
  id: Remove(System.Single,System.Single)
  parent: ShapeEngine.Core.Structs.Curve`1
  langs:
  - csharp
  - vb
  name: Remove(float, float)
  nameWithType: Curve<T>.Remove(float, float)
  fullName: ShapeEngine.Core.Structs.Curve<T>.Remove(float, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Curve.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Remove
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Curve.cs
    startLine: 91
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public int Remove(float time, float tolerance)
    parameters:
    - id: time
      type: System.Single
    - id: tolerance
      type: System.Single
    return:
      type: System.Int32
    content.vb: Public Function Remove(time As Single, tolerance As Single) As Integer
  overload: ShapeEngine.Core.Structs.Curve`1.Remove*
  nameWithType.vb: Curve(Of T).Remove(Single, Single)
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).Remove(Single, Single)
  name.vb: Remove(Single, Single)
- uid: ShapeEngine.Core.Structs.Curve`1.Remove(`0)
  commentId: M:ShapeEngine.Core.Structs.Curve`1.Remove(`0)
  id: Remove(`0)
  parent: ShapeEngine.Core.Structs.Curve`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: Curve<T>.Remove(T)
  fullName: ShapeEngine.Core.Structs.Curve<T>.Remove(T)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Curve.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Remove
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Curve.cs
    startLine: 109
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool Remove(T value)
    parameters:
    - id: value
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Function Remove(value As T) As Boolean
  overload: ShapeEngine.Core.Structs.Curve`1.Remove*
  nameWithType.vb: Curve(Of T).Remove(T)
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).Remove(T)
- uid: ShapeEngine.Core.Structs.Curve`1.Remove(`0[])
  commentId: M:ShapeEngine.Core.Structs.Curve`1.Remove(`0[])
  id: Remove(`0[])
  parent: ShapeEngine.Core.Structs.Curve`1
  langs:
  - csharp
  - vb
  name: Remove(params T[])
  nameWithType: Curve<T>.Remove(params T[])
  fullName: ShapeEngine.Core.Structs.Curve<T>.Remove(params T[])
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Curve.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Remove
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Curve.cs
    startLine: 116
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public int Remove(params T[] values)
    parameters:
    - id: values
      type: '{T}[]'
    return:
      type: System.Int32
    content.vb: Public Function Remove(ParamArray values As T()) As Integer
  overload: ShapeEngine.Core.Structs.Curve`1.Remove*
  nameWithType.vb: Curve(Of T).Remove(ParamArray T())
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).Remove(ParamArray T())
  name.vb: Remove(ParamArray T())
- uid: ShapeEngine.Core.Structs.Curve`1.Sample(System.Single,`0@)
  commentId: M:ShapeEngine.Core.Structs.Curve`1.Sample(System.Single,`0@)
  id: Sample(System.Single,`0@)
  parent: ShapeEngine.Core.Structs.Curve`1
  langs:
  - csharp
  - vb
  name: Sample(float, out T)
  nameWithType: Curve<T>.Sample(float, out T)
  fullName: ShapeEngine.Core.Structs.Curve<T>.Sample(float, out T)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Curve.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Sample
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Curve.cs
    startLine: 126
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool Sample(float time, out T value)
    parameters:
    - id: time
      type: System.Single
    - id: value
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Function Sample(time As Single, value As T) As Boolean
  overload: ShapeEngine.Core.Structs.Curve`1.Sample*
  nameWithType.vb: Curve(Of T).Sample(Single, T)
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).Sample(Single, T)
  name.vb: Sample(Single, T)
- uid: ShapeEngine.Core.Structs.Curve`1.Sample(System.Single)
  commentId: M:ShapeEngine.Core.Structs.Curve`1.Sample(System.Single)
  id: Sample(System.Single)
  parent: ShapeEngine.Core.Structs.Curve`1
  langs:
  - csharp
  - vb
  name: Sample(float)
  nameWithType: Curve<T>.Sample(float)
  fullName: ShapeEngine.Core.Structs.Curve<T>.Sample(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Curve.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Sample
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Curve.cs
    startLine: 175
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public T Sample(float time)
    parameters:
    - id: time
      type: System.Single
    return:
      type: '{T}'
    content.vb: Public Function Sample(time As Single) As T
  overload: ShapeEngine.Core.Structs.Curve`1.Sample*
  nameWithType.vb: Curve(Of T).Sample(Single)
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).Sample(Single)
  name.vb: Sample(Single)
- uid: ShapeEngine.Core.Structs.Curve`1.SampleMany(System.Single[])
  commentId: M:ShapeEngine.Core.Structs.Curve`1.SampleMany(System.Single[])
  id: SampleMany(System.Single[])
  parent: ShapeEngine.Core.Structs.Curve`1
  langs:
  - csharp
  - vb
  name: SampleMany(params float[])
  nameWithType: Curve<T>.SampleMany(params float[])
  fullName: ShapeEngine.Core.Structs.Curve<T>.SampleMany(params float[])
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Curve.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: SampleMany
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Curve.cs
    startLine: 182
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public List<T>? SampleMany(params float[] times)
    parameters:
    - id: times
      type: System.Single[]
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: Public Function SampleMany(ParamArray times As Single()) As List(Of T)
  overload: ShapeEngine.Core.Structs.Curve`1.SampleMany*
  nameWithType.vb: Curve(Of T).SampleMany(ParamArray Single())
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).SampleMany(ParamArray Single())
  name.vb: SampleMany(ParamArray Single())
- uid: ShapeEngine.Core.Structs.Curve`1.Interpolate(`0,`0,System.Single)
  commentId: M:ShapeEngine.Core.Structs.Curve`1.Interpolate(`0,`0,System.Single)
  id: Interpolate(`0,`0,System.Single)
  parent: ShapeEngine.Core.Structs.Curve`1
  langs:
  - csharp
  - vb
  name: Interpolate(T, T, float)
  nameWithType: Curve<T>.Interpolate(T, T, float)
  fullName: ShapeEngine.Core.Structs.Curve<T>.Interpolate(T, T, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Curve.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Interpolate
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Curve.cs
    startLine: 196
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: protected abstract T Interpolate(T a, T b, float time)
    parameters:
    - id: a
      type: '{T}'
    - id: b
      type: '{T}'
    - id: time
      type: System.Single
    return:
      type: '{T}'
    content.vb: Protected MustOverride Function Interpolate(a As T, b As T, time As Single) As T
  overload: ShapeEngine.Core.Structs.Curve`1.Interpolate*
  nameWithType.vb: Curve(Of T).Interpolate(T, T, Single)
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).Interpolate(T, T, Single)
  name.vb: Interpolate(T, T, Single)
- uid: ShapeEngine.Core.Structs.Curve`1.GetDefaultValue
  commentId: M:ShapeEngine.Core.Structs.Curve`1.GetDefaultValue
  id: GetDefaultValue
  parent: ShapeEngine.Core.Structs.Curve`1
  langs:
  - csharp
  - vb
  name: GetDefaultValue()
  nameWithType: Curve<T>.GetDefaultValue()
  fullName: ShapeEngine.Core.Structs.Curve<T>.GetDefaultValue()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/Curve.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetDefaultValue
    path: ../ShapeEngine/ShapeEngine/Core/Structs/Curve.cs
    startLine: 197
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: protected abstract T GetDefaultValue()
    return:
      type: '{T}'
    content.vb: Protected MustOverride Function GetDefaultValue() As T
  overload: ShapeEngine.Core.Structs.Curve`1.GetDefaultValue*
  nameWithType.vb: Curve(Of T).GetDefaultValue()
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).GetDefaultValue()
references:
- uid: ShapeEngine.Core.Structs
  commentId: N:ShapeEngine.Core.Structs
  href: ShapeEngine.html
  name: ShapeEngine.Core.Structs
  nameWithType: ShapeEngine.Core.Structs
  fullName: ShapeEngine.Core.Structs
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Structs
    name: Structs
    href: ShapeEngine.Core.Structs.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Structs
    name: Structs
    href: ShapeEngine.Core.Structs.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.SortedList{System.Single,{T}}
  commentId: T:System.Collections.Generic.SortedList{System.Single,`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.SortedList`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2
  name: SortedList<float, T>
  nameWithType: SortedList<float, T>
  fullName: System.Collections.Generic.SortedList<float, T>
  nameWithType.vb: SortedList(Of Single, T)
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T)
  name.vb: SortedList(Of Single, T)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList`2
    name: SortedList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.SortedList`2
    name: SortedList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IDictionary{System.Single,{T}}
  commentId: T:System.Collections.Generic.IDictionary{System.Single,`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<float, T>
  nameWithType: IDictionary<float, T>
  fullName: System.Collections.Generic.IDictionary<float, T>
  nameWithType.vb: IDictionary(Of Single, T)
  fullName.vb: System.Collections.Generic.IDictionary(Of Single, T)
  name.vb: IDictionary(Of Single, T)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Single,{T}}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Single,`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<KeyValuePair<float, T>>
  nameWithType: ICollection<KeyValuePair<float, T>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<float, T>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of Single, T))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of Single, T))
  name.vb: ICollection(Of KeyValuePair(Of Single, T))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary{System.Single,{T}}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{System.Single,`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<float, T>
  nameWithType: IReadOnlyDictionary<float, T>
  fullName: System.Collections.Generic.IReadOnlyDictionary<float, T>
  nameWithType.vb: IReadOnlyDictionary(Of Single, T)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of Single, T)
  name.vb: IReadOnlyDictionary(Of Single, T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.Single,{T}}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{System.Single,`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<KeyValuePair<float, T>>
  nameWithType: IReadOnlyCollection<KeyValuePair<float, T>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<float, T>>
  nameWithType.vb: IReadOnlyCollection(Of KeyValuePair(Of Single, T))
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Collections.Generic.KeyValuePair(Of Single, T))
  name.vb: IReadOnlyCollection(Of KeyValuePair(Of Single, T))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Single,{T}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Single,`0}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<float, T>>
  nameWithType: IEnumerable<KeyValuePair<float, T>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<float, T>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Single, T))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of Single, T))
  name.vb: IEnumerable(Of KeyValuePair(Of Single, T))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.idictionary
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.icollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.Add(System.Single,{T})
  commentId: M:System.Collections.Generic.SortedList{System.Single,`0}.Add(System.Single,`0)
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.Add(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.add
  name: Add(float, T)
  nameWithType: SortedList<float, T>.Add(float, T)
  fullName: System.Collections.Generic.SortedList<float, T>.Add(float, T)
  nameWithType.vb: SortedList(Of Single, T).Add(Single, T)
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).Add(Single, T)
  name.vb: Add(Single, T)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.Add(System.Single,`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.add
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.Add(System.Single,`0)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.add
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.Clear
  commentId: M:System.Collections.Generic.SortedList{System.Single,`0}.Clear
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.clear
  name: Clear()
  nameWithType: SortedList<float, T>.Clear()
  fullName: System.Collections.Generic.SortedList<float, T>.Clear()
  nameWithType.vb: SortedList(Of Single, T).Clear()
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.ContainsKey(System.Single)
  commentId: M:System.Collections.Generic.SortedList{System.Single,`0}.ContainsKey(System.Single)
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.ContainsKey(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.containskey
  name: ContainsKey(float)
  nameWithType: SortedList<float, T>.ContainsKey(float)
  fullName: System.Collections.Generic.SortedList<float, T>.ContainsKey(float)
  nameWithType.vb: SortedList(Of Single, T).ContainsKey(Single)
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).ContainsKey(Single)
  name.vb: ContainsKey(Single)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.ContainsKey(System.Single)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.containskey
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.ContainsKey(System.Single)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.containskey
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.ContainsValue({T})
  commentId: M:System.Collections.Generic.SortedList{System.Single,`0}.ContainsValue(`0)
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.ContainsValue(`1)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.containsvalue
  name: ContainsValue(T)
  nameWithType: SortedList<float, T>.ContainsValue(T)
  fullName: System.Collections.Generic.SortedList<float, T>.ContainsValue(T)
  nameWithType.vb: SortedList(Of Single, T).ContainsValue(T)
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).ContainsValue(T)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.ContainsValue(`0)
    name: ContainsValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.containsvalue
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.ContainsValue(`0)
    name: ContainsValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.containsvalue
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.SortedList{System.Single,`0}.GetEnumerator
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.getenumerator
  name: GetEnumerator()
  nameWithType: SortedList<float, T>.GetEnumerator()
  fullName: System.Collections.Generic.SortedList<float, T>.GetEnumerator()
  nameWithType.vb: SortedList(Of Single, T).GetEnumerator()
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.GetKeyAtIndex(System.Int32)
  commentId: M:System.Collections.Generic.SortedList{System.Single,`0}.GetKeyAtIndex(System.Int32)
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.GetKeyAtIndex(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.getkeyatindex
  name: GetKeyAtIndex(int)
  nameWithType: SortedList<float, T>.GetKeyAtIndex(int)
  fullName: System.Collections.Generic.SortedList<float, T>.GetKeyAtIndex(int)
  nameWithType.vb: SortedList(Of Single, T).GetKeyAtIndex(Integer)
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).GetKeyAtIndex(Integer)
  name.vb: GetKeyAtIndex(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.GetKeyAtIndex(System.Int32)
    name: GetKeyAtIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.getkeyatindex
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.GetKeyAtIndex(System.Int32)
    name: GetKeyAtIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.getkeyatindex
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.GetValueAtIndex(System.Int32)
  commentId: M:System.Collections.Generic.SortedList{System.Single,`0}.GetValueAtIndex(System.Int32)
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.GetValueAtIndex(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.getvalueatindex
  name: GetValueAtIndex(int)
  nameWithType: SortedList<float, T>.GetValueAtIndex(int)
  fullName: System.Collections.Generic.SortedList<float, T>.GetValueAtIndex(int)
  nameWithType.vb: SortedList(Of Single, T).GetValueAtIndex(Integer)
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).GetValueAtIndex(Integer)
  name.vb: GetValueAtIndex(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.GetValueAtIndex(System.Int32)
    name: GetValueAtIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.getvalueatindex
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.GetValueAtIndex(System.Int32)
    name: GetValueAtIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.getvalueatindex
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.IndexOfKey(System.Single)
  commentId: M:System.Collections.Generic.SortedList{System.Single,`0}.IndexOfKey(System.Single)
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.IndexOfKey(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.indexofkey
  name: IndexOfKey(float)
  nameWithType: SortedList<float, T>.IndexOfKey(float)
  fullName: System.Collections.Generic.SortedList<float, T>.IndexOfKey(float)
  nameWithType.vb: SortedList(Of Single, T).IndexOfKey(Single)
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).IndexOfKey(Single)
  name.vb: IndexOfKey(Single)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.IndexOfKey(System.Single)
    name: IndexOfKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.indexofkey
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.IndexOfKey(System.Single)
    name: IndexOfKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.indexofkey
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.IndexOfValue({T})
  commentId: M:System.Collections.Generic.SortedList{System.Single,`0}.IndexOfValue(`0)
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.IndexOfValue(`1)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.indexofvalue
  name: IndexOfValue(T)
  nameWithType: SortedList<float, T>.IndexOfValue(T)
  fullName: System.Collections.Generic.SortedList<float, T>.IndexOfValue(T)
  nameWithType.vb: SortedList(Of Single, T).IndexOfValue(T)
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).IndexOfValue(T)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.IndexOfValue(`0)
    name: IndexOfValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.indexofvalue
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.IndexOfValue(`0)
    name: IndexOfValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.indexofvalue
  - name: (
  - name: T
  - name: )
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.Remove(System.Single)
  commentId: M:System.Collections.Generic.SortedList{System.Single,`0}.Remove(System.Single)
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.remove
  name: Remove(float)
  nameWithType: SortedList<float, T>.Remove(float)
  fullName: System.Collections.Generic.SortedList<float, T>.Remove(float)
  nameWithType.vb: SortedList(Of Single, T).Remove(Single)
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).Remove(Single)
  name.vb: Remove(Single)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.Remove(System.Single)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.remove
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.Remove(System.Single)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.remove
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.SortedList{System.Single,`0}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.removeat
  name: RemoveAt(int)
  nameWithType: SortedList<float, T>.RemoveAt(int)
  fullName: System.Collections.Generic.SortedList<float, T>.RemoveAt(int)
  nameWithType.vb: SortedList(Of Single, T).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.SetValueAtIndex(System.Int32,{T})
  commentId: M:System.Collections.Generic.SortedList{System.Single,`0}.SetValueAtIndex(System.Int32,`0)
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.SetValueAtIndex(System.Int32,`1)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.setvalueatindex
  name: SetValueAtIndex(int, T)
  nameWithType: SortedList<float, T>.SetValueAtIndex(int, T)
  fullName: System.Collections.Generic.SortedList<float, T>.SetValueAtIndex(int, T)
  nameWithType.vb: SortedList(Of Single, T).SetValueAtIndex(Integer, T)
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).SetValueAtIndex(Integer, T)
  name.vb: SetValueAtIndex(Integer, T)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.SetValueAtIndex(System.Int32,`0)
    name: SetValueAtIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.setvalueatindex
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.SetValueAtIndex(System.Int32,`0)
    name: SetValueAtIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.setvalueatindex
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.TrimExcess
  commentId: M:System.Collections.Generic.SortedList{System.Single,`0}.TrimExcess
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.TrimExcess
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.trimexcess
  name: TrimExcess()
  nameWithType: SortedList<float, T>.TrimExcess()
  fullName: System.Collections.Generic.SortedList<float, T>.TrimExcess()
  nameWithType.vb: SortedList(Of Single, T).TrimExcess()
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.TrimExcess
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.trimexcess
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.TrimExcess
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.trimexcess
  - name: (
  - name: )
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.TryGetValue(System.Single,{T}@)
  commentId: M:System.Collections.Generic.SortedList{System.Single,`0}.TryGetValue(System.Single,`0@)
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.trygetvalue
  name: TryGetValue(float, out T)
  nameWithType: SortedList<float, T>.TryGetValue(float, out T)
  fullName: System.Collections.Generic.SortedList<float, T>.TryGetValue(float, out T)
  nameWithType.vb: SortedList(Of Single, T).TryGetValue(Single, T)
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).TryGetValue(Single, T)
  name.vb: TryGetValue(Single, T)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.TryGetValue(System.Single,`0@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.trygetvalue
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.TryGetValue(System.Single,`0@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.trygetvalue
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.Capacity
  commentId: P:System.Collections.Generic.SortedList{System.Single,`0}.Capacity
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.Capacity
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.capacity
  name: Capacity
  nameWithType: SortedList<float, T>.Capacity
  fullName: System.Collections.Generic.SortedList<float, T>.Capacity
  nameWithType.vb: SortedList(Of Single, T).Capacity
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).Capacity
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.Comparer
  commentId: P:System.Collections.Generic.SortedList{System.Single,`0}.Comparer
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.Comparer
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.comparer
  name: Comparer
  nameWithType: SortedList<float, T>.Comparer
  fullName: System.Collections.Generic.SortedList<float, T>.Comparer
  nameWithType.vb: SortedList(Of Single, T).Comparer
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).Comparer
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.Count
  commentId: P:System.Collections.Generic.SortedList{System.Single,`0}.Count
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.count
  name: Count
  nameWithType: SortedList<float, T>.Count
  fullName: System.Collections.Generic.SortedList<float, T>.Count
  nameWithType.vb: SortedList(Of Single, T).Count
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).Count
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.Item(System.Single)
  commentId: P:System.Collections.Generic.SortedList{System.Single,`0}.Item(System.Single)
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.Item(`0)
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: this[float]
  nameWithType: SortedList<float, T>.this[float]
  fullName: System.Collections.Generic.SortedList<float, T>.this[float]
  nameWithType.vb: SortedList(Of Single, T).this[](Single)
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).this[](Single)
  name.vb: this[](Single)
  spec.csharp:
  - name: this
  - name: '['
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.SortedList{System.Single,`0}.Item(System.Single)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.item
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.Keys
  commentId: P:System.Collections.Generic.SortedList{System.Single,`0}.Keys
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.Keys
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.keys
  name: Keys
  nameWithType: SortedList<float, T>.Keys
  fullName: System.Collections.Generic.SortedList<float, T>.Keys
  nameWithType.vb: SortedList(Of Single, T).Keys
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).Keys
- uid: System.Collections.Generic.SortedList{System.Single,{T}}.Values
  commentId: P:System.Collections.Generic.SortedList{System.Single,`0}.Values
  parent: System.Collections.Generic.SortedList{System.Single,{T}}
  definition: System.Collections.Generic.SortedList`2.Values
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.values
  name: Values
  nameWithType: SortedList<float, T>.Values
  fullName: System.Collections.Generic.SortedList<float, T>.Values
  nameWithType.vb: SortedList(Of Single, T).Values
  fullName.vb: System.Collections.Generic.SortedList(Of Single, T).Values
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.SortedList`2
  commentId: T:System.Collections.Generic.SortedList`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2
  name: SortedList<TKey, TValue>
  nameWithType: SortedList<TKey, TValue>
  fullName: System.Collections.Generic.SortedList<TKey, TValue>
  nameWithType.vb: SortedList(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue)
  name.vb: SortedList(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList`2
    name: SortedList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.SortedList`2
    name: SortedList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: System.Collections.Generic.SortedList`2.Add(`0,`1)
  commentId: M:System.Collections.Generic.SortedList`2.Add(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.add
  name: Add(TKey, TValue)
  nameWithType: SortedList<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: SortedList(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList`2.Add(`0,`1)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList`2.Add(`0,`1)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.SortedList`2.Clear
  commentId: M:System.Collections.Generic.SortedList`2.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.clear
  name: Clear()
  nameWithType: SortedList<TKey, TValue>.Clear()
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.Clear()
  nameWithType.vb: SortedList(Of TKey, TValue).Clear()
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.SortedList`2.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList`2.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.SortedList`2.ContainsKey(`0)
  commentId: M:System.Collections.Generic.SortedList`2.ContainsKey(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.containskey
  name: ContainsKey(TKey)
  nameWithType: SortedList<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: SortedList(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList`2.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.containskey
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList`2.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.containskey
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Generic.SortedList`2.ContainsValue(`1)
  commentId: M:System.Collections.Generic.SortedList`2.ContainsValue(`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.containsvalue
  name: ContainsValue(TValue)
  nameWithType: SortedList<TKey, TValue>.ContainsValue(TValue)
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.ContainsValue(TValue)
  nameWithType.vb: SortedList(Of TKey, TValue).ContainsValue(TValue)
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).ContainsValue(TValue)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList`2.ContainsValue(`1)
    name: ContainsValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.containsvalue
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList`2.ContainsValue(`1)
    name: ContainsValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.containsvalue
  - name: (
  - name: TValue
  - name: )
- uid: System.Collections.Generic.SortedList`2.GetEnumerator
  commentId: M:System.Collections.Generic.SortedList`2.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.getenumerator
  name: GetEnumerator()
  nameWithType: SortedList<TKey, TValue>.GetEnumerator()
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.GetEnumerator()
  nameWithType.vb: SortedList(Of TKey, TValue).GetEnumerator()
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.SortedList`2.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList`2.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.SortedList`2.GetKeyAtIndex(System.Int32)
  commentId: M:System.Collections.Generic.SortedList`2.GetKeyAtIndex(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.getkeyatindex
  name: GetKeyAtIndex(int)
  nameWithType: SortedList<TKey, TValue>.GetKeyAtIndex(int)
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.GetKeyAtIndex(int)
  nameWithType.vb: SortedList(Of TKey, TValue).GetKeyAtIndex(Integer)
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).GetKeyAtIndex(Integer)
  name.vb: GetKeyAtIndex(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList`2.GetKeyAtIndex(System.Int32)
    name: GetKeyAtIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.getkeyatindex
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList`2.GetKeyAtIndex(System.Int32)
    name: GetKeyAtIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.getkeyatindex
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.SortedList`2.GetValueAtIndex(System.Int32)
  commentId: M:System.Collections.Generic.SortedList`2.GetValueAtIndex(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.getvalueatindex
  name: GetValueAtIndex(int)
  nameWithType: SortedList<TKey, TValue>.GetValueAtIndex(int)
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.GetValueAtIndex(int)
  nameWithType.vb: SortedList(Of TKey, TValue).GetValueAtIndex(Integer)
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).GetValueAtIndex(Integer)
  name.vb: GetValueAtIndex(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList`2.GetValueAtIndex(System.Int32)
    name: GetValueAtIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.getvalueatindex
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList`2.GetValueAtIndex(System.Int32)
    name: GetValueAtIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.getvalueatindex
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.SortedList`2.IndexOfKey(`0)
  commentId: M:System.Collections.Generic.SortedList`2.IndexOfKey(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.indexofkey
  name: IndexOfKey(TKey)
  nameWithType: SortedList<TKey, TValue>.IndexOfKey(TKey)
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.IndexOfKey(TKey)
  nameWithType.vb: SortedList(Of TKey, TValue).IndexOfKey(TKey)
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).IndexOfKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList`2.IndexOfKey(`0)
    name: IndexOfKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.indexofkey
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList`2.IndexOfKey(`0)
    name: IndexOfKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.indexofkey
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Generic.SortedList`2.IndexOfValue(`1)
  commentId: M:System.Collections.Generic.SortedList`2.IndexOfValue(`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.indexofvalue
  name: IndexOfValue(TValue)
  nameWithType: SortedList<TKey, TValue>.IndexOfValue(TValue)
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.IndexOfValue(TValue)
  nameWithType.vb: SortedList(Of TKey, TValue).IndexOfValue(TValue)
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).IndexOfValue(TValue)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList`2.IndexOfValue(`1)
    name: IndexOfValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.indexofvalue
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList`2.IndexOfValue(`1)
    name: IndexOfValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.indexofvalue
  - name: (
  - name: TValue
  - name: )
- uid: System.Collections.Generic.SortedList`2.Remove(`0)
  commentId: M:System.Collections.Generic.SortedList`2.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.remove
  name: Remove(TKey)
  nameWithType: SortedList<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.Remove(TKey)
  nameWithType.vb: SortedList(Of TKey, TValue).Remove(TKey)
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList`2.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.remove
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList`2.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.remove
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.removeat
  name: RemoveAt(int)
  nameWithType: SortedList<TKey, TValue>.RemoveAt(int)
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.RemoveAt(int)
  nameWithType.vb: SortedList(Of TKey, TValue).RemoveAt(Integer)
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).RemoveAt(Integer)
  name.vb: RemoveAt(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.removeat
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList`2.RemoveAt(System.Int32)
    name: RemoveAt
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.removeat
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.SortedList`2.SetValueAtIndex(System.Int32,`1)
  commentId: M:System.Collections.Generic.SortedList`2.SetValueAtIndex(System.Int32,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.setvalueatindex
  name: SetValueAtIndex(int, TValue)
  nameWithType: SortedList<TKey, TValue>.SetValueAtIndex(int, TValue)
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.SetValueAtIndex(int, TValue)
  nameWithType.vb: SortedList(Of TKey, TValue).SetValueAtIndex(Integer, TValue)
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).SetValueAtIndex(Integer, TValue)
  name.vb: SetValueAtIndex(Integer, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList`2.SetValueAtIndex(System.Int32,`1)
    name: SetValueAtIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.setvalueatindex
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList`2.SetValueAtIndex(System.Int32,`1)
    name: SetValueAtIndex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.setvalueatindex
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.SortedList`2.TrimExcess
  commentId: M:System.Collections.Generic.SortedList`2.TrimExcess
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.trimexcess
  name: TrimExcess()
  nameWithType: SortedList<TKey, TValue>.TrimExcess()
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.TrimExcess()
  nameWithType.vb: SortedList(Of TKey, TValue).TrimExcess()
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.SortedList`2.TrimExcess
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.trimexcess
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList`2.TrimExcess
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.trimexcess
  - name: (
  - name: )
- uid: System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.trygetvalue
  name: TryGetValue(TKey, out TValue)
  nameWithType: SortedList<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: SortedList(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.SortedList`2.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.SortedList`2.Capacity
  commentId: P:System.Collections.Generic.SortedList`2.Capacity
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.capacity
  name: Capacity
  nameWithType: SortedList<TKey, TValue>.Capacity
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.Capacity
  nameWithType.vb: SortedList(Of TKey, TValue).Capacity
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).Capacity
- uid: System.Collections.Generic.SortedList`2.Comparer
  commentId: P:System.Collections.Generic.SortedList`2.Comparer
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.comparer
  name: Comparer
  nameWithType: SortedList<TKey, TValue>.Comparer
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.Comparer
  nameWithType.vb: SortedList(Of TKey, TValue).Comparer
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).Comparer
- uid: System.Collections.Generic.SortedList`2.Count
  commentId: P:System.Collections.Generic.SortedList`2.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.count
  name: Count
  nameWithType: SortedList<TKey, TValue>.Count
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.Count
  nameWithType.vb: SortedList(Of TKey, TValue).Count
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).Count
- uid: System.Collections.Generic.SortedList`2.Item(`0)
  commentId: P:System.Collections.Generic.SortedList`2.Item(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.item
  name: this[TKey]
  nameWithType: SortedList<TKey, TValue>.this[TKey]
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.this[TKey]
  nameWithType.vb: SortedList(Of TKey, TValue).this[](TKey)
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
  spec.csharp:
  - name: this
  - name: '['
  - name: TKey
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.SortedList`2.Item(`0)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.item
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Generic.SortedList`2.Keys
  commentId: P:System.Collections.Generic.SortedList`2.Keys
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.keys
  name: Keys
  nameWithType: SortedList<TKey, TValue>.Keys
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.Keys
  nameWithType.vb: SortedList(Of TKey, TValue).Keys
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).Keys
- uid: System.Collections.Generic.SortedList`2.Values
  commentId: P:System.Collections.Generic.SortedList`2.Values
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.sortedlist-2.values
  name: Values
  nameWithType: SortedList<TKey, TValue>.Values
  fullName: System.Collections.Generic.SortedList<TKey, TValue>.Values
  nameWithType.vb: SortedList(Of TKey, TValue).Values
  fullName.vb: System.Collections.Generic.SortedList(Of TKey, TValue).Values
- uid: ShapeEngine.Core.Structs.Curve`1.#ctor*
  commentId: Overload:ShapeEngine.Core.Structs.Curve`1.#ctor
  href: ShapeEngine.Core.Structs.Curve-1.html#ShapeEngine_Core_Structs_Curve_1__ctor_System_Int32_
  name: Curve
  nameWithType: Curve<T>.Curve
  fullName: ShapeEngine.Core.Structs.Curve<T>.Curve
  nameWithType.vb: Curve(Of T).New
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ShapeEngine.Core.Structs.Curve`1.HasKeys*
  commentId: Overload:ShapeEngine.Core.Structs.Curve`1.HasKeys
  href: ShapeEngine.Core.Structs.Curve-1.html#ShapeEngine_Core_Structs_Curve_1_HasKeys
  name: HasKeys
  nameWithType: Curve<T>.HasKeys
  fullName: ShapeEngine.Core.Structs.Curve<T>.HasKeys
  nameWithType.vb: Curve(Of T).HasKeys
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).HasKeys
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ShapeEngine.Core.Structs.Curve`1.Add*
  commentId: Overload:ShapeEngine.Core.Structs.Curve`1.Add
  href: ShapeEngine.Core.Structs.Curve-1.html#ShapeEngine_Core_Structs_Curve_1_Add_System_Single__0_
  name: Add
  nameWithType: Curve<T>.Add
  fullName: ShapeEngine.Core.Structs.Curve<T>.Add
  nameWithType.vb: Curve(Of T).Add
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).Add
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.ValueTuple{System.Single,{T}}[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: (float time, T key)[]
  nameWithType: (float time, T key)[]
  fullName: (float time, T key)[]
  nameWithType.vb: (time As Single, key As T)()
  fullName.vb: (time As Single, key As T)()
  name.vb: (time As Single, key As T)()
  spec.csharp:
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,`0}.time
    name: time
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,-0-.time
  - name: ','
  - name: " "
  - name: T
  - name: " "
  - uid: System.ValueTuple{System.Single,`0}.key
    name: key
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,-0-.key
  - name: )
  - name: '['
  - name: ']'
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Single,`0}.time
    name: time
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,-0-.time
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Single,`0}.key
    name: key
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,-0-.key
  - name: " "
  - name: As
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: ShapeEngine.Core.Structs.Curve`1.GetIndex*
  commentId: Overload:ShapeEngine.Core.Structs.Curve`1.GetIndex
  href: ShapeEngine.Core.Structs.Curve-1.html#ShapeEngine_Core_Structs_Curve_1_GetIndex_System_Single_
  name: GetIndex
  nameWithType: Curve<T>.GetIndex
  fullName: ShapeEngine.Core.Structs.Curve<T>.GetIndex
  nameWithType.vb: Curve(Of T).GetIndex
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).GetIndex
- uid: ShapeEngine.Core.Structs.Curve`1.GetValue*
  commentId: Overload:ShapeEngine.Core.Structs.Curve`1.GetValue
  href: ShapeEngine.Core.Structs.Curve-1.html#ShapeEngine_Core_Structs_Curve_1_GetValue_System_Single__0__
  name: GetValue
  nameWithType: Curve<T>.GetValue
  fullName: ShapeEngine.Core.Structs.Curve<T>.GetValue
  nameWithType.vb: Curve(Of T).GetValue
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).GetValue
- uid: ShapeEngine.Core.Structs.Curve`1.RemoveTimeRange*
  commentId: Overload:ShapeEngine.Core.Structs.Curve`1.RemoveTimeRange
  href: ShapeEngine.Core.Structs.Curve-1.html#ShapeEngine_Core_Structs_Curve_1_RemoveTimeRange_System_Single_System_Single_
  name: RemoveTimeRange
  nameWithType: Curve<T>.RemoveTimeRange
  fullName: ShapeEngine.Core.Structs.Curve<T>.RemoveTimeRange
  nameWithType.vb: Curve(Of T).RemoveTimeRange
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).RemoveTimeRange
- uid: ShapeEngine.Core.Structs.Curve`1.Remove*
  commentId: Overload:ShapeEngine.Core.Structs.Curve`1.Remove
  href: ShapeEngine.Core.Structs.Curve-1.html#ShapeEngine_Core_Structs_Curve_1_Remove_System_Single_System_Single_
  name: Remove
  nameWithType: Curve<T>.Remove
  fullName: ShapeEngine.Core.Structs.Curve<T>.Remove
  nameWithType.vb: Curve(Of T).Remove
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).Remove
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: ShapeEngine.Core.Structs.Curve`1.Sample*
  commentId: Overload:ShapeEngine.Core.Structs.Curve`1.Sample
  href: ShapeEngine.Core.Structs.Curve-1.html#ShapeEngine_Core_Structs_Curve_1_Sample_System_Single__0__
  name: Sample
  nameWithType: Curve<T>.Sample
  fullName: ShapeEngine.Core.Structs.Curve<T>.Sample
  nameWithType.vb: Curve(Of T).Sample
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).Sample
- uid: ShapeEngine.Core.Structs.Curve`1.SampleMany*
  commentId: Overload:ShapeEngine.Core.Structs.Curve`1.SampleMany
  href: ShapeEngine.Core.Structs.Curve-1.html#ShapeEngine_Core_Structs_Curve_1_SampleMany_System_Single___
  name: SampleMany
  nameWithType: Curve<T>.SampleMany
  fullName: ShapeEngine.Core.Structs.Curve<T>.SampleMany
  nameWithType.vb: Curve(Of T).SampleMany
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).SampleMany
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: ShapeEngine.Core.Structs.Curve`1.Interpolate*
  commentId: Overload:ShapeEngine.Core.Structs.Curve`1.Interpolate
  href: ShapeEngine.Core.Structs.Curve-1.html#ShapeEngine_Core_Structs_Curve_1_Interpolate__0__0_System_Single_
  name: Interpolate
  nameWithType: Curve<T>.Interpolate
  fullName: ShapeEngine.Core.Structs.Curve<T>.Interpolate
  nameWithType.vb: Curve(Of T).Interpolate
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).Interpolate
- uid: ShapeEngine.Core.Structs.Curve`1.GetDefaultValue*
  commentId: Overload:ShapeEngine.Core.Structs.Curve`1.GetDefaultValue
  href: ShapeEngine.Core.Structs.Curve-1.html#ShapeEngine_Core_Structs_Curve_1_GetDefaultValue
  name: GetDefaultValue
  nameWithType: Curve<T>.GetDefaultValue
  fullName: ShapeEngine.Core.Structs.Curve<T>.GetDefaultValue
  nameWithType.vb: Curve(Of T).GetDefaultValue
  fullName.vb: ShapeEngine.Core.Structs.Curve(Of T).GetDefaultValue
