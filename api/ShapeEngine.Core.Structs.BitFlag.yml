### YamlMime:ManagedReference
items:
- uid: ShapeEngine.Core.Structs.BitFlag
  commentId: T:ShapeEngine.Core.Structs.BitFlag
  id: BitFlag
  parent: ShapeEngine.Core.Structs
  children:
  - ShapeEngine.Core.Structs.BitFlag.#ctor(System.UInt32)
  - ShapeEngine.Core.Structs.BitFlag.#ctor(System.UInt32[])
  - ShapeEngine.Core.Structs.BitFlag.Add(ShapeEngine.Core.Structs.BitFlag)
  - ShapeEngine.Core.Structs.BitFlag.Add(ShapeEngine.Core.Structs.BitFlag[])
  - ShapeEngine.Core.Structs.BitFlag.Add(System.UInt32)
  - ShapeEngine.Core.Structs.BitFlag.Add(System.UInt32[])
  - ShapeEngine.Core.Structs.BitFlag.AddIntFlag(System.Int32,System.Int32)
  - ShapeEngine.Core.Structs.BitFlag.AddIntFlag(System.Int32,System.Int32[])
  - ShapeEngine.Core.Structs.BitFlag.AddUintFlag(System.UInt32,System.UInt32)
  - ShapeEngine.Core.Structs.BitFlag.AddUintFlag(System.UInt32,System.UInt32[])
  - ShapeEngine.Core.Structs.BitFlag.Clear
  - ShapeEngine.Core.Structs.BitFlag.Empty
  - ShapeEngine.Core.Structs.BitFlag.EmptyIntFlag
  - ShapeEngine.Core.Structs.BitFlag.EmptyUintFlag
  - ShapeEngine.Core.Structs.BitFlag.Flag
  - ShapeEngine.Core.Structs.BitFlag.Get(System.UInt32)
  - ShapeEngine.Core.Structs.BitFlag.GetFlagInt(System.Int32)
  - ShapeEngine.Core.Structs.BitFlag.GetFlagUint(System.UInt32)
  - ShapeEngine.Core.Structs.BitFlag.Has(ShapeEngine.Core.Structs.BitFlag)
  - ShapeEngine.Core.Structs.BitFlag.Has(System.UInt32)
  - ShapeEngine.Core.Structs.BitFlag.HasIntFlag(System.Int32,System.Int32)
  - ShapeEngine.Core.Structs.BitFlag.HasUintFlag(System.UInt32,System.UInt32)
  - ShapeEngine.Core.Structs.BitFlag.IsEmpty
  - ShapeEngine.Core.Structs.BitFlag.NextFlag
  - ShapeEngine.Core.Structs.BitFlag.NextFlagInt
  - ShapeEngine.Core.Structs.BitFlag.Remove(ShapeEngine.Core.Structs.BitFlag)
  - ShapeEngine.Core.Structs.BitFlag.Remove(ShapeEngine.Core.Structs.BitFlag[])
  - ShapeEngine.Core.Structs.BitFlag.Remove(System.UInt32)
  - ShapeEngine.Core.Structs.BitFlag.Remove(System.UInt32[])
  - ShapeEngine.Core.Structs.BitFlag.RemoveIntFlag(System.Int32,System.Int32)
  - ShapeEngine.Core.Structs.BitFlag.RemoveIntFlag(System.Int32,System.Int32[])
  - ShapeEngine.Core.Structs.BitFlag.RemoveUintFlag(System.UInt32,System.UInt32)
  - ShapeEngine.Core.Structs.BitFlag.RemoveUintFlag(System.UInt32,System.UInt32[])
  - ShapeEngine.Core.Structs.BitFlag.Set(ShapeEngine.Core.Structs.BitFlag)
  - ShapeEngine.Core.Structs.BitFlag.Set(System.UInt32)
  - ShapeEngine.Core.Structs.BitFlag.SetIntFlag(System.Int32,System.Int32)
  - ShapeEngine.Core.Structs.BitFlag.SetUintFlag(System.UInt32,System.UInt32)
  - ShapeEngine.Core.Structs.BitFlag.op_BitwiseAnd(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  - ShapeEngine.Core.Structs.BitFlag.op_BitwiseAnd(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  - ShapeEngine.Core.Structs.BitFlag.op_BitwiseAnd(System.UInt32,ShapeEngine.Core.Structs.BitFlag)
  - ShapeEngine.Core.Structs.BitFlag.op_BitwiseOr(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  - ShapeEngine.Core.Structs.BitFlag.op_BitwiseOr(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  - ShapeEngine.Core.Structs.BitFlag.op_BitwiseOr(System.UInt32,ShapeEngine.Core.Structs.BitFlag)
  - ShapeEngine.Core.Structs.BitFlag.op_ExclusiveOr(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  - ShapeEngine.Core.Structs.BitFlag.op_ExclusiveOr(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  - ShapeEngine.Core.Structs.BitFlag.op_ExclusiveOr(System.UInt32,ShapeEngine.Core.Structs.BitFlag)
  - ShapeEngine.Core.Structs.BitFlag.op_OnesComplement(ShapeEngine.Core.Structs.BitFlag)
  langs:
  - csharp
  - vb
  name: BitFlag
  nameWithType: BitFlag
  fullName: ShapeEngine.Core.Structs.BitFlag
  type: Struct
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: BitFlag
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 4
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: 'public readonly struct BitFlag : IBitwiseOperators<BitFlag, BitFlag, BitFlag>, IBitwiseOperators<BitFlag, uint, BitFlag>'
    content.vb: Public Structure BitFlag Implements IBitwiseOperators(Of BitFlag, BitFlag, BitFlag), IBitwiseOperators(Of BitFlag, UInteger, BitFlag)
  implements:
  - System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}
  - System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: ShapeEngine.Core.Structs.BitFlag.Flag
  commentId: F:ShapeEngine.Core.Structs.BitFlag.Flag
  id: Flag
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: Flag
  nameWithType: BitFlag.Flag
  fullName: ShapeEngine.Core.Structs.BitFlag.Flag
  type: Field
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Flag
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 6
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public readonly uint Flag
    return:
      type: System.UInt32
    content.vb: Public ReadOnly Flag As UInteger
- uid: ShapeEngine.Core.Structs.BitFlag.#ctor(System.UInt32)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.#ctor(System.UInt32)
  id: '#ctor(System.UInt32)'
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: BitFlag(uint)
  nameWithType: BitFlag.BitFlag(uint)
  fullName: ShapeEngine.Core.Structs.BitFlag.BitFlag(uint)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 7
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public BitFlag(uint value)
    parameters:
    - id: value
      type: System.UInt32
    content.vb: Public Sub New(value As UInteger)
  overload: ShapeEngine.Core.Structs.BitFlag.#ctor*
  nameWithType.vb: BitFlag.New(UInteger)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.New(UInteger)
  name.vb: New(UInteger)
- uid: ShapeEngine.Core.Structs.BitFlag.#ctor(System.UInt32[])
  commentId: M:ShapeEngine.Core.Structs.BitFlag.#ctor(System.UInt32[])
  id: '#ctor(System.UInt32[])'
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: BitFlag(params uint[])
  nameWithType: BitFlag.BitFlag(params uint[])
  fullName: ShapeEngine.Core.Structs.BitFlag.BitFlag(params uint[])
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 11
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public BitFlag(params uint[] values)
    parameters:
    - id: values
      type: System.UInt32[]
    content.vb: Public Sub New(ParamArray values As UInteger())
  overload: ShapeEngine.Core.Structs.BitFlag.#ctor*
  nameWithType.vb: BitFlag.New(ParamArray UInteger())
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.New(ParamArray UInteger())
  name.vb: New(ParamArray UInteger())
- uid: ShapeEngine.Core.Structs.BitFlag.Clear
  commentId: M:ShapeEngine.Core.Structs.BitFlag.Clear
  id: Clear
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: BitFlag.Clear()
  fullName: ShapeEngine.Core.Structs.BitFlag.Clear()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Clear
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 26
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static BitFlag Clear()
    return:
      type: ShapeEngine.Core.Structs.BitFlag
    content.vb: Public Shared Function Clear() As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.Clear*
- uid: ShapeEngine.Core.Structs.BitFlag.IsEmpty
  commentId: M:ShapeEngine.Core.Structs.BitFlag.IsEmpty
  id: IsEmpty
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: IsEmpty()
  nameWithType: BitFlag.IsEmpty()
  fullName: ShapeEngine.Core.Structs.BitFlag.IsEmpty()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: IsEmpty
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 27
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool IsEmpty()
    return:
      type: System.Boolean
    content.vb: Public Function IsEmpty() As Boolean
  overload: ShapeEngine.Core.Structs.BitFlag.IsEmpty*
- uid: ShapeEngine.Core.Structs.BitFlag.Has(System.UInt32)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.Has(System.UInt32)
  id: Has(System.UInt32)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: Has(uint)
  nameWithType: BitFlag.Has(uint)
  fullName: ShapeEngine.Core.Structs.BitFlag.Has(uint)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Has
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 28
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool Has(uint value)
    parameters:
    - id: value
      type: System.UInt32
    return:
      type: System.Boolean
    content.vb: Public Function Has(value As UInteger) As Boolean
  overload: ShapeEngine.Core.Structs.BitFlag.Has*
  nameWithType.vb: BitFlag.Has(UInteger)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.Has(UInteger)
  name.vb: Has(UInteger)
- uid: ShapeEngine.Core.Structs.BitFlag.Set(System.UInt32)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.Set(System.UInt32)
  id: Set(System.UInt32)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: Set(uint)
  nameWithType: BitFlag.Set(uint)
  fullName: ShapeEngine.Core.Structs.BitFlag.Set(uint)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Set
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 34
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public BitFlag Set(uint value)
    parameters:
    - id: value
      type: System.UInt32
    return:
      type: ShapeEngine.Core.Structs.BitFlag
    content.vb: Public Function [Set](value As UInteger) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.Set*
  nameWithType.vb: BitFlag.Set(UInteger)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.Set(UInteger)
  name.vb: Set(UInteger)
- uid: ShapeEngine.Core.Structs.BitFlag.Add(System.UInt32)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.Add(System.UInt32)
  id: Add(System.UInt32)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: Add(uint)
  nameWithType: BitFlag.Add(uint)
  fullName: ShapeEngine.Core.Structs.BitFlag.Add(uint)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Add
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 38
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public BitFlag Add(uint value)
    parameters:
    - id: value
      type: System.UInt32
    return:
      type: ShapeEngine.Core.Structs.BitFlag
    content.vb: Public Function Add(value As UInteger) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.Add*
  nameWithType.vb: BitFlag.Add(UInteger)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.Add(UInteger)
  name.vb: Add(UInteger)
- uid: ShapeEngine.Core.Structs.BitFlag.Remove(System.UInt32)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.Remove(System.UInt32)
  id: Remove(System.UInt32)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: Remove(uint)
  nameWithType: BitFlag.Remove(uint)
  fullName: ShapeEngine.Core.Structs.BitFlag.Remove(uint)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Remove
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 42
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public BitFlag Remove(uint value)
    parameters:
    - id: value
      type: System.UInt32
    return:
      type: ShapeEngine.Core.Structs.BitFlag
    content.vb: Public Function Remove(value As UInteger) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.Remove*
  nameWithType.vb: BitFlag.Remove(UInteger)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.Remove(UInteger)
  name.vb: Remove(UInteger)
- uid: ShapeEngine.Core.Structs.BitFlag.Add(System.UInt32[])
  commentId: M:ShapeEngine.Core.Structs.BitFlag.Add(System.UInt32[])
  id: Add(System.UInt32[])
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: Add(params uint[])
  nameWithType: BitFlag.Add(params uint[])
  fullName: ShapeEngine.Core.Structs.BitFlag.Add(params uint[])
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Add
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 46
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public BitFlag Add(params uint[] values)
    parameters:
    - id: values
      type: System.UInt32[]
    return:
      type: ShapeEngine.Core.Structs.BitFlag
    content.vb: Public Function Add(ParamArray values As UInteger()) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.Add*
  nameWithType.vb: BitFlag.Add(ParamArray UInteger())
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.Add(ParamArray UInteger())
  name.vb: Add(ParamArray UInteger())
- uid: ShapeEngine.Core.Structs.BitFlag.Remove(System.UInt32[])
  commentId: M:ShapeEngine.Core.Structs.BitFlag.Remove(System.UInt32[])
  id: Remove(System.UInt32[])
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: Remove(params uint[])
  nameWithType: BitFlag.Remove(params uint[])
  fullName: ShapeEngine.Core.Structs.BitFlag.Remove(params uint[])
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Remove
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 56
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public BitFlag Remove(params uint[] values)
    parameters:
    - id: values
      type: System.UInt32[]
    return:
      type: ShapeEngine.Core.Structs.BitFlag
    content.vb: Public Function Remove(ParamArray values As UInteger()) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.Remove*
  nameWithType.vb: BitFlag.Remove(ParamArray UInteger())
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.Remove(ParamArray UInteger())
  name.vb: Remove(ParamArray UInteger())
- uid: ShapeEngine.Core.Structs.BitFlag.Has(ShapeEngine.Core.Structs.BitFlag)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.Has(ShapeEngine.Core.Structs.BitFlag)
  id: Has(ShapeEngine.Core.Structs.BitFlag)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: Has(BitFlag)
  nameWithType: BitFlag.Has(BitFlag)
  fullName: ShapeEngine.Core.Structs.BitFlag.Has(ShapeEngine.Core.Structs.BitFlag)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Has
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 69
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public bool Has(BitFlag value)
    parameters:
    - id: value
      type: ShapeEngine.Core.Structs.BitFlag
    return:
      type: System.Boolean
    content.vb: Public Function Has(value As BitFlag) As Boolean
  overload: ShapeEngine.Core.Structs.BitFlag.Has*
- uid: ShapeEngine.Core.Structs.BitFlag.Set(ShapeEngine.Core.Structs.BitFlag)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.Set(ShapeEngine.Core.Structs.BitFlag)
  id: Set(ShapeEngine.Core.Structs.BitFlag)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: Set(BitFlag)
  nameWithType: BitFlag.Set(BitFlag)
  fullName: ShapeEngine.Core.Structs.BitFlag.Set(ShapeEngine.Core.Structs.BitFlag)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Set
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 74
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public BitFlag Set(BitFlag value)
    parameters:
    - id: value
      type: ShapeEngine.Core.Structs.BitFlag
    return:
      type: ShapeEngine.Core.Structs.BitFlag
    content.vb: Public Function [Set](value As BitFlag) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.Set*
- uid: ShapeEngine.Core.Structs.BitFlag.Add(ShapeEngine.Core.Structs.BitFlag)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.Add(ShapeEngine.Core.Structs.BitFlag)
  id: Add(ShapeEngine.Core.Structs.BitFlag)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: Add(BitFlag)
  nameWithType: BitFlag.Add(BitFlag)
  fullName: ShapeEngine.Core.Structs.BitFlag.Add(ShapeEngine.Core.Structs.BitFlag)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Add
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 78
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public BitFlag Add(BitFlag value)
    parameters:
    - id: value
      type: ShapeEngine.Core.Structs.BitFlag
    return:
      type: ShapeEngine.Core.Structs.BitFlag
    content.vb: Public Function Add(value As BitFlag) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.Add*
- uid: ShapeEngine.Core.Structs.BitFlag.Remove(ShapeEngine.Core.Structs.BitFlag)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.Remove(ShapeEngine.Core.Structs.BitFlag)
  id: Remove(ShapeEngine.Core.Structs.BitFlag)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: Remove(BitFlag)
  nameWithType: BitFlag.Remove(BitFlag)
  fullName: ShapeEngine.Core.Structs.BitFlag.Remove(ShapeEngine.Core.Structs.BitFlag)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Remove
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 82
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public BitFlag Remove(BitFlag value)
    parameters:
    - id: value
      type: ShapeEngine.Core.Structs.BitFlag
    return:
      type: ShapeEngine.Core.Structs.BitFlag
    content.vb: Public Function Remove(value As BitFlag) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.Remove*
- uid: ShapeEngine.Core.Structs.BitFlag.Add(ShapeEngine.Core.Structs.BitFlag[])
  commentId: M:ShapeEngine.Core.Structs.BitFlag.Add(ShapeEngine.Core.Structs.BitFlag[])
  id: Add(ShapeEngine.Core.Structs.BitFlag[])
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: Add(params BitFlag[])
  nameWithType: BitFlag.Add(params BitFlag[])
  fullName: ShapeEngine.Core.Structs.BitFlag.Add(params ShapeEngine.Core.Structs.BitFlag[])
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Add
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 86
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public BitFlag Add(params BitFlag[] values)
    parameters:
    - id: values
      type: ShapeEngine.Core.Structs.BitFlag[]
    return:
      type: ShapeEngine.Core.Structs.BitFlag
    content.vb: Public Function Add(ParamArray values As BitFlag()) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.Add*
  nameWithType.vb: BitFlag.Add(ParamArray BitFlag())
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.Add(ParamArray ShapeEngine.Core.Structs.BitFlag())
  name.vb: Add(ParamArray BitFlag())
- uid: ShapeEngine.Core.Structs.BitFlag.Remove(ShapeEngine.Core.Structs.BitFlag[])
  commentId: M:ShapeEngine.Core.Structs.BitFlag.Remove(ShapeEngine.Core.Structs.BitFlag[])
  id: Remove(ShapeEngine.Core.Structs.BitFlag[])
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: Remove(params BitFlag[])
  nameWithType: BitFlag.Remove(params BitFlag[])
  fullName: ShapeEngine.Core.Structs.BitFlag.Remove(params ShapeEngine.Core.Structs.BitFlag[])
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Remove
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 96
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public BitFlag Remove(params BitFlag[] values)
    parameters:
    - id: values
      type: ShapeEngine.Core.Structs.BitFlag[]
    return:
      type: ShapeEngine.Core.Structs.BitFlag
    content.vb: Public Function Remove(ParamArray values As BitFlag()) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.Remove*
  nameWithType.vb: BitFlag.Remove(ParamArray BitFlag())
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.Remove(ParamArray ShapeEngine.Core.Structs.BitFlag())
  name.vb: Remove(ParamArray BitFlag())
- uid: ShapeEngine.Core.Structs.BitFlag.Get(System.UInt32)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.Get(System.UInt32)
  id: Get(System.UInt32)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: Get(uint)
  nameWithType: BitFlag.Get(uint)
  fullName: ShapeEngine.Core.Structs.BitFlag.Get(uint)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Get
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 110
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static BitFlag Get(uint power)
    parameters:
    - id: power
      type: System.UInt32
    return:
      type: ShapeEngine.Core.Structs.BitFlag
    content.vb: Public Shared Function [Get](power As UInteger) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.Get*
  nameWithType.vb: BitFlag.Get(UInteger)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.Get(UInteger)
  name.vb: Get(UInteger)
- uid: ShapeEngine.Core.Structs.BitFlag.Empty
  commentId: P:ShapeEngine.Core.Structs.BitFlag.Empty
  id: Empty
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: BitFlag.Empty
  fullName: ShapeEngine.Core.Structs.BitFlag.Empty
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: Empty
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 111
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static BitFlag Empty { get; }
    parameters: []
    return:
      type: ShapeEngine.Core.Structs.BitFlag
    content.vb: Public Shared ReadOnly Property Empty As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.Empty*
- uid: ShapeEngine.Core.Structs.BitFlag.EmptyIntFlag
  commentId: M:ShapeEngine.Core.Structs.BitFlag.EmptyIntFlag
  id: EmptyIntFlag
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: EmptyIntFlag()
  nameWithType: BitFlag.EmptyIntFlag()
  fullName: ShapeEngine.Core.Structs.BitFlag.EmptyIntFlag()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: EmptyIntFlag
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 117
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static int EmptyIntFlag()
    return:
      type: System.Int32
    content.vb: Public Shared Function EmptyIntFlag() As Integer
  overload: ShapeEngine.Core.Structs.BitFlag.EmptyIntFlag*
- uid: ShapeEngine.Core.Structs.BitFlag.GetFlagInt(System.Int32)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.GetFlagInt(System.Int32)
  id: GetFlagInt(System.Int32)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: GetFlagInt(int)
  nameWithType: BitFlag.GetFlagInt(int)
  fullName: ShapeEngine.Core.Structs.BitFlag.GetFlagInt(int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetFlagInt
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 118
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static int GetFlagInt(int power)
    parameters:
    - id: power
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function GetFlagInt(power As Integer) As Integer
  overload: ShapeEngine.Core.Structs.BitFlag.GetFlagInt*
  nameWithType.vb: BitFlag.GetFlagInt(Integer)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.GetFlagInt(Integer)
  name.vb: GetFlagInt(Integer)
- uid: ShapeEngine.Core.Structs.BitFlag.HasIntFlag(System.Int32,System.Int32)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.HasIntFlag(System.Int32,System.Int32)
  id: HasIntFlag(System.Int32,System.Int32)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: HasIntFlag(int, int)
  nameWithType: BitFlag.HasIntFlag(int, int)
  fullName: ShapeEngine.Core.Structs.BitFlag.HasIntFlag(int, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: HasIntFlag
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 119
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static bool HasIntFlag(int flag, int value)
    parameters:
    - id: flag
      type: System.Int32
    - id: value
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasIntFlag(flag As Integer, value As Integer) As Boolean
  overload: ShapeEngine.Core.Structs.BitFlag.HasIntFlag*
  nameWithType.vb: BitFlag.HasIntFlag(Integer, Integer)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.HasIntFlag(Integer, Integer)
  name.vb: HasIntFlag(Integer, Integer)
- uid: ShapeEngine.Core.Structs.BitFlag.SetIntFlag(System.Int32,System.Int32)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.SetIntFlag(System.Int32,System.Int32)
  id: SetIntFlag(System.Int32,System.Int32)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: SetIntFlag(int, int)
  nameWithType: BitFlag.SetIntFlag(int, int)
  fullName: ShapeEngine.Core.Structs.BitFlag.SetIntFlag(int, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetIntFlag
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 125
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static int SetIntFlag(int flag, int value)
    parameters:
    - id: flag
      type: System.Int32
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function SetIntFlag(flag As Integer, value As Integer) As Integer
  overload: ShapeEngine.Core.Structs.BitFlag.SetIntFlag*
  nameWithType.vb: BitFlag.SetIntFlag(Integer, Integer)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.SetIntFlag(Integer, Integer)
  name.vb: SetIntFlag(Integer, Integer)
- uid: ShapeEngine.Core.Structs.BitFlag.AddIntFlag(System.Int32,System.Int32)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.AddIntFlag(System.Int32,System.Int32)
  id: AddIntFlag(System.Int32,System.Int32)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: AddIntFlag(int, int)
  nameWithType: BitFlag.AddIntFlag(int, int)
  fullName: ShapeEngine.Core.Structs.BitFlag.AddIntFlag(int, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: AddIntFlag
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 129
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static int AddIntFlag(int flag, int value)
    parameters:
    - id: flag
      type: System.Int32
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function AddIntFlag(flag As Integer, value As Integer) As Integer
  overload: ShapeEngine.Core.Structs.BitFlag.AddIntFlag*
  nameWithType.vb: BitFlag.AddIntFlag(Integer, Integer)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.AddIntFlag(Integer, Integer)
  name.vb: AddIntFlag(Integer, Integer)
- uid: ShapeEngine.Core.Structs.BitFlag.RemoveIntFlag(System.Int32,System.Int32)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.RemoveIntFlag(System.Int32,System.Int32)
  id: RemoveIntFlag(System.Int32,System.Int32)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: RemoveIntFlag(int, int)
  nameWithType: BitFlag.RemoveIntFlag(int, int)
  fullName: ShapeEngine.Core.Structs.BitFlag.RemoveIntFlag(int, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: RemoveIntFlag
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 133
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static int RemoveIntFlag(int flag, int value)
    parameters:
    - id: flag
      type: System.Int32
    - id: value
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function RemoveIntFlag(flag As Integer, value As Integer) As Integer
  overload: ShapeEngine.Core.Structs.BitFlag.RemoveIntFlag*
  nameWithType.vb: BitFlag.RemoveIntFlag(Integer, Integer)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.RemoveIntFlag(Integer, Integer)
  name.vb: RemoveIntFlag(Integer, Integer)
- uid: ShapeEngine.Core.Structs.BitFlag.AddIntFlag(System.Int32,System.Int32[])
  commentId: M:ShapeEngine.Core.Structs.BitFlag.AddIntFlag(System.Int32,System.Int32[])
  id: AddIntFlag(System.Int32,System.Int32[])
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: AddIntFlag(int, params int[])
  nameWithType: BitFlag.AddIntFlag(int, params int[])
  fullName: ShapeEngine.Core.Structs.BitFlag.AddIntFlag(int, params int[])
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: AddIntFlag
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 137
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static int AddIntFlag(int flag, params int[] values)
    parameters:
    - id: flag
      type: System.Int32
    - id: values
      type: System.Int32[]
    return:
      type: System.Int32
    content.vb: Public Shared Function AddIntFlag(flag As Integer, ParamArray values As Integer()) As Integer
  overload: ShapeEngine.Core.Structs.BitFlag.AddIntFlag*
  nameWithType.vb: BitFlag.AddIntFlag(Integer, ParamArray Integer())
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.AddIntFlag(Integer, ParamArray Integer())
  name.vb: AddIntFlag(Integer, ParamArray Integer())
- uid: ShapeEngine.Core.Structs.BitFlag.RemoveIntFlag(System.Int32,System.Int32[])
  commentId: M:ShapeEngine.Core.Structs.BitFlag.RemoveIntFlag(System.Int32,System.Int32[])
  id: RemoveIntFlag(System.Int32,System.Int32[])
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: RemoveIntFlag(int, params int[])
  nameWithType: BitFlag.RemoveIntFlag(int, params int[])
  fullName: ShapeEngine.Core.Structs.BitFlag.RemoveIntFlag(int, params int[])
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: RemoveIntFlag
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 146
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static int RemoveIntFlag(int flag, params int[] values)
    parameters:
    - id: flag
      type: System.Int32
    - id: values
      type: System.Int32[]
    return:
      type: System.Int32
    content.vb: Public Shared Function RemoveIntFlag(flag As Integer, ParamArray values As Integer()) As Integer
  overload: ShapeEngine.Core.Structs.BitFlag.RemoveIntFlag*
  nameWithType.vb: BitFlag.RemoveIntFlag(Integer, ParamArray Integer())
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.RemoveIntFlag(Integer, ParamArray Integer())
  name.vb: RemoveIntFlag(Integer, ParamArray Integer())
- uid: ShapeEngine.Core.Structs.BitFlag.NextFlag
  commentId: P:ShapeEngine.Core.Structs.BitFlag.NextFlag
  id: NextFlag
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: NextFlag
  nameWithType: BitFlag.NextFlag
  fullName: ShapeEngine.Core.Structs.BitFlag.NextFlag
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: NextFlag
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 160
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static uint NextFlag { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Shared ReadOnly Property NextFlag As UInteger
  overload: ShapeEngine.Core.Structs.BitFlag.NextFlag*
- uid: ShapeEngine.Core.Structs.BitFlag.NextFlagInt
  commentId: P:ShapeEngine.Core.Structs.BitFlag.NextFlagInt
  id: NextFlagInt
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: NextFlagInt
  nameWithType: BitFlag.NextFlagInt
  fullName: ShapeEngine.Core.Structs.BitFlag.NextFlagInt
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: NextFlagInt
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 164
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static int NextFlagInt { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property NextFlagInt As Integer
  overload: ShapeEngine.Core.Structs.BitFlag.NextFlagInt*
- uid: ShapeEngine.Core.Structs.BitFlag.EmptyUintFlag
  commentId: P:ShapeEngine.Core.Structs.BitFlag.EmptyUintFlag
  id: EmptyUintFlag
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: EmptyUintFlag
  nameWithType: BitFlag.EmptyUintFlag
  fullName: ShapeEngine.Core.Structs.BitFlag.EmptyUintFlag
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: EmptyUintFlag
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 167
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static uint EmptyUintFlag { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Shared ReadOnly Property EmptyUintFlag As UInteger
  overload: ShapeEngine.Core.Structs.BitFlag.EmptyUintFlag*
- uid: ShapeEngine.Core.Structs.BitFlag.GetFlagUint(System.UInt32)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.GetFlagUint(System.UInt32)
  id: GetFlagUint(System.UInt32)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: GetFlagUint(uint)
  nameWithType: BitFlag.GetFlagUint(uint)
  fullName: ShapeEngine.Core.Structs.BitFlag.GetFlagUint(uint)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: GetFlagUint
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 168
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static uint GetFlagUint(uint power)
    parameters:
    - id: power
      type: System.UInt32
    return:
      type: System.UInt32
    content.vb: Public Shared Function GetFlagUint(power As UInteger) As UInteger
  overload: ShapeEngine.Core.Structs.BitFlag.GetFlagUint*
  nameWithType.vb: BitFlag.GetFlagUint(UInteger)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.GetFlagUint(UInteger)
  name.vb: GetFlagUint(UInteger)
- uid: ShapeEngine.Core.Structs.BitFlag.HasUintFlag(System.UInt32,System.UInt32)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.HasUintFlag(System.UInt32,System.UInt32)
  id: HasUintFlag(System.UInt32,System.UInt32)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: HasUintFlag(uint, uint)
  nameWithType: BitFlag.HasUintFlag(uint, uint)
  fullName: ShapeEngine.Core.Structs.BitFlag.HasUintFlag(uint, uint)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: HasUintFlag
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 169
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static bool HasUintFlag(uint flag, uint value)
    parameters:
    - id: flag
      type: System.UInt32
    - id: value
      type: System.UInt32
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasUintFlag(flag As UInteger, value As UInteger) As Boolean
  overload: ShapeEngine.Core.Structs.BitFlag.HasUintFlag*
  nameWithType.vb: BitFlag.HasUintFlag(UInteger, UInteger)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.HasUintFlag(UInteger, UInteger)
  name.vb: HasUintFlag(UInteger, UInteger)
- uid: ShapeEngine.Core.Structs.BitFlag.SetUintFlag(System.UInt32,System.UInt32)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.SetUintFlag(System.UInt32,System.UInt32)
  id: SetUintFlag(System.UInt32,System.UInt32)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: SetUintFlag(uint, uint)
  nameWithType: BitFlag.SetUintFlag(uint, uint)
  fullName: ShapeEngine.Core.Structs.BitFlag.SetUintFlag(uint, uint)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: SetUintFlag
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 175
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static uint SetUintFlag(uint flag, uint value)
    parameters:
    - id: flag
      type: System.UInt32
    - id: value
      type: System.UInt32
    return:
      type: System.UInt32
    content.vb: Public Shared Function SetUintFlag(flag As UInteger, value As UInteger) As UInteger
  overload: ShapeEngine.Core.Structs.BitFlag.SetUintFlag*
  nameWithType.vb: BitFlag.SetUintFlag(UInteger, UInteger)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.SetUintFlag(UInteger, UInteger)
  name.vb: SetUintFlag(UInteger, UInteger)
- uid: ShapeEngine.Core.Structs.BitFlag.AddUintFlag(System.UInt32,System.UInt32)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.AddUintFlag(System.UInt32,System.UInt32)
  id: AddUintFlag(System.UInt32,System.UInt32)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: AddUintFlag(uint, uint)
  nameWithType: BitFlag.AddUintFlag(uint, uint)
  fullName: ShapeEngine.Core.Structs.BitFlag.AddUintFlag(uint, uint)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: AddUintFlag
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 179
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static uint AddUintFlag(uint flag, uint value)
    parameters:
    - id: flag
      type: System.UInt32
    - id: value
      type: System.UInt32
    return:
      type: System.UInt32
    content.vb: Public Shared Function AddUintFlag(flag As UInteger, value As UInteger) As UInteger
  overload: ShapeEngine.Core.Structs.BitFlag.AddUintFlag*
  nameWithType.vb: BitFlag.AddUintFlag(UInteger, UInteger)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.AddUintFlag(UInteger, UInteger)
  name.vb: AddUintFlag(UInteger, UInteger)
- uid: ShapeEngine.Core.Structs.BitFlag.RemoveUintFlag(System.UInt32,System.UInt32)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.RemoveUintFlag(System.UInt32,System.UInt32)
  id: RemoveUintFlag(System.UInt32,System.UInt32)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: RemoveUintFlag(uint, uint)
  nameWithType: BitFlag.RemoveUintFlag(uint, uint)
  fullName: ShapeEngine.Core.Structs.BitFlag.RemoveUintFlag(uint, uint)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: RemoveUintFlag
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 183
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static uint RemoveUintFlag(uint flag, uint value)
    parameters:
    - id: flag
      type: System.UInt32
    - id: value
      type: System.UInt32
    return:
      type: System.UInt32
    content.vb: Public Shared Function RemoveUintFlag(flag As UInteger, value As UInteger) As UInteger
  overload: ShapeEngine.Core.Structs.BitFlag.RemoveUintFlag*
  nameWithType.vb: BitFlag.RemoveUintFlag(UInteger, UInteger)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.RemoveUintFlag(UInteger, UInteger)
  name.vb: RemoveUintFlag(UInteger, UInteger)
- uid: ShapeEngine.Core.Structs.BitFlag.AddUintFlag(System.UInt32,System.UInt32[])
  commentId: M:ShapeEngine.Core.Structs.BitFlag.AddUintFlag(System.UInt32,System.UInt32[])
  id: AddUintFlag(System.UInt32,System.UInt32[])
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: AddUintFlag(uint, params uint[])
  nameWithType: BitFlag.AddUintFlag(uint, params uint[])
  fullName: ShapeEngine.Core.Structs.BitFlag.AddUintFlag(uint, params uint[])
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: AddUintFlag
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 187
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static uint AddUintFlag(uint flag, params uint[] values)
    parameters:
    - id: flag
      type: System.UInt32
    - id: values
      type: System.UInt32[]
    return:
      type: System.UInt32
    content.vb: Public Shared Function AddUintFlag(flag As UInteger, ParamArray values As UInteger()) As UInteger
  overload: ShapeEngine.Core.Structs.BitFlag.AddUintFlag*
  nameWithType.vb: BitFlag.AddUintFlag(UInteger, ParamArray UInteger())
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.AddUintFlag(UInteger, ParamArray UInteger())
  name.vb: AddUintFlag(UInteger, ParamArray UInteger())
- uid: ShapeEngine.Core.Structs.BitFlag.RemoveUintFlag(System.UInt32,System.UInt32[])
  commentId: M:ShapeEngine.Core.Structs.BitFlag.RemoveUintFlag(System.UInt32,System.UInt32[])
  id: RemoveUintFlag(System.UInt32,System.UInt32[])
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: RemoveUintFlag(uint, params uint[])
  nameWithType: BitFlag.RemoveUintFlag(uint, params uint[])
  fullName: ShapeEngine.Core.Structs.BitFlag.RemoveUintFlag(uint, params uint[])
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: RemoveUintFlag
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 196
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static uint RemoveUintFlag(uint flag, params uint[] values)
    parameters:
    - id: flag
      type: System.UInt32
    - id: values
      type: System.UInt32[]
    return:
      type: System.UInt32
    content.vb: Public Shared Function RemoveUintFlag(flag As UInteger, ParamArray values As UInteger()) As UInteger
  overload: ShapeEngine.Core.Structs.BitFlag.RemoveUintFlag*
  nameWithType.vb: BitFlag.RemoveUintFlag(UInteger, ParamArray UInteger())
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.RemoveUintFlag(UInteger, ParamArray UInteger())
  name.vb: RemoveUintFlag(UInteger, ParamArray UInteger())
- uid: ShapeEngine.Core.Structs.BitFlag.op_OnesComplement(ShapeEngine.Core.Structs.BitFlag)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.op_OnesComplement(ShapeEngine.Core.Structs.BitFlag)
  id: op_OnesComplement(ShapeEngine.Core.Structs.BitFlag)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: operator ~(BitFlag)
  nameWithType: BitFlag.operator ~(BitFlag)
  fullName: ShapeEngine.Core.Structs.BitFlag.operator ~(ShapeEngine.Core.Structs.BitFlag)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: op_OnesComplement
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 208
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Computes the ones-complement representation of a given value.
  example: []
  syntax:
    content: public static BitFlag operator ~(BitFlag value)
    parameters:
    - id: value
      type: ShapeEngine.Core.Structs.BitFlag
      description: The value for which to compute the ones-complement.
    return:
      type: ShapeEngine.Core.Structs.BitFlag
      description: The ones-complement of <code class="paramref">value</code>.
    content.vb: Public Shared Operator Not(value As BitFlag) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.op_OnesComplement*
  implements:
  - System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}.op_OnesComplement(ShapeEngine.Core.Structs.BitFlag)
  - System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}.op_OnesComplement(ShapeEngine.Core.Structs.BitFlag)
  nameWithType.vb: BitFlag.Not(BitFlag)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.Not(ShapeEngine.Core.Structs.BitFlag)
  name.vb: Not(BitFlag)
- uid: ShapeEngine.Core.Structs.BitFlag.op_BitwiseAnd(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.op_BitwiseAnd(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  id: op_BitwiseAnd(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: operator &(BitFlag, BitFlag)
  nameWithType: BitFlag.operator &(BitFlag, BitFlag)
  fullName: ShapeEngine.Core.Structs.BitFlag.operator &(ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: op_BitwiseAnd
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 210
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Computes the bitwise-and of two values.
  example: []
  syntax:
    content: public static BitFlag operator &(BitFlag left, BitFlag right)
    parameters:
    - id: left
      type: ShapeEngine.Core.Structs.BitFlag
      description: The value to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/operators/patterns#logical-patterns">and</a> with <code class="paramref">right</code>.
    - id: right
      type: ShapeEngine.Core.Structs.BitFlag
      description: The value to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/operators/patterns#logical-patterns">and</a> with <code class="paramref">left</code>.
    return:
      type: ShapeEngine.Core.Structs.BitFlag
      description: The bitwise-and of <code class="paramref">left</code> and <code class="paramref">right</code>.
    content.vb: Public Shared Operator And(left As BitFlag, right As BitFlag) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.op_BitwiseAnd*
  implements:
  - System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}.op_BitwiseAnd(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  nameWithType.vb: BitFlag.And(BitFlag, BitFlag)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.And(ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag)
  name.vb: And(BitFlag, BitFlag)
- uid: ShapeEngine.Core.Structs.BitFlag.op_BitwiseOr(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.op_BitwiseOr(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  id: op_BitwiseOr(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: operator |(BitFlag, BitFlag)
  nameWithType: BitFlag.operator |(BitFlag, BitFlag)
  fullName: ShapeEngine.Core.Structs.BitFlag.operator |(ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: op_BitwiseOr
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 211
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Computes the bitwise-or of two values.
  example: []
  syntax:
    content: public static BitFlag operator |(BitFlag left, BitFlag right)
    parameters:
    - id: left
      type: ShapeEngine.Core.Structs.BitFlag
      description: The value to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/operators/patterns#logical-patterns">or</a> with <code class="paramref">right</code>.
    - id: right
      type: ShapeEngine.Core.Structs.BitFlag
      description: The value to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/operators/patterns#logical-patterns">or</a> with <code class="paramref">left</code>.
    return:
      type: ShapeEngine.Core.Structs.BitFlag
      description: The bitwise-or of <code class="paramref">left</code> and <code class="paramref">right</code>.
    content.vb: Public Shared Operator Or(left As BitFlag, right As BitFlag) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.op_BitwiseOr*
  implements:
  - System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}.op_BitwiseOr(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  nameWithType.vb: BitFlag.Or(BitFlag, BitFlag)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.Or(ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag)
  name.vb: Or(BitFlag, BitFlag)
- uid: ShapeEngine.Core.Structs.BitFlag.op_ExclusiveOr(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.op_ExclusiveOr(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  id: op_ExclusiveOr(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: operator ^(BitFlag, BitFlag)
  nameWithType: BitFlag.operator ^(BitFlag, BitFlag)
  fullName: ShapeEngine.Core.Structs.BitFlag.operator ^(ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: op_ExclusiveOr
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 212
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Computes the exclusive-or of two values.
  example: []
  syntax:
    content: public static BitFlag operator ^(BitFlag left, BitFlag right)
    parameters:
    - id: left
      type: ShapeEngine.Core.Structs.BitFlag
      description: The value to xor with <code class="paramref">right</code>.
    - id: right
      type: ShapeEngine.Core.Structs.BitFlag
      description: The value to xor with <code class="paramref">left</code>.
    return:
      type: ShapeEngine.Core.Structs.BitFlag
      description: The exclusive-or of <code class="paramref">left</code> and <code class="paramref">right</code>.
    content.vb: Public Shared Operator Xor(left As BitFlag, right As BitFlag) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.op_ExclusiveOr*
  implements:
  - System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}.op_ExclusiveOr(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  nameWithType.vb: BitFlag.Xor(BitFlag, BitFlag)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.Xor(ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag)
  name.vb: Xor(BitFlag, BitFlag)
- uid: ShapeEngine.Core.Structs.BitFlag.op_BitwiseAnd(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.op_BitwiseAnd(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  id: op_BitwiseAnd(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: operator &(BitFlag, uint)
  nameWithType: BitFlag.operator &(BitFlag, uint)
  fullName: ShapeEngine.Core.Structs.BitFlag.operator &(ShapeEngine.Core.Structs.BitFlag, uint)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: op_BitwiseAnd
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 214
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Computes the bitwise-and of two values.
  example: []
  syntax:
    content: public static BitFlag operator &(BitFlag left, uint right)
    parameters:
    - id: left
      type: ShapeEngine.Core.Structs.BitFlag
      description: The value to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/operators/patterns#logical-patterns">and</a> with <code class="paramref">right</code>.
    - id: right
      type: System.UInt32
      description: The value to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/operators/patterns#logical-patterns">and</a> with <code class="paramref">left</code>.
    return:
      type: ShapeEngine.Core.Structs.BitFlag
      description: The bitwise-and of <code class="paramref">left</code> and <code class="paramref">right</code>.
    content.vb: Public Shared Operator And(left As BitFlag, right As UInteger) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.op_BitwiseAnd*
  implements:
  - System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}.op_BitwiseAnd(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  nameWithType.vb: BitFlag.And(BitFlag, UInteger)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.And(ShapeEngine.Core.Structs.BitFlag, UInteger)
  name.vb: And(BitFlag, UInteger)
- uid: ShapeEngine.Core.Structs.BitFlag.op_BitwiseOr(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.op_BitwiseOr(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  id: op_BitwiseOr(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: operator |(BitFlag, uint)
  nameWithType: BitFlag.operator |(BitFlag, uint)
  fullName: ShapeEngine.Core.Structs.BitFlag.operator |(ShapeEngine.Core.Structs.BitFlag, uint)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: op_BitwiseOr
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 215
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Computes the bitwise-or of two values.
  example: []
  syntax:
    content: public static BitFlag operator |(BitFlag left, uint right)
    parameters:
    - id: left
      type: ShapeEngine.Core.Structs.BitFlag
      description: The value to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/operators/patterns#logical-patterns">or</a> with <code class="paramref">right</code>.
    - id: right
      type: System.UInt32
      description: The value to <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/operators/patterns#logical-patterns">or</a> with <code class="paramref">left</code>.
    return:
      type: ShapeEngine.Core.Structs.BitFlag
      description: The bitwise-or of <code class="paramref">left</code> and <code class="paramref">right</code>.
    content.vb: Public Shared Operator Or(left As BitFlag, right As UInteger) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.op_BitwiseOr*
  implements:
  - System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}.op_BitwiseOr(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  nameWithType.vb: BitFlag.Or(BitFlag, UInteger)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.Or(ShapeEngine.Core.Structs.BitFlag, UInteger)
  name.vb: Or(BitFlag, UInteger)
- uid: ShapeEngine.Core.Structs.BitFlag.op_ExclusiveOr(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.op_ExclusiveOr(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  id: op_ExclusiveOr(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: operator ^(BitFlag, uint)
  nameWithType: BitFlag.operator ^(BitFlag, uint)
  fullName: ShapeEngine.Core.Structs.BitFlag.operator ^(ShapeEngine.Core.Structs.BitFlag, uint)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: op_ExclusiveOr
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 216
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Computes the exclusive-or of two values.
  example: []
  syntax:
    content: public static BitFlag operator ^(BitFlag left, uint right)
    parameters:
    - id: left
      type: ShapeEngine.Core.Structs.BitFlag
      description: The value to xor with <code class="paramref">right</code>.
    - id: right
      type: System.UInt32
      description: The value to xor with <code class="paramref">left</code>.
    return:
      type: ShapeEngine.Core.Structs.BitFlag
      description: The exclusive-or of <code class="paramref">left</code> and <code class="paramref">right</code>.
    content.vb: Public Shared Operator Xor(left As BitFlag, right As UInteger) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.op_ExclusiveOr*
  implements:
  - System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}.op_ExclusiveOr(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  nameWithType.vb: BitFlag.Xor(BitFlag, UInteger)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.Xor(ShapeEngine.Core.Structs.BitFlag, UInteger)
  name.vb: Xor(BitFlag, UInteger)
- uid: ShapeEngine.Core.Structs.BitFlag.op_BitwiseAnd(System.UInt32,ShapeEngine.Core.Structs.BitFlag)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.op_BitwiseAnd(System.UInt32,ShapeEngine.Core.Structs.BitFlag)
  id: op_BitwiseAnd(System.UInt32,ShapeEngine.Core.Structs.BitFlag)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: operator &(uint, BitFlag)
  nameWithType: BitFlag.operator &(uint, BitFlag)
  fullName: ShapeEngine.Core.Structs.BitFlag.operator &(uint, ShapeEngine.Core.Structs.BitFlag)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: op_BitwiseAnd
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 218
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static BitFlag operator &(uint left, BitFlag right)
    parameters:
    - id: left
      type: System.UInt32
    - id: right
      type: ShapeEngine.Core.Structs.BitFlag
    return:
      type: ShapeEngine.Core.Structs.BitFlag
    content.vb: Public Shared Operator And(left As UInteger, right As BitFlag) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.op_BitwiseAnd*
  nameWithType.vb: BitFlag.And(UInteger, BitFlag)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.And(UInteger, ShapeEngine.Core.Structs.BitFlag)
  name.vb: And(UInteger, BitFlag)
- uid: ShapeEngine.Core.Structs.BitFlag.op_BitwiseOr(System.UInt32,ShapeEngine.Core.Structs.BitFlag)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.op_BitwiseOr(System.UInt32,ShapeEngine.Core.Structs.BitFlag)
  id: op_BitwiseOr(System.UInt32,ShapeEngine.Core.Structs.BitFlag)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: operator |(uint, BitFlag)
  nameWithType: BitFlag.operator |(uint, BitFlag)
  fullName: ShapeEngine.Core.Structs.BitFlag.operator |(uint, ShapeEngine.Core.Structs.BitFlag)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: op_BitwiseOr
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 219
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static BitFlag operator |(uint left, BitFlag right)
    parameters:
    - id: left
      type: System.UInt32
    - id: right
      type: ShapeEngine.Core.Structs.BitFlag
    return:
      type: ShapeEngine.Core.Structs.BitFlag
    content.vb: Public Shared Operator Or(left As UInteger, right As BitFlag) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.op_BitwiseOr*
  nameWithType.vb: BitFlag.Or(UInteger, BitFlag)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.Or(UInteger, ShapeEngine.Core.Structs.BitFlag)
  name.vb: Or(UInteger, BitFlag)
- uid: ShapeEngine.Core.Structs.BitFlag.op_ExclusiveOr(System.UInt32,ShapeEngine.Core.Structs.BitFlag)
  commentId: M:ShapeEngine.Core.Structs.BitFlag.op_ExclusiveOr(System.UInt32,ShapeEngine.Core.Structs.BitFlag)
  id: op_ExclusiveOr(System.UInt32,ShapeEngine.Core.Structs.BitFlag)
  parent: ShapeEngine.Core.Structs.BitFlag
  langs:
  - csharp
  - vb
  name: operator ^(uint, BitFlag)
  nameWithType: BitFlag.operator ^(uint, BitFlag)
  fullName: ShapeEngine.Core.Structs.BitFlag.operator ^(uint, ShapeEngine.Core.Structs.BitFlag)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/BitFlag.cs
      branch: main
      repo: https://github.com/DaveGreen-Games/ShapeEngine.git
    id: op_ExclusiveOr
    path: ../ShapeEngine/ShapeEngine/Core/Structs/BitFlag.cs
    startLine: 220
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: public static BitFlag operator ^(uint left, BitFlag right)
    parameters:
    - id: left
      type: System.UInt32
    - id: right
      type: ShapeEngine.Core.Structs.BitFlag
    return:
      type: ShapeEngine.Core.Structs.BitFlag
    content.vb: Public Shared Operator Xor(left As UInteger, right As BitFlag) As BitFlag
  overload: ShapeEngine.Core.Structs.BitFlag.op_ExclusiveOr*
  nameWithType.vb: BitFlag.Xor(UInteger, BitFlag)
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.Xor(UInteger, ShapeEngine.Core.Structs.BitFlag)
  name.vb: Xor(UInteger, BitFlag)
references:
- uid: ShapeEngine.Core.Structs
  commentId: N:ShapeEngine.Core.Structs
  href: ShapeEngine.html
  name: ShapeEngine.Core.Structs
  nameWithType: ShapeEngine.Core.Structs
  fullName: ShapeEngine.Core.Structs
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Structs
    name: Structs
    href: ShapeEngine.Core.Structs.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Structs
    name: Structs
    href: ShapeEngine.Core.Structs.html
- uid: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}
  commentId: T:System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}
  parent: System.Numerics
  definition: System.Numerics.IBitwiseOperators`3
  href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3
  name: IBitwiseOperators<BitFlag, BitFlag, BitFlag>
  nameWithType: IBitwiseOperators<BitFlag, BitFlag, BitFlag>
  fullName: System.Numerics.IBitwiseOperators<ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag>
  nameWithType.vb: IBitwiseOperators(Of BitFlag, BitFlag, BitFlag)
  fullName.vb: System.Numerics.IBitwiseOperators(Of ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag)
  name.vb: IBitwiseOperators(Of BitFlag, BitFlag, BitFlag)
  spec.csharp:
  - uid: System.Numerics.IBitwiseOperators`3
    name: IBitwiseOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3
  - name: <
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IBitwiseOperators`3
    name: IBitwiseOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: )
- uid: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}
  commentId: T:System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}
  parent: System.Numerics
  definition: System.Numerics.IBitwiseOperators`3
  href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3
  name: IBitwiseOperators<BitFlag, uint, BitFlag>
  nameWithType: IBitwiseOperators<BitFlag, uint, BitFlag>
  fullName: System.Numerics.IBitwiseOperators<ShapeEngine.Core.Structs.BitFlag, uint, ShapeEngine.Core.Structs.BitFlag>
  nameWithType.vb: IBitwiseOperators(Of BitFlag, UInteger, BitFlag)
  fullName.vb: System.Numerics.IBitwiseOperators(Of ShapeEngine.Core.Structs.BitFlag, UInteger, ShapeEngine.Core.Structs.BitFlag)
  name.vb: IBitwiseOperators(Of BitFlag, UInteger, BitFlag)
  spec.csharp:
  - uid: System.Numerics.IBitwiseOperators`3
    name: IBitwiseOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3
  - name: <
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IBitwiseOperators`3
    name: IBitwiseOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Numerics.IBitwiseOperators`3
  commentId: T:System.Numerics.IBitwiseOperators`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3
  name: IBitwiseOperators<TSelf, TOther, TResult>
  nameWithType: IBitwiseOperators<TSelf, TOther, TResult>
  fullName: System.Numerics.IBitwiseOperators<TSelf, TOther, TResult>
  nameWithType.vb: IBitwiseOperators(Of TSelf, TOther, TResult)
  fullName.vb: System.Numerics.IBitwiseOperators(Of TSelf, TOther, TResult)
  name.vb: IBitwiseOperators(Of TSelf, TOther, TResult)
  spec.csharp:
  - uid: System.Numerics.IBitwiseOperators`3
    name: IBitwiseOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3
  - name: <
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Numerics.IBitwiseOperators`3
    name: IBitwiseOperators
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3
  - name: (
  - name: Of
  - name: " "
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: ShapeEngine.Core.Structs.BitFlag.#ctor*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.#ctor
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag__ctor_System_UInt32_
  name: BitFlag
  nameWithType: BitFlag.BitFlag
  fullName: ShapeEngine.Core.Structs.BitFlag.BitFlag
  nameWithType.vb: BitFlag.New
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.New
  name.vb: New
- uid: System.UInt32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint[]
  nameWithType: uint[]
  fullName: uint[]
  nameWithType.vb: UInteger()
  fullName.vb: UInteger()
  name.vb: UInteger()
  spec.csharp:
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: (
  - name: )
- uid: ShapeEngine.Core.Structs.BitFlag.Clear*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.Clear
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_Clear
  name: Clear
  nameWithType: BitFlag.Clear
  fullName: ShapeEngine.Core.Structs.BitFlag.Clear
- uid: ShapeEngine.Core.Structs.BitFlag
  commentId: T:ShapeEngine.Core.Structs.BitFlag
  parent: ShapeEngine.Core.Structs
  href: ShapeEngine.Core.Structs.BitFlag.html
  name: BitFlag
  nameWithType: BitFlag
  fullName: ShapeEngine.Core.Structs.BitFlag
- uid: ShapeEngine.Core.Structs.BitFlag.IsEmpty*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.IsEmpty
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_IsEmpty
  name: IsEmpty
  nameWithType: BitFlag.IsEmpty
  fullName: ShapeEngine.Core.Structs.BitFlag.IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ShapeEngine.Core.Structs.BitFlag.Has*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.Has
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_Has_System_UInt32_
  name: Has
  nameWithType: BitFlag.Has
  fullName: ShapeEngine.Core.Structs.BitFlag.Has
- uid: ShapeEngine.Core.Structs.BitFlag.Set*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.Set
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_Set_System_UInt32_
  name: Set
  nameWithType: BitFlag.Set
  fullName: ShapeEngine.Core.Structs.BitFlag.Set
- uid: ShapeEngine.Core.Structs.BitFlag.Add*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.Add
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_Add_System_UInt32_
  name: Add
  nameWithType: BitFlag.Add
  fullName: ShapeEngine.Core.Structs.BitFlag.Add
- uid: ShapeEngine.Core.Structs.BitFlag.Remove*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.Remove
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_Remove_System_UInt32_
  name: Remove
  nameWithType: BitFlag.Remove
  fullName: ShapeEngine.Core.Structs.BitFlag.Remove
- uid: ShapeEngine.Core.Structs.BitFlag[]
  isExternal: true
  href: ShapeEngine.Core.Structs.BitFlag.html
  name: BitFlag[]
  nameWithType: BitFlag[]
  fullName: ShapeEngine.Core.Structs.BitFlag[]
  nameWithType.vb: BitFlag()
  fullName.vb: ShapeEngine.Core.Structs.BitFlag()
  name.vb: BitFlag()
  spec.csharp:
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: (
  - name: )
- uid: ShapeEngine.Core.Structs.BitFlag.Get*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.Get
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_Get_System_UInt32_
  name: Get
  nameWithType: BitFlag.Get
  fullName: ShapeEngine.Core.Structs.BitFlag.Get
- uid: ShapeEngine.Core.Structs.BitFlag.Empty*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.Empty
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_Empty
  name: Empty
  nameWithType: BitFlag.Empty
  fullName: ShapeEngine.Core.Structs.BitFlag.Empty
- uid: ShapeEngine.Core.Structs.BitFlag.EmptyIntFlag*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.EmptyIntFlag
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_EmptyIntFlag
  name: EmptyIntFlag
  nameWithType: BitFlag.EmptyIntFlag
  fullName: ShapeEngine.Core.Structs.BitFlag.EmptyIntFlag
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ShapeEngine.Core.Structs.BitFlag.GetFlagInt*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.GetFlagInt
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_GetFlagInt_System_Int32_
  name: GetFlagInt
  nameWithType: BitFlag.GetFlagInt
  fullName: ShapeEngine.Core.Structs.BitFlag.GetFlagInt
- uid: ShapeEngine.Core.Structs.BitFlag.HasIntFlag*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.HasIntFlag
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_HasIntFlag_System_Int32_System_Int32_
  name: HasIntFlag
  nameWithType: BitFlag.HasIntFlag
  fullName: ShapeEngine.Core.Structs.BitFlag.HasIntFlag
- uid: ShapeEngine.Core.Structs.BitFlag.SetIntFlag*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.SetIntFlag
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_SetIntFlag_System_Int32_System_Int32_
  name: SetIntFlag
  nameWithType: BitFlag.SetIntFlag
  fullName: ShapeEngine.Core.Structs.BitFlag.SetIntFlag
- uid: ShapeEngine.Core.Structs.BitFlag.AddIntFlag*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.AddIntFlag
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_AddIntFlag_System_Int32_System_Int32_
  name: AddIntFlag
  nameWithType: BitFlag.AddIntFlag
  fullName: ShapeEngine.Core.Structs.BitFlag.AddIntFlag
- uid: ShapeEngine.Core.Structs.BitFlag.RemoveIntFlag*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.RemoveIntFlag
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_RemoveIntFlag_System_Int32_System_Int32_
  name: RemoveIntFlag
  nameWithType: BitFlag.RemoveIntFlag
  fullName: ShapeEngine.Core.Structs.BitFlag.RemoveIntFlag
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: ShapeEngine.Core.Structs.BitFlag.NextFlag*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.NextFlag
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_NextFlag
  name: NextFlag
  nameWithType: BitFlag.NextFlag
  fullName: ShapeEngine.Core.Structs.BitFlag.NextFlag
- uid: ShapeEngine.Core.Structs.BitFlag.NextFlagInt*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.NextFlagInt
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_NextFlagInt
  name: NextFlagInt
  nameWithType: BitFlag.NextFlagInt
  fullName: ShapeEngine.Core.Structs.BitFlag.NextFlagInt
- uid: ShapeEngine.Core.Structs.BitFlag.EmptyUintFlag*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.EmptyUintFlag
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_EmptyUintFlag
  name: EmptyUintFlag
  nameWithType: BitFlag.EmptyUintFlag
  fullName: ShapeEngine.Core.Structs.BitFlag.EmptyUintFlag
- uid: ShapeEngine.Core.Structs.BitFlag.GetFlagUint*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.GetFlagUint
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_GetFlagUint_System_UInt32_
  name: GetFlagUint
  nameWithType: BitFlag.GetFlagUint
  fullName: ShapeEngine.Core.Structs.BitFlag.GetFlagUint
- uid: ShapeEngine.Core.Structs.BitFlag.HasUintFlag*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.HasUintFlag
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_HasUintFlag_System_UInt32_System_UInt32_
  name: HasUintFlag
  nameWithType: BitFlag.HasUintFlag
  fullName: ShapeEngine.Core.Structs.BitFlag.HasUintFlag
- uid: ShapeEngine.Core.Structs.BitFlag.SetUintFlag*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.SetUintFlag
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_SetUintFlag_System_UInt32_System_UInt32_
  name: SetUintFlag
  nameWithType: BitFlag.SetUintFlag
  fullName: ShapeEngine.Core.Structs.BitFlag.SetUintFlag
- uid: ShapeEngine.Core.Structs.BitFlag.AddUintFlag*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.AddUintFlag
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_AddUintFlag_System_UInt32_System_UInt32_
  name: AddUintFlag
  nameWithType: BitFlag.AddUintFlag
  fullName: ShapeEngine.Core.Structs.BitFlag.AddUintFlag
- uid: ShapeEngine.Core.Structs.BitFlag.RemoveUintFlag*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.RemoveUintFlag
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_RemoveUintFlag_System_UInt32_System_UInt32_
  name: RemoveUintFlag
  nameWithType: BitFlag.RemoveUintFlag
  fullName: ShapeEngine.Core.Structs.BitFlag.RemoveUintFlag
- uid: ShapeEngine.Core.Structs.BitFlag.op_OnesComplement*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.op_OnesComplement
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_op_OnesComplement_ShapeEngine_Core_Structs_BitFlag_
  name: operator ~
  nameWithType: BitFlag.operator ~
  fullName: ShapeEngine.Core.Structs.BitFlag.operator ~
  nameWithType.vb: BitFlag.Not
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.Not
  name.vb: Not
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ShapeEngine.Core.Structs.BitFlag.op_OnesComplement*
    name: "~"
    href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_op_OnesComplement_ShapeEngine_Core_Structs_BitFlag_
- uid: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}.op_OnesComplement(ShapeEngine.Core.Structs.BitFlag)
  commentId: M:System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}.op_OnesComplement(ShapeEngine.Core.Structs.BitFlag)
  parent: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}
  definition: System.Numerics.IBitwiseOperators`3.op_OnesComplement(`0)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_onescomplement
  name: operator ~(BitFlag)
  nameWithType: IBitwiseOperators<BitFlag, BitFlag, BitFlag>.operator ~(BitFlag)
  fullName: System.Numerics.IBitwiseOperators<ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag>.operator ~(ShapeEngine.Core.Structs.BitFlag)
  nameWithType.vb: IBitwiseOperators(Of BitFlag, BitFlag, BitFlag).Not(BitFlag)
  fullName.vb: System.Numerics.IBitwiseOperators(Of ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag).Not(ShapeEngine.Core.Structs.BitFlag)
  name.vb: Not(BitFlag)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}.op_OnesComplement(ShapeEngine.Core.Structs.BitFlag)
    name: "~"
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_onescomplement
  - name: (
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: )
  spec.vb:
  - name: Not
  - name: (
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: )
- uid: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}.op_OnesComplement(ShapeEngine.Core.Structs.BitFlag)
  commentId: M:System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}.op_OnesComplement(ShapeEngine.Core.Structs.BitFlag)
  parent: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}
  definition: System.Numerics.IBitwiseOperators`3.op_OnesComplement(`0)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_onescomplement
  name: operator ~(BitFlag)
  nameWithType: IBitwiseOperators<BitFlag, uint, BitFlag>.operator ~(BitFlag)
  fullName: System.Numerics.IBitwiseOperators<ShapeEngine.Core.Structs.BitFlag, uint, ShapeEngine.Core.Structs.BitFlag>.operator ~(ShapeEngine.Core.Structs.BitFlag)
  nameWithType.vb: IBitwiseOperators(Of BitFlag, UInteger, BitFlag).Not(BitFlag)
  fullName.vb: System.Numerics.IBitwiseOperators(Of ShapeEngine.Core.Structs.BitFlag, UInteger, ShapeEngine.Core.Structs.BitFlag).Not(ShapeEngine.Core.Structs.BitFlag)
  name.vb: Not(BitFlag)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}.op_OnesComplement(ShapeEngine.Core.Structs.BitFlag)
    name: "~"
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_onescomplement
  - name: (
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: )
  spec.vb:
  - name: Not
  - name: (
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: )
- uid: System.Numerics.IBitwiseOperators`3.op_OnesComplement(`0)
  commentId: M:System.Numerics.IBitwiseOperators`3.op_OnesComplement(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_onescomplement
  name: operator ~(TSelf)
  nameWithType: IBitwiseOperators<TSelf, TOther, TResult>.operator ~(TSelf)
  fullName: System.Numerics.IBitwiseOperators<TSelf, TOther, TResult>.operator ~(TSelf)
  nameWithType.vb: IBitwiseOperators(Of TSelf, TOther, TResult).Not(TSelf)
  fullName.vb: System.Numerics.IBitwiseOperators(Of TSelf, TOther, TResult).Not(TSelf)
  name.vb: Not(TSelf)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IBitwiseOperators`3.op_OnesComplement(`0)
    name: "~"
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_onescomplement
  - name: (
  - name: TSelf
  - name: )
  spec.vb:
  - name: Not
  - name: (
  - name: TSelf
  - name: )
- uid: ShapeEngine.Core.Structs.BitFlag.op_BitwiseAnd*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.op_BitwiseAnd
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_op_BitwiseAnd_ShapeEngine_Core_Structs_BitFlag_ShapeEngine_Core_Structs_BitFlag_
  name: operator &
  nameWithType: BitFlag.operator &
  fullName: ShapeEngine.Core.Structs.BitFlag.operator &
  nameWithType.vb: BitFlag.And
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.And
  name.vb: And
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ShapeEngine.Core.Structs.BitFlag.op_BitwiseAnd*
    name: '&'
    href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_op_BitwiseAnd_ShapeEngine_Core_Structs_BitFlag_ShapeEngine_Core_Structs_BitFlag_
- uid: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}.op_BitwiseAnd(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  commentId: M:System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}.op_BitwiseAnd(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  parent: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}
  definition: System.Numerics.IBitwiseOperators`3.op_BitwiseAnd(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_bitwiseand
  name: operator &(BitFlag, BitFlag)
  nameWithType: IBitwiseOperators<BitFlag, BitFlag, BitFlag>.operator &(BitFlag, BitFlag)
  fullName: System.Numerics.IBitwiseOperators<ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag>.operator &(ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag)
  nameWithType.vb: IBitwiseOperators(Of BitFlag, BitFlag, BitFlag).And(BitFlag, BitFlag)
  fullName.vb: System.Numerics.IBitwiseOperators(Of ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag).And(ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag)
  name.vb: And(BitFlag, BitFlag)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}.op_BitwiseAnd(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
    name: '&'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_bitwiseand
  - name: (
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: )
  spec.vb:
  - name: And
  - name: (
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: )
- uid: System.Numerics.IBitwiseOperators`3.op_BitwiseAnd(`0,`1)
  commentId: M:System.Numerics.IBitwiseOperators`3.op_BitwiseAnd(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_bitwiseand
  name: operator &(TSelf, TOther)
  nameWithType: IBitwiseOperators<TSelf, TOther, TResult>.operator &(TSelf, TOther)
  fullName: System.Numerics.IBitwiseOperators<TSelf, TOther, TResult>.operator &(TSelf, TOther)
  nameWithType.vb: IBitwiseOperators(Of TSelf, TOther, TResult).And(TSelf, TOther)
  fullName.vb: System.Numerics.IBitwiseOperators(Of TSelf, TOther, TResult).And(TSelf, TOther)
  name.vb: And(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IBitwiseOperators`3.op_BitwiseAnd(`0,`1)
    name: '&'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_bitwiseand
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: And
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: ShapeEngine.Core.Structs.BitFlag.op_BitwiseOr*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.op_BitwiseOr
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_op_BitwiseOr_ShapeEngine_Core_Structs_BitFlag_ShapeEngine_Core_Structs_BitFlag_
  name: operator |
  nameWithType: BitFlag.operator |
  fullName: ShapeEngine.Core.Structs.BitFlag.operator |
  nameWithType.vb: BitFlag.Or
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.Or
  name.vb: Or
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ShapeEngine.Core.Structs.BitFlag.op_BitwiseOr*
    name: '|'
    href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_op_BitwiseOr_ShapeEngine_Core_Structs_BitFlag_ShapeEngine_Core_Structs_BitFlag_
- uid: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}.op_BitwiseOr(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  commentId: M:System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}.op_BitwiseOr(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  parent: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}
  definition: System.Numerics.IBitwiseOperators`3.op_BitwiseOr(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_bitwiseor
  name: operator |(BitFlag, BitFlag)
  nameWithType: IBitwiseOperators<BitFlag, BitFlag, BitFlag>.operator |(BitFlag, BitFlag)
  fullName: System.Numerics.IBitwiseOperators<ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag>.operator |(ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag)
  nameWithType.vb: IBitwiseOperators(Of BitFlag, BitFlag, BitFlag).Or(BitFlag, BitFlag)
  fullName.vb: System.Numerics.IBitwiseOperators(Of ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag).Or(ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag)
  name.vb: Or(BitFlag, BitFlag)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}.op_BitwiseOr(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
    name: '|'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_bitwiseor
  - name: (
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: )
  spec.vb:
  - name: Or
  - name: (
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: )
- uid: System.Numerics.IBitwiseOperators`3.op_BitwiseOr(`0,`1)
  commentId: M:System.Numerics.IBitwiseOperators`3.op_BitwiseOr(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_bitwiseor
  name: operator |(TSelf, TOther)
  nameWithType: IBitwiseOperators<TSelf, TOther, TResult>.operator |(TSelf, TOther)
  fullName: System.Numerics.IBitwiseOperators<TSelf, TOther, TResult>.operator |(TSelf, TOther)
  nameWithType.vb: IBitwiseOperators(Of TSelf, TOther, TResult).Or(TSelf, TOther)
  fullName.vb: System.Numerics.IBitwiseOperators(Of TSelf, TOther, TResult).Or(TSelf, TOther)
  name.vb: Or(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IBitwiseOperators`3.op_BitwiseOr(`0,`1)
    name: '|'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_bitwiseor
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: Or
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: ShapeEngine.Core.Structs.BitFlag.op_ExclusiveOr*
  commentId: Overload:ShapeEngine.Core.Structs.BitFlag.op_ExclusiveOr
  href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_op_ExclusiveOr_ShapeEngine_Core_Structs_BitFlag_ShapeEngine_Core_Structs_BitFlag_
  name: operator ^
  nameWithType: BitFlag.operator ^
  fullName: ShapeEngine.Core.Structs.BitFlag.operator ^
  nameWithType.vb: BitFlag.Xor
  fullName.vb: ShapeEngine.Core.Structs.BitFlag.Xor
  name.vb: Xor
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ShapeEngine.Core.Structs.BitFlag.op_ExclusiveOr*
    name: ^
    href: ShapeEngine.Core.Structs.BitFlag.html#ShapeEngine_Core_Structs_BitFlag_op_ExclusiveOr_ShapeEngine_Core_Structs_BitFlag_ShapeEngine_Core_Structs_BitFlag_
- uid: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}.op_ExclusiveOr(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  commentId: M:System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}.op_ExclusiveOr(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  parent: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}
  definition: System.Numerics.IBitwiseOperators`3.op_ExclusiveOr(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_exclusiveor
  name: operator ^(BitFlag, BitFlag)
  nameWithType: IBitwiseOperators<BitFlag, BitFlag, BitFlag>.operator ^(BitFlag, BitFlag)
  fullName: System.Numerics.IBitwiseOperators<ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag>.operator ^(ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag)
  nameWithType.vb: IBitwiseOperators(Of BitFlag, BitFlag, BitFlag).Xor(BitFlag, BitFlag)
  fullName.vb: System.Numerics.IBitwiseOperators(Of ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag).Xor(ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag)
  name.vb: Xor(BitFlag, BitFlag)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag}.op_ExclusiveOr(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
    name: ^
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_exclusiveor
  - name: (
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: )
  spec.vb:
  - name: Xor
  - name: (
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: ','
  - name: " "
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: )
- uid: System.Numerics.IBitwiseOperators`3.op_ExclusiveOr(`0,`1)
  commentId: M:System.Numerics.IBitwiseOperators`3.op_ExclusiveOr(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_exclusiveor
  name: operator ^(TSelf, TOther)
  nameWithType: IBitwiseOperators<TSelf, TOther, TResult>.operator ^(TSelf, TOther)
  fullName: System.Numerics.IBitwiseOperators<TSelf, TOther, TResult>.operator ^(TSelf, TOther)
  nameWithType.vb: IBitwiseOperators(Of TSelf, TOther, TResult).Xor(TSelf, TOther)
  fullName.vb: System.Numerics.IBitwiseOperators(Of TSelf, TOther, TResult).Xor(TSelf, TOther)
  name.vb: Xor(TSelf, TOther)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IBitwiseOperators`3.op_ExclusiveOr(`0,`1)
    name: ^
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_exclusiveor
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
  spec.vb:
  - name: Xor
  - name: (
  - name: TSelf
  - name: ','
  - name: " "
  - name: TOther
  - name: )
- uid: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}.op_BitwiseAnd(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  commentId: M:System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}.op_BitwiseAnd(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  parent: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}
  definition: System.Numerics.IBitwiseOperators`3.op_BitwiseAnd(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_bitwiseand
  name: operator &(BitFlag, uint)
  nameWithType: IBitwiseOperators<BitFlag, uint, BitFlag>.operator &(BitFlag, uint)
  fullName: System.Numerics.IBitwiseOperators<ShapeEngine.Core.Structs.BitFlag, uint, ShapeEngine.Core.Structs.BitFlag>.operator &(ShapeEngine.Core.Structs.BitFlag, uint)
  nameWithType.vb: IBitwiseOperators(Of BitFlag, UInteger, BitFlag).And(BitFlag, UInteger)
  fullName.vb: System.Numerics.IBitwiseOperators(Of ShapeEngine.Core.Structs.BitFlag, UInteger, ShapeEngine.Core.Structs.BitFlag).And(ShapeEngine.Core.Structs.BitFlag, UInteger)
  name.vb: And(BitFlag, UInteger)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}.op_BitwiseAnd(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
    name: '&'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_bitwiseand
  - name: (
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - name: And
  - name: (
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}.op_BitwiseOr(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  commentId: M:System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}.op_BitwiseOr(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  parent: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}
  definition: System.Numerics.IBitwiseOperators`3.op_BitwiseOr(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_bitwiseor
  name: operator |(BitFlag, uint)
  nameWithType: IBitwiseOperators<BitFlag, uint, BitFlag>.operator |(BitFlag, uint)
  fullName: System.Numerics.IBitwiseOperators<ShapeEngine.Core.Structs.BitFlag, uint, ShapeEngine.Core.Structs.BitFlag>.operator |(ShapeEngine.Core.Structs.BitFlag, uint)
  nameWithType.vb: IBitwiseOperators(Of BitFlag, UInteger, BitFlag).Or(BitFlag, UInteger)
  fullName.vb: System.Numerics.IBitwiseOperators(Of ShapeEngine.Core.Structs.BitFlag, UInteger, ShapeEngine.Core.Structs.BitFlag).Or(ShapeEngine.Core.Structs.BitFlag, UInteger)
  name.vb: Or(BitFlag, UInteger)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}.op_BitwiseOr(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
    name: '|'
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_bitwiseor
  - name: (
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - name: Or
  - name: (
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}.op_ExclusiveOr(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  commentId: M:System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}.op_ExclusiveOr(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
  parent: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}
  definition: System.Numerics.IBitwiseOperators`3.op_ExclusiveOr(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_exclusiveor
  name: operator ^(BitFlag, uint)
  nameWithType: IBitwiseOperators<BitFlag, uint, BitFlag>.operator ^(BitFlag, uint)
  fullName: System.Numerics.IBitwiseOperators<ShapeEngine.Core.Structs.BitFlag, uint, ShapeEngine.Core.Structs.BitFlag>.operator ^(ShapeEngine.Core.Structs.BitFlag, uint)
  nameWithType.vb: IBitwiseOperators(Of BitFlag, UInteger, BitFlag).Xor(BitFlag, UInteger)
  fullName.vb: System.Numerics.IBitwiseOperators(Of ShapeEngine.Core.Structs.BitFlag, UInteger, ShapeEngine.Core.Structs.BitFlag).Xor(ShapeEngine.Core.Structs.BitFlag, UInteger)
  name.vb: Xor(BitFlag, UInteger)
  spec.csharp:
  - name: operator
  - name: " "
  - uid: System.Numerics.IBitwiseOperators{ShapeEngine.Core.Structs.BitFlag,System.UInt32,ShapeEngine.Core.Structs.BitFlag}.op_ExclusiveOr(ShapeEngine.Core.Structs.BitFlag,System.UInt32)
    name: ^
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.ibitwiseoperators-3.op_exclusiveor
  - name: (
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - name: Xor
  - name: (
  - uid: ShapeEngine.Core.Structs.BitFlag
    name: BitFlag
    href: ShapeEngine.Core.Structs.BitFlag.html
  - name: ','
  - name: " "
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
