### YamlMime:ManagedReference
items:
- uid: ShapeEngine.Input.InputAction
  commentId: T:ShapeEngine.Input.InputAction
  id: InputAction
  parent: ShapeEngine.Input
  children:
  - ShapeEngine.Input.InputAction.#ctor
  - ShapeEngine.Input.InputAction.#ctor(ShapeEngine.Input.IInputType[])
  - ShapeEngine.Input.InputAction.#ctor(System.UInt32)
  - ShapeEngine.Input.InputAction.#ctor(System.UInt32,ShapeEngine.Input.IInputType[])
  - ShapeEngine.Input.InputAction.#ctor(System.UInt32,ShapeEngine.Input.ShapeGamepadDevice)
  - ShapeEngine.Input.InputAction.#ctor(System.UInt32,ShapeEngine.Input.ShapeGamepadDevice,ShapeEngine.Input.IInputType[])
  - ShapeEngine.Input.InputAction.AccessTag
  - ShapeEngine.Input.InputAction.AddInput(ShapeEngine.Input.IInputType)
  - ShapeEngine.Input.InputAction.AddInputs(ShapeEngine.Input.IInputType[])
  - ShapeEngine.Input.InputAction.AllAccessTag
  - ShapeEngine.Input.InputAction.AxisGravity
  - ShapeEngine.Input.InputAction.AxisSensitivity
  - ShapeEngine.Input.InputAction.ClearInputs
  - ShapeEngine.Input.InputAction.ClearState
  - ShapeEngine.Input.InputAction.Consume
  - ShapeEngine.Input.InputAction.Copy
  - ShapeEngine.Input.InputAction.DefaultAccessTag
  - ShapeEngine.Input.InputAction.Enabled
  - ShapeEngine.Input.InputAction.Gamepad
  - ShapeEngine.Input.InputAction.GetActionDescriptions(ShapeEngine.Input.InputDeviceType,System.Boolean,System.Int32,ShapeEngine.Input.InputAction[])
  - ShapeEngine.Input.InputAction.GetActionDescriptions(ShapeEngine.Input.InputDeviceType,System.Boolean,System.Int32,System.Collections.Generic.List{ShapeEngine.Input.InputAction})
  - ShapeEngine.Input.InputAction.GetGamepadIndex
  - ShapeEngine.Input.InputAction.GetInputTypeDescription(ShapeEngine.Input.InputDeviceType,System.Boolean,System.Int32,System.Boolean,System.Boolean)
  - ShapeEngine.Input.InputAction.GetInputTypeDescription(System.Boolean,System.Int32,System.Boolean)
  - ShapeEngine.Input.InputAction.GetInputTypeDescriptionPerDevice(System.Boolean,System.Int32,System.Boolean)
  - ShapeEngine.Input.InputAction.GetInputTypeNames(ShapeEngine.Input.InputDeviceType,System.Boolean,System.Int32)
  - ShapeEngine.Input.InputAction.GetInputTypeNames(System.Boolean)
  - ShapeEngine.Input.InputAction.GetInputTypeNamesLimited(System.Boolean,System.Int32)
  - ShapeEngine.Input.InputAction.GetInputTypeNamesLimitedPerDevice(System.Boolean,System.Int32)
  - ShapeEngine.Input.InputAction.GetInputs
  - ShapeEngine.Input.InputAction.GetInputs(ShapeEngine.Input.InputDeviceType)
  - ShapeEngine.Input.InputAction.GetInputs(ShapeEngine.Input.InputDeviceType,System.Int32)
  - ShapeEngine.Input.InputAction.GetInputs(System.Int32)
  - ShapeEngine.Input.InputAction.GetInputsCopied
  - ShapeEngine.Input.InputAction.GetInputsCopied(ShapeEngine.Input.InputDeviceType)
  - ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeGamepadAxis,System.UInt32,System.Int32,System.Single)
  - ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeGamepadButton,ShapeEngine.Input.ShapeGamepadButton,System.UInt32,System.Int32,System.Single)
  - ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeGamepadButton,System.UInt32,System.Int32,System.Single)
  - ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeKeyboardButton,ShapeEngine.Input.ShapeKeyboardButton,System.UInt32)
  - ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeKeyboardButton,System.UInt32)
  - ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeMouseButton,ShapeEngine.Input.ShapeMouseButton,System.UInt32)
  - ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeMouseButton,System.UInt32)
  - ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeMouseWheelAxis,System.UInt32,System.Single)
  - ShapeEngine.Input.InputAction.HasAccess(ShapeEngine.Input.InputAction)
  - ShapeEngine.Input.InputAction.HasAccess(System.UInt32)
  - ShapeEngine.Input.InputAction.HasInput(ShapeEngine.Input.IInputType)
  - ShapeEngine.Input.InputAction.HasInput(ShapeEngine.Input.InputDeviceType)
  - ShapeEngine.Input.InputAction.HoldDuration
  - ShapeEngine.Input.InputAction.ID
  - ShapeEngine.Input.InputAction.IsInputAvailable(System.UInt32)
  - ShapeEngine.Input.InputAction.Lock
  - ShapeEngine.Input.InputAction.Lock(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  - ShapeEngine.Input.InputAction.LockBlacklist(ShapeEngine.Core.Structs.BitFlag)
  - ShapeEngine.Input.InputAction.LockWhitelist(ShapeEngine.Core.Structs.BitFlag)
  - ShapeEngine.Input.InputAction.Locked
  - ShapeEngine.Input.InputAction.MultiTapDuration
  - ShapeEngine.Input.InputAction.MultiTapTarget
  - ShapeEngine.Input.InputAction.NextTag
  - ShapeEngine.Input.InputAction.RemoveInput(ShapeEngine.Input.IInputType)
  - ShapeEngine.Input.InputAction.RemoveInputs(ShapeEngine.Input.InputDeviceType)
  - ShapeEngine.Input.InputAction.State
  - ShapeEngine.Input.InputAction.Title
  - ShapeEngine.Input.InputAction.Unlock
  - ShapeEngine.Input.InputAction.Update(System.Single)
  - ShapeEngine.Input.InputAction.UpdateActions(System.Single,ShapeEngine.Input.ShapeGamepadDevice,ShapeEngine.Input.InputAction[])
  - ShapeEngine.Input.InputAction.UpdateActions(System.Single,ShapeEngine.Input.ShapeGamepadDevice,System.Collections.Generic.List{ShapeEngine.Input.InputAction})
  langs:
  - csharp
  - vb
  name: InputAction
  nameWithType: InputAction
  fullName: ShapeEngine.Input.InputAction
  type: Class
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: InputAction
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 7
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public class InputAction
    content.vb: Public Class InputAction
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ShapeEngine.Input.InputAction.Enabled
  commentId: F:ShapeEngine.Input.InputAction.Enabled
  id: Enabled
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: InputAction.Enabled
  fullName: ShapeEngine.Input.InputAction.Enabled
  type: Field
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Enabled
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 11
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public bool Enabled
    return:
      type: System.Boolean
    content.vb: Public Enabled As Boolean
- uid: ShapeEngine.Input.InputAction.ID
  commentId: P:ShapeEngine.Input.InputAction.ID
  id: ID
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: InputAction.ID
  fullName: ShapeEngine.Input.InputAction.ID
  type: Property
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: ID
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 12
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public uint ID { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property ID As UInteger
  overload: ShapeEngine.Input.InputAction.ID*
- uid: ShapeEngine.Input.InputAction.AccessTag
  commentId: P:ShapeEngine.Input.InputAction.AccessTag
  id: AccessTag
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: AccessTag
  nameWithType: InputAction.AccessTag
  fullName: ShapeEngine.Input.InputAction.AccessTag
  type: Property
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: AccessTag
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 13
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public uint AccessTag { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Property AccessTag As UInteger
  overload: ShapeEngine.Input.InputAction.AccessTag*
- uid: ShapeEngine.Input.InputAction.Gamepad
  commentId: F:ShapeEngine.Input.InputAction.Gamepad
  id: Gamepad
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: Gamepad
  nameWithType: InputAction.Gamepad
  fullName: ShapeEngine.Input.InputAction.Gamepad
  type: Field
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Gamepad
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 15
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public ShapeGamepadDevice? Gamepad
    return:
      type: ShapeEngine.Input.ShapeGamepadDevice
    content.vb: Public Gamepad As ShapeGamepadDevice
- uid: ShapeEngine.Input.InputAction.Title
  commentId: F:ShapeEngine.Input.InputAction.Title
  id: Title
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: InputAction.Title
  fullName: ShapeEngine.Input.InputAction.Title
  type: Field
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Title
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 16
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public string Title
    return:
      type: System.String
    content.vb: Public Title As String
- uid: ShapeEngine.Input.InputAction.MultiTapTarget
  commentId: P:ShapeEngine.Input.InputAction.MultiTapTarget
  id: MultiTapTarget
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: MultiTapTarget
  nameWithType: InputAction.MultiTapTarget
  fullName: ShapeEngine.Input.InputAction.MultiTapTarget
  type: Property
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: MultiTapTarget
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 25
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public int MultiTapTarget { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MultiTapTarget As Integer
  overload: ShapeEngine.Input.InputAction.MultiTapTarget*
- uid: ShapeEngine.Input.InputAction.HoldDuration
  commentId: P:ShapeEngine.Input.InputAction.HoldDuration
  id: HoldDuration
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: HoldDuration
  nameWithType: InputAction.HoldDuration
  fullName: ShapeEngine.Input.InputAction.HoldDuration
  type: Property
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: HoldDuration
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 30
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public float HoldDuration { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property HoldDuration As Single
  overload: ShapeEngine.Input.InputAction.HoldDuration*
- uid: ShapeEngine.Input.InputAction.MultiTapDuration
  commentId: P:ShapeEngine.Input.InputAction.MultiTapDuration
  id: MultiTapDuration
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: MultiTapDuration
  nameWithType: InputAction.MultiTapDuration
  fullName: ShapeEngine.Input.InputAction.MultiTapDuration
  type: Property
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: MultiTapDuration
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 35
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public float MultiTapDuration { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property MultiTapDuration As Single
  overload: ShapeEngine.Input.InputAction.MultiTapDuration*
- uid: ShapeEngine.Input.InputAction.AxisSensitivity
  commentId: P:ShapeEngine.Input.InputAction.AxisSensitivity
  id: AxisSensitivity
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: AxisSensitivity
  nameWithType: InputAction.AxisSensitivity
  fullName: ShapeEngine.Input.InputAction.AxisSensitivity
  type: Property
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: AxisSensitivity
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 47
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  summary: >-
    How fast an axis moves towards the max value (1 / -1) in seconds.

    Used for calculating InputState.Axis values.
  example: []
  syntax:
    content: public float AxisSensitivity { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property AxisSensitivity As Single
  overload: ShapeEngine.Input.InputAction.AxisSensitivity*
- uid: ShapeEngine.Input.InputAction.AxisGravity
  commentId: P:ShapeEngine.Input.InputAction.AxisGravity
  id: AxisGravity
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: AxisGravity
  nameWithType: InputAction.AxisGravity
  fullName: ShapeEngine.Input.InputAction.AxisGravity
  type: Property
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: AxisGravity
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 56
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  summary: >-
    How fast an axis moves towards 0 after no input is detected.

    Used for calculating InputState.Axis values.
  example: []
  syntax:
    content: public float AxisGravity { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property AxisGravity As Single
  overload: ShapeEngine.Input.InputAction.AxisGravity*
- uid: ShapeEngine.Input.InputAction.State
  commentId: P:ShapeEngine.Input.InputAction.State
  id: State
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: State
  nameWithType: InputAction.State
  fullName: ShapeEngine.Input.InputAction.State
  type: Property
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: State
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 66
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public InputState State { get; }
    parameters: []
    return:
      type: ShapeEngine.Input.InputState
    content.vb: Public Property State As InputState
  overload: ShapeEngine.Input.InputAction.State*
- uid: ShapeEngine.Input.InputAction.#ctor
  commentId: M:ShapeEngine.Input.InputAction.#ctor
  id: '#ctor'
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: InputAction()
  nameWithType: InputAction.InputAction()
  fullName: ShapeEngine.Input.InputAction.InputAction()
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 82
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public InputAction()
    content.vb: Public Sub New()
  overload: ShapeEngine.Input.InputAction.#ctor*
  nameWithType.vb: InputAction.New()
  fullName.vb: ShapeEngine.Input.InputAction.New()
  name.vb: New()
- uid: ShapeEngine.Input.InputAction.#ctor(System.UInt32)
  commentId: M:ShapeEngine.Input.InputAction.#ctor(System.UInt32)
  id: '#ctor(System.UInt32)'
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: InputAction(uint)
  nameWithType: InputAction.InputAction(uint)
  fullName: ShapeEngine.Input.InputAction.InputAction(uint)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 86
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public InputAction(uint accessTag)
    parameters:
    - id: accessTag
      type: System.UInt32
    content.vb: Public Sub New(accessTag As UInteger)
  overload: ShapeEngine.Input.InputAction.#ctor*
  nameWithType.vb: InputAction.New(UInteger)
  fullName.vb: ShapeEngine.Input.InputAction.New(UInteger)
  name.vb: New(UInteger)
- uid: ShapeEngine.Input.InputAction.#ctor(System.UInt32,ShapeEngine.Input.ShapeGamepadDevice)
  commentId: M:ShapeEngine.Input.InputAction.#ctor(System.UInt32,ShapeEngine.Input.ShapeGamepadDevice)
  id: '#ctor(System.UInt32,ShapeEngine.Input.ShapeGamepadDevice)'
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: InputAction(uint, ShapeGamepadDevice)
  nameWithType: InputAction.InputAction(uint, ShapeGamepadDevice)
  fullName: ShapeEngine.Input.InputAction.InputAction(uint, ShapeEngine.Input.ShapeGamepadDevice)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 91
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public InputAction(uint accessTag, ShapeGamepadDevice gamepad)
    parameters:
    - id: accessTag
      type: System.UInt32
    - id: gamepad
      type: ShapeEngine.Input.ShapeGamepadDevice
    content.vb: Public Sub New(accessTag As UInteger, gamepad As ShapeGamepadDevice)
  overload: ShapeEngine.Input.InputAction.#ctor*
  nameWithType.vb: InputAction.New(UInteger, ShapeGamepadDevice)
  fullName.vb: ShapeEngine.Input.InputAction.New(UInteger, ShapeEngine.Input.ShapeGamepadDevice)
  name.vb: New(UInteger, ShapeGamepadDevice)
- uid: ShapeEngine.Input.InputAction.#ctor(ShapeEngine.Input.IInputType[])
  commentId: M:ShapeEngine.Input.InputAction.#ctor(ShapeEngine.Input.IInputType[])
  id: '#ctor(ShapeEngine.Input.IInputType[])'
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: InputAction(params IInputType[])
  nameWithType: InputAction.InputAction(params IInputType[])
  fullName: ShapeEngine.Input.InputAction.InputAction(params ShapeEngine.Input.IInputType[])
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 98
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public InputAction(params IInputType[] inputTypes)
    parameters:
    - id: inputTypes
      type: ShapeEngine.Input.IInputType[]
    content.vb: Public Sub New(ParamArray inputTypes As IInputType())
  overload: ShapeEngine.Input.InputAction.#ctor*
  nameWithType.vb: InputAction.New(ParamArray IInputType())
  fullName.vb: ShapeEngine.Input.InputAction.New(ParamArray ShapeEngine.Input.IInputType())
  name.vb: New(ParamArray IInputType())
- uid: ShapeEngine.Input.InputAction.#ctor(System.UInt32,ShapeEngine.Input.IInputType[])
  commentId: M:ShapeEngine.Input.InputAction.#ctor(System.UInt32,ShapeEngine.Input.IInputType[])
  id: '#ctor(System.UInt32,ShapeEngine.Input.IInputType[])'
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: InputAction(uint, params IInputType[])
  nameWithType: InputAction.InputAction(uint, params IInputType[])
  fullName: ShapeEngine.Input.InputAction.InputAction(uint, params ShapeEngine.Input.IInputType[])
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 103
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public InputAction(uint accessTag, params IInputType[] inputTypes)
    parameters:
    - id: accessTag
      type: System.UInt32
    - id: inputTypes
      type: ShapeEngine.Input.IInputType[]
    content.vb: Public Sub New(accessTag As UInteger, ParamArray inputTypes As IInputType())
  overload: ShapeEngine.Input.InputAction.#ctor*
  nameWithType.vb: InputAction.New(UInteger, ParamArray IInputType())
  fullName.vb: ShapeEngine.Input.InputAction.New(UInteger, ParamArray ShapeEngine.Input.IInputType())
  name.vb: New(UInteger, ParamArray IInputType())
- uid: ShapeEngine.Input.InputAction.#ctor(System.UInt32,ShapeEngine.Input.ShapeGamepadDevice,ShapeEngine.Input.IInputType[])
  commentId: M:ShapeEngine.Input.InputAction.#ctor(System.UInt32,ShapeEngine.Input.ShapeGamepadDevice,ShapeEngine.Input.IInputType[])
  id: '#ctor(System.UInt32,ShapeEngine.Input.ShapeGamepadDevice,ShapeEngine.Input.IInputType[])'
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: InputAction(uint, ShapeGamepadDevice, params IInputType[])
  nameWithType: InputAction.InputAction(uint, ShapeGamepadDevice, params IInputType[])
  fullName: ShapeEngine.Input.InputAction.InputAction(uint, ShapeEngine.Input.ShapeGamepadDevice, params ShapeEngine.Input.IInputType[])
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 110
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public InputAction(uint accessTag, ShapeGamepadDevice gamepad, params IInputType[] inputTypes)
    parameters:
    - id: accessTag
      type: System.UInt32
    - id: gamepad
      type: ShapeEngine.Input.ShapeGamepadDevice
    - id: inputTypes
      type: ShapeEngine.Input.IInputType[]
    content.vb: Public Sub New(accessTag As UInteger, gamepad As ShapeGamepadDevice, ParamArray inputTypes As IInputType())
  overload: ShapeEngine.Input.InputAction.#ctor*
  nameWithType.vb: InputAction.New(UInteger, ShapeGamepadDevice, ParamArray IInputType())
  fullName.vb: ShapeEngine.Input.InputAction.New(UInteger, ShapeEngine.Input.ShapeGamepadDevice, ParamArray ShapeEngine.Input.IInputType())
  name.vb: New(UInteger, ShapeGamepadDevice, ParamArray IInputType())
- uid: ShapeEngine.Input.InputAction.GetGamepadIndex
  commentId: M:ShapeEngine.Input.InputAction.GetGamepadIndex
  id: GetGamepadIndex
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetGamepadIndex()
  nameWithType: InputAction.GetGamepadIndex()
  fullName: ShapeEngine.Input.InputAction.GetGamepadIndex()
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetGamepadIndex
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 121
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public int GetGamepadIndex()
    return:
      type: System.Int32
    content.vb: Public Function GetGamepadIndex() As Integer
  overload: ShapeEngine.Input.InputAction.GetGamepadIndex*
- uid: ShapeEngine.Input.InputAction.ClearState
  commentId: M:ShapeEngine.Input.InputAction.ClearState
  id: ClearState
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: ClearState()
  nameWithType: InputAction.ClearState()
  fullName: ShapeEngine.Input.InputAction.ClearState()
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: ClearState
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 122
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public void ClearState()
    content.vb: Public Sub ClearState()
  overload: ShapeEngine.Input.InputAction.ClearState*
- uid: ShapeEngine.Input.InputAction.Consume
  commentId: M:ShapeEngine.Input.InputAction.Consume
  id: Consume
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: Consume()
  nameWithType: InputAction.Consume()
  fullName: ShapeEngine.Input.InputAction.Consume()
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Consume
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 126
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public InputState Consume()
    return:
      type: ShapeEngine.Input.InputState
    content.vb: Public Function Consume() As InputState
  overload: ShapeEngine.Input.InputAction.Consume*
- uid: ShapeEngine.Input.InputAction.Update(System.Single)
  commentId: M:ShapeEngine.Input.InputAction.Update(System.Single)
  id: Update(System.Single)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: Update(float)
  nameWithType: InputAction.Update(float)
  fullName: ShapeEngine.Input.InputAction.Update(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Update
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 133
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public void Update(float dt)
    parameters:
    - id: dt
      type: System.Single
    content.vb: Public Sub Update(dt As Single)
  overload: ShapeEngine.Input.InputAction.Update*
  nameWithType.vb: InputAction.Update(Single)
  fullName.vb: ShapeEngine.Input.InputAction.Update(Single)
  name.vb: Update(Single)
- uid: ShapeEngine.Input.InputAction.Copy
  commentId: M:ShapeEngine.Input.InputAction.Copy
  id: Copy
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: Copy()
  nameWithType: InputAction.Copy()
  fullName: ShapeEngine.Input.InputAction.Copy()
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Copy
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 258
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  summary: Copies this instance and all inputs contained. A new ID is generated for the copy.
  example: []
  syntax:
    content: public InputAction Copy()
    return:
      type: ShapeEngine.Input.InputAction
      description: ''
    content.vb: Public Function Copy() As InputAction
  overload: ShapeEngine.Input.InputAction.Copy*
- uid: ShapeEngine.Input.InputAction.GetInputs
  commentId: M:ShapeEngine.Input.InputAction.GetInputs
  id: GetInputs
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetInputs()
  nameWithType: InputAction.GetInputs()
  fullName: ShapeEngine.Input.InputAction.GetInputs()
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetInputs
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 283
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public List<IInputType> GetInputs()
    return:
      type: System.Collections.Generic.List{ShapeEngine.Input.IInputType}
    content.vb: Public Function GetInputs() As List(Of IInputType)
  overload: ShapeEngine.Input.InputAction.GetInputs*
- uid: ShapeEngine.Input.InputAction.GetInputsCopied
  commentId: M:ShapeEngine.Input.InputAction.GetInputsCopied
  id: GetInputsCopied
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetInputsCopied()
  nameWithType: InputAction.GetInputsCopied()
  fullName: ShapeEngine.Input.InputAction.GetInputsCopied()
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetInputsCopied
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 289
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public List<IInputType> GetInputsCopied()
    return:
      type: System.Collections.Generic.List{ShapeEngine.Input.IInputType}
    content.vb: Public Function GetInputsCopied() As List(Of IInputType)
  overload: ShapeEngine.Input.InputAction.GetInputsCopied*
- uid: ShapeEngine.Input.InputAction.GetInputs(ShapeEngine.Input.InputDeviceType)
  commentId: M:ShapeEngine.Input.InputAction.GetInputs(ShapeEngine.Input.InputDeviceType)
  id: GetInputs(ShapeEngine.Input.InputDeviceType)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetInputs(InputDeviceType)
  nameWithType: InputAction.GetInputs(InputDeviceType)
  fullName: ShapeEngine.Input.InputAction.GetInputs(ShapeEngine.Input.InputDeviceType)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetInputs
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 298
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public List<IInputType> GetInputs(InputDeviceType filter)
    parameters:
    - id: filter
      type: ShapeEngine.Input.InputDeviceType
    return:
      type: System.Collections.Generic.List{ShapeEngine.Input.IInputType}
    content.vb: Public Function GetInputs(filter As InputDeviceType) As List(Of IInputType)
  overload: ShapeEngine.Input.InputAction.GetInputs*
- uid: ShapeEngine.Input.InputAction.GetInputsCopied(ShapeEngine.Input.InputDeviceType)
  commentId: M:ShapeEngine.Input.InputAction.GetInputsCopied(ShapeEngine.Input.InputDeviceType)
  id: GetInputsCopied(ShapeEngine.Input.InputDeviceType)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetInputsCopied(InputDeviceType)
  nameWithType: InputAction.GetInputsCopied(InputDeviceType)
  fullName: ShapeEngine.Input.InputAction.GetInputsCopied(ShapeEngine.Input.InputDeviceType)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetInputsCopied
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 309
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public List<IInputType> GetInputsCopied(InputDeviceType filter)
    parameters:
    - id: filter
      type: ShapeEngine.Input.InputDeviceType
    return:
      type: System.Collections.Generic.List{ShapeEngine.Input.IInputType}
    content.vb: Public Function GetInputsCopied(filter As InputDeviceType) As List(Of IInputType)
  overload: ShapeEngine.Input.InputAction.GetInputsCopied*
- uid: ShapeEngine.Input.InputAction.GetInputs(System.Int32)
  commentId: M:ShapeEngine.Input.InputAction.GetInputs(System.Int32)
  id: GetInputs(System.Int32)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetInputs(int)
  nameWithType: InputAction.GetInputs(int)
  fullName: ShapeEngine.Input.InputAction.GetInputs(int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetInputs
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 320
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public List<IInputType> GetInputs(int maxCount)
    parameters:
    - id: maxCount
      type: System.Int32
    return:
      type: System.Collections.Generic.List{ShapeEngine.Input.IInputType}
    content.vb: Public Function GetInputs(maxCount As Integer) As List(Of IInputType)
  overload: ShapeEngine.Input.InputAction.GetInputs*
  nameWithType.vb: InputAction.GetInputs(Integer)
  fullName.vb: ShapeEngine.Input.InputAction.GetInputs(Integer)
  name.vb: GetInputs(Integer)
- uid: ShapeEngine.Input.InputAction.GetInputs(ShapeEngine.Input.InputDeviceType,System.Int32)
  commentId: M:ShapeEngine.Input.InputAction.GetInputs(ShapeEngine.Input.InputDeviceType,System.Int32)
  id: GetInputs(ShapeEngine.Input.InputDeviceType,System.Int32)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetInputs(InputDeviceType, int)
  nameWithType: InputAction.GetInputs(InputDeviceType, int)
  fullName: ShapeEngine.Input.InputAction.GetInputs(ShapeEngine.Input.InputDeviceType, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetInputs
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 329
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public List<IInputType> GetInputs(InputDeviceType filter, int maxCount)
    parameters:
    - id: filter
      type: ShapeEngine.Input.InputDeviceType
    - id: maxCount
      type: System.Int32
    return:
      type: System.Collections.Generic.List{ShapeEngine.Input.IInputType}
    content.vb: Public Function GetInputs(filter As InputDeviceType, maxCount As Integer) As List(Of IInputType)
  overload: ShapeEngine.Input.InputAction.GetInputs*
  nameWithType.vb: InputAction.GetInputs(InputDeviceType, Integer)
  fullName.vb: ShapeEngine.Input.InputAction.GetInputs(ShapeEngine.Input.InputDeviceType, Integer)
  name.vb: GetInputs(InputDeviceType, Integer)
- uid: ShapeEngine.Input.InputAction.ClearInputs
  commentId: M:ShapeEngine.Input.InputAction.ClearInputs
  id: ClearInputs
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: ClearInputs()
  nameWithType: InputAction.ClearInputs()
  fullName: ShapeEngine.Input.InputAction.ClearInputs()
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: ClearInputs
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 342
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public void ClearInputs()
    content.vb: Public Sub ClearInputs()
  overload: ShapeEngine.Input.InputAction.ClearInputs*
- uid: ShapeEngine.Input.InputAction.RemoveInput(ShapeEngine.Input.IInputType)
  commentId: M:ShapeEngine.Input.InputAction.RemoveInput(ShapeEngine.Input.IInputType)
  id: RemoveInput(ShapeEngine.Input.IInputType)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: RemoveInput(IInputType)
  nameWithType: InputAction.RemoveInput(IInputType)
  fullName: ShapeEngine.Input.InputAction.RemoveInput(ShapeEngine.Input.IInputType)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: RemoveInput
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 343
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public bool RemoveInput(IInputType inputType)
    parameters:
    - id: inputType
      type: ShapeEngine.Input.IInputType
    return:
      type: System.Boolean
    content.vb: Public Function RemoveInput(inputType As IInputType) As Boolean
  overload: ShapeEngine.Input.InputAction.RemoveInput*
- uid: ShapeEngine.Input.InputAction.RemoveInputs(ShapeEngine.Input.InputDeviceType)
  commentId: M:ShapeEngine.Input.InputAction.RemoveInputs(ShapeEngine.Input.InputDeviceType)
  id: RemoveInputs(ShapeEngine.Input.InputDeviceType)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: RemoveInputs(InputDeviceType)
  nameWithType: InputAction.RemoveInputs(InputDeviceType)
  fullName: ShapeEngine.Input.InputAction.RemoveInputs(ShapeEngine.Input.InputDeviceType)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: RemoveInputs
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 344
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public List<IInputType> RemoveInputs(InputDeviceType filter)
    parameters:
    - id: filter
      type: ShapeEngine.Input.InputDeviceType
    return:
      type: System.Collections.Generic.List{ShapeEngine.Input.IInputType}
    content.vb: Public Function RemoveInputs(filter As InputDeviceType) As List(Of IInputType)
  overload: ShapeEngine.Input.InputAction.RemoveInputs*
- uid: ShapeEngine.Input.InputAction.AddInput(ShapeEngine.Input.IInputType)
  commentId: M:ShapeEngine.Input.InputAction.AddInput(ShapeEngine.Input.IInputType)
  id: AddInput(ShapeEngine.Input.IInputType)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: AddInput(IInputType)
  nameWithType: InputAction.AddInput(IInputType)
  fullName: ShapeEngine.Input.InputAction.AddInput(ShapeEngine.Input.IInputType)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: AddInput
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 359
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public void AddInput(IInputType newType)
    parameters:
    - id: newType
      type: ShapeEngine.Input.IInputType
    content.vb: Public Sub AddInput(newType As IInputType)
  overload: ShapeEngine.Input.InputAction.AddInput*
- uid: ShapeEngine.Input.InputAction.AddInputs(ShapeEngine.Input.IInputType[])
  commentId: M:ShapeEngine.Input.InputAction.AddInputs(ShapeEngine.Input.IInputType[])
  id: AddInputs(ShapeEngine.Input.IInputType[])
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: AddInputs(params IInputType[])
  nameWithType: InputAction.AddInputs(params IInputType[])
  fullName: ShapeEngine.Input.InputAction.AddInputs(params ShapeEngine.Input.IInputType[])
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: AddInputs
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 360
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public void AddInputs(params IInputType[] inputTypes)
    parameters:
    - id: inputTypes
      type: ShapeEngine.Input.IInputType[]
    content.vb: Public Sub AddInputs(ParamArray inputTypes As IInputType())
  overload: ShapeEngine.Input.InputAction.AddInputs*
  nameWithType.vb: InputAction.AddInputs(ParamArray IInputType())
  fullName.vb: ShapeEngine.Input.InputAction.AddInputs(ParamArray ShapeEngine.Input.IInputType())
  name.vb: AddInputs(ParamArray IInputType())
- uid: ShapeEngine.Input.InputAction.HasInput(ShapeEngine.Input.IInputType)
  commentId: M:ShapeEngine.Input.InputAction.HasInput(ShapeEngine.Input.IInputType)
  id: HasInput(ShapeEngine.Input.IInputType)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: HasInput(IInputType)
  nameWithType: InputAction.HasInput(IInputType)
  fullName: ShapeEngine.Input.InputAction.HasInput(ShapeEngine.Input.IInputType)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: HasInput
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 361
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public bool HasInput(IInputType inputType)
    parameters:
    - id: inputType
      type: ShapeEngine.Input.IInputType
    return:
      type: System.Boolean
    content.vb: Public Function HasInput(inputType As IInputType) As Boolean
  overload: ShapeEngine.Input.InputAction.HasInput*
- uid: ShapeEngine.Input.InputAction.HasInput(ShapeEngine.Input.InputDeviceType)
  commentId: M:ShapeEngine.Input.InputAction.HasInput(ShapeEngine.Input.InputDeviceType)
  id: HasInput(ShapeEngine.Input.InputDeviceType)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: HasInput(InputDeviceType)
  nameWithType: InputAction.HasInput(InputDeviceType)
  fullName: ShapeEngine.Input.InputAction.HasInput(ShapeEngine.Input.InputDeviceType)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: HasInput
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 362
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public bool HasInput(InputDeviceType inputDeviceType)
    parameters:
    - id: inputDeviceType
      type: ShapeEngine.Input.InputDeviceType
    return:
      type: System.Boolean
    content.vb: Public Function HasInput(inputDeviceType As InputDeviceType) As Boolean
  overload: ShapeEngine.Input.InputAction.HasInput*
- uid: ShapeEngine.Input.InputAction.GetInputTypeDescription(ShapeEngine.Input.InputDeviceType,System.Boolean,System.Int32,System.Boolean,System.Boolean)
  commentId: M:ShapeEngine.Input.InputAction.GetInputTypeDescription(ShapeEngine.Input.InputDeviceType,System.Boolean,System.Int32,System.Boolean,System.Boolean)
  id: GetInputTypeDescription(ShapeEngine.Input.InputDeviceType,System.Boolean,System.Int32,System.Boolean,System.Boolean)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetInputTypeDescription(InputDeviceType, bool, int, bool, bool)
  nameWithType: InputAction.GetInputTypeDescription(InputDeviceType, bool, int, bool, bool)
  fullName: ShapeEngine.Input.InputAction.GetInputTypeDescription(ShapeEngine.Input.InputDeviceType, bool, int, bool, bool)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetInputTypeDescription
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 383
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  summary: 'Generate a description for this action based on the parameters. Layout-&gt; "Title: [type a][type b][type c] ..."'
  example: []
  syntax:
    content: public string GetInputTypeDescription(InputDeviceType deviceType, bool shorthand, int count = 1, bool useTitle = false, bool brackets = true)
    parameters:
    - id: deviceType
      type: ShapeEngine.Input.InputDeviceType
      description: Only input types of the specified device are used.
    - id: shorthand
      type: System.Boolean
      description: Should the shorthand name or full name of the input type be used?
    - id: count
      type: System.Int32
      description: Limits the amount input types used. If count is smaller or equal to 0 all input types are used.
    - id: useTitle
      type: System.Boolean
      description: 'Should the title of this input action be used as a prefix? "Title: [input type]"'
    - id: brackets
      type: System.Boolean
      description: Should the input type be encapsulated in square brackets ["Input Type"]?"
    return:
      type: System.String
      description: The combined names of all input types.
    content.vb: Public Function GetInputTypeDescription(deviceType As InputDeviceType, shorthand As Boolean, count As Integer = 1, useTitle As Boolean = False, brackets As Boolean = True) As String
  overload: ShapeEngine.Input.InputAction.GetInputTypeDescription*
  nameWithType.vb: InputAction.GetInputTypeDescription(InputDeviceType, Boolean, Integer, Boolean, Boolean)
  fullName.vb: ShapeEngine.Input.InputAction.GetInputTypeDescription(ShapeEngine.Input.InputDeviceType, Boolean, Integer, Boolean, Boolean)
  name.vb: GetInputTypeDescription(InputDeviceType, Boolean, Integer, Boolean, Boolean)
- uid: ShapeEngine.Input.InputAction.GetInputTypeDescription(System.Boolean,System.Int32,System.Boolean)
  commentId: M:ShapeEngine.Input.InputAction.GetInputTypeDescription(System.Boolean,System.Int32,System.Boolean)
  id: GetInputTypeDescription(System.Boolean,System.Int32,System.Boolean)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetInputTypeDescription(bool, int, bool)
  nameWithType: InputAction.GetInputTypeDescription(bool, int, bool)
  fullName: ShapeEngine.Input.InputAction.GetInputTypeDescription(bool, int, bool)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetInputTypeDescription
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 406
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  summary: 'Generate a description for this action based on the parameters. Layout-&gt; "Title: [type a][type b][type c] ..."'
  example: []
  syntax:
    content: public string GetInputTypeDescription(bool shorthand, int count = 1, bool useTitle = false)
    parameters:
    - id: shorthand
      type: System.Boolean
      description: Should the shorthand name or full name of the input type be used?
    - id: count
      type: System.Int32
      description: Limits the amount input types used. If count is smaller or equal to 0 all input types are used.
    - id: useTitle
      type: System.Boolean
      description: 'Should the title of this input action be used as a prefix? "Title: [input type]"'
    return:
      type: System.String
      description: The combined names of all input types.
    content.vb: Public Function GetInputTypeDescription(shorthand As Boolean, count As Integer = 1, useTitle As Boolean = False) As String
  overload: ShapeEngine.Input.InputAction.GetInputTypeDescription*
  nameWithType.vb: InputAction.GetInputTypeDescription(Boolean, Integer, Boolean)
  fullName.vb: ShapeEngine.Input.InputAction.GetInputTypeDescription(Boolean, Integer, Boolean)
  name.vb: GetInputTypeDescription(Boolean, Integer, Boolean)
- uid: ShapeEngine.Input.InputAction.GetInputTypeDescriptionPerDevice(System.Boolean,System.Int32,System.Boolean)
  commentId: M:ShapeEngine.Input.InputAction.GetInputTypeDescriptionPerDevice(System.Boolean,System.Int32,System.Boolean)
  id: GetInputTypeDescriptionPerDevice(System.Boolean,System.Int32,System.Boolean)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetInputTypeDescriptionPerDevice(bool, int, bool)
  nameWithType: InputAction.GetInputTypeDescriptionPerDevice(bool, int, bool)
  fullName: ShapeEngine.Input.InputAction.GetInputTypeDescriptionPerDevice(bool, int, bool)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetInputTypeDescriptionPerDevice
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 430
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  summary: 'Generate a description for this action based on the parameters. Layout-&gt; "Title: [type a][type b][type c] ..."'
  example: []
  syntax:
    content: public string GetInputTypeDescriptionPerDevice(bool shorthand, int count = 1, bool useTitle = false)
    parameters:
    - id: shorthand
      type: System.Boolean
      description: Should the shorthand name or full name of the input type be used?
    - id: count
      type: System.Int32
      description: >-
        Limits the amount input types used per input device.
            A count of 1 means 1 input type per available input device is used.
            If count is smaller or equal to 0 all input types are used.
    - id: useTitle
      type: System.Boolean
      description: 'Should the title of this input action be used as a prefix? "Title: [input type]"'
    return:
      type: System.String
      description: The combined names of all input types.
    content.vb: Public Function GetInputTypeDescriptionPerDevice(shorthand As Boolean, count As Integer = 1, useTitle As Boolean = False) As String
  overload: ShapeEngine.Input.InputAction.GetInputTypeDescriptionPerDevice*
  nameWithType.vb: InputAction.GetInputTypeDescriptionPerDevice(Boolean, Integer, Boolean)
  fullName.vb: ShapeEngine.Input.InputAction.GetInputTypeDescriptionPerDevice(Boolean, Integer, Boolean)
  name.vb: GetInputTypeDescriptionPerDevice(Boolean, Integer, Boolean)
- uid: ShapeEngine.Input.InputAction.GetInputTypeNames(ShapeEngine.Input.InputDeviceType,System.Boolean,System.Int32)
  commentId: M:ShapeEngine.Input.InputAction.GetInputTypeNames(ShapeEngine.Input.InputDeviceType,System.Boolean,System.Int32)
  id: GetInputTypeNames(ShapeEngine.Input.InputDeviceType,System.Boolean,System.Int32)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetInputTypeNames(InputDeviceType, bool, int)
  nameWithType: InputAction.GetInputTypeNames(InputDeviceType, bool, int)
  fullName: ShapeEngine.Input.InputAction.GetInputTypeNames(ShapeEngine.Input.InputDeviceType, bool, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetInputTypeNames
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 456
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  summary: Get the names of all input types used in this input action.
  example: []
  syntax:
    content: public List<string> GetInputTypeNames(InputDeviceType deviceType, bool shorthand = true, int count = -1)
    parameters:
    - id: deviceType
      type: ShapeEngine.Input.InputDeviceType
      description: Only input types of the specified device are used.
    - id: shorthand
      type: System.Boolean
      description: Should the shorthand name or full name of the input type be used?
    - id: count
      type: System.Int32
      description: Limits the amount input types used. If count is smaller or equal to 0 all input types are used.
    return:
      type: System.Collections.Generic.List{System.String}
      description: A list of all the input type names found in the action based on the parameters
    content.vb: Public Function GetInputTypeNames(deviceType As InputDeviceType, shorthand As Boolean = True, count As Integer = -1) As List(Of String)
  overload: ShapeEngine.Input.InputAction.GetInputTypeNames*
  nameWithType.vb: InputAction.GetInputTypeNames(InputDeviceType, Boolean, Integer)
  fullName.vb: ShapeEngine.Input.InputAction.GetInputTypeNames(ShapeEngine.Input.InputDeviceType, Boolean, Integer)
  name.vb: GetInputTypeNames(InputDeviceType, Boolean, Integer)
- uid: ShapeEngine.Input.InputAction.GetInputTypeNamesLimited(System.Boolean,System.Int32)
  commentId: M:ShapeEngine.Input.InputAction.GetInputTypeNamesLimited(System.Boolean,System.Int32)
  id: GetInputTypeNamesLimited(System.Boolean,System.Int32)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetInputTypeNamesLimited(bool, int)
  nameWithType: InputAction.GetInputTypeNamesLimited(bool, int)
  fullName: ShapeEngine.Input.InputAction.GetInputTypeNamesLimited(bool, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetInputTypeNamesLimited
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 473
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  summary: Get the names of all input types used in this input action.
  example: []
  syntax:
    content: public List<string> GetInputTypeNamesLimited(bool shorthand = true, int count = -1)
    parameters:
    - id: shorthand
      type: System.Boolean
      description: Should the shorthand name or full name of the input type be used?
    - id: count
      type: System.Int32
      description: Limits the amount input types used. If count is smaller or equal to 0 all input types are used.
    return:
      type: System.Collections.Generic.List{System.String}
      description: A list of all the input type names found in the action based on the parameters
    content.vb: Public Function GetInputTypeNamesLimited(shorthand As Boolean = True, count As Integer = -1) As List(Of String)
  overload: ShapeEngine.Input.InputAction.GetInputTypeNamesLimited*
  nameWithType.vb: InputAction.GetInputTypeNamesLimited(Boolean, Integer)
  fullName.vb: ShapeEngine.Input.InputAction.GetInputTypeNamesLimited(Boolean, Integer)
  name.vb: GetInputTypeNamesLimited(Boolean, Integer)
- uid: ShapeEngine.Input.InputAction.GetInputTypeNamesLimitedPerDevice(System.Boolean,System.Int32)
  commentId: M:ShapeEngine.Input.InputAction.GetInputTypeNamesLimitedPerDevice(System.Boolean,System.Int32)
  id: GetInputTypeNamesLimitedPerDevice(System.Boolean,System.Int32)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetInputTypeNamesLimitedPerDevice(bool, int)
  nameWithType: InputAction.GetInputTypeNamesLimitedPerDevice(bool, int)
  fullName: ShapeEngine.Input.InputAction.GetInputTypeNamesLimitedPerDevice(bool, int)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetInputTypeNamesLimitedPerDevice
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 489
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  summary: Get the names of all input types used in this input action.
  example: []
  syntax:
    content: public List<string> GetInputTypeNamesLimitedPerDevice(bool shorthand = true, int count = -1)
    parameters:
    - id: shorthand
      type: System.Boolean
      description: Should the shorthand name or full name of the input type be used?
    - id: count
      type: System.Int32
      description: Limits the amount input types used per input device. If count is smaller or equal to 0 all input types are used.
    return:
      type: System.Collections.Generic.List{System.String}
      description: A list of all the input type names found in the action based on the parameters
    content.vb: Public Function GetInputTypeNamesLimitedPerDevice(shorthand As Boolean = True, count As Integer = -1) As List(Of String)
  overload: ShapeEngine.Input.InputAction.GetInputTypeNamesLimitedPerDevice*
  nameWithType.vb: InputAction.GetInputTypeNamesLimitedPerDevice(Boolean, Integer)
  fullName.vb: ShapeEngine.Input.InputAction.GetInputTypeNamesLimitedPerDevice(Boolean, Integer)
  name.vb: GetInputTypeNamesLimitedPerDevice(Boolean, Integer)
- uid: ShapeEngine.Input.InputAction.GetInputTypeNames(System.Boolean)
  commentId: M:ShapeEngine.Input.InputAction.GetInputTypeNames(System.Boolean)
  id: GetInputTypeNames(System.Boolean)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetInputTypeNames(bool)
  nameWithType: InputAction.GetInputTypeNames(bool)
  fullName: ShapeEngine.Input.InputAction.GetInputTypeNames(bool)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetInputTypeNames
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 507
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  summary: Get a list of a input device and name for each input type used in this action.
  example: []
  syntax:
    content: public List<InputName> GetInputTypeNames(bool shorthand = true)
    parameters:
    - id: shorthand
      type: System.Boolean
      description: Should the shorthand name or full name of the input type be used?
    return:
      type: System.Collections.Generic.List{ShapeEngine.Input.InputName}
      description: A list of all the input types device and name found
    content.vb: Public Function GetInputTypeNames(shorthand As Boolean = True) As List(Of InputName)
  overload: ShapeEngine.Input.InputAction.GetInputTypeNames*
  nameWithType.vb: InputAction.GetInputTypeNames(Boolean)
  fullName.vb: ShapeEngine.Input.InputAction.GetInputTypeNames(Boolean)
  name.vb: GetInputTypeNames(Boolean)
- uid: ShapeEngine.Input.InputAction.AllAccessTag
  commentId: F:ShapeEngine.Input.InputAction.AllAccessTag
  id: AllAccessTag
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: AllAccessTag
  nameWithType: InputAction.AllAccessTag
  fullName: ShapeEngine.Input.InputAction.AllAccessTag
  type: Field
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: AllAccessTag
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 528
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static readonly uint AllAccessTag
    return:
      type: System.UInt32
    content.vb: Public Shared ReadOnly AllAccessTag As UInteger
- uid: ShapeEngine.Input.InputAction.DefaultAccessTag
  commentId: F:ShapeEngine.Input.InputAction.DefaultAccessTag
  id: DefaultAccessTag
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: DefaultAccessTag
  nameWithType: InputAction.DefaultAccessTag
  fullName: ShapeEngine.Input.InputAction.DefaultAccessTag
  type: Field
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: DefaultAccessTag
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 529
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static readonly uint DefaultAccessTag
    return:
      type: System.UInt32
    content.vb: Public Shared ReadOnly DefaultAccessTag As UInteger
- uid: ShapeEngine.Input.InputAction.Locked
  commentId: P:ShapeEngine.Input.InputAction.Locked
  id: Locked
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: Locked
  nameWithType: InputAction.Locked
  fullName: ShapeEngine.Input.InputAction.Locked
  type: Property
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Locked
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 530
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static bool Locked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared Property Locked As Boolean
  overload: ShapeEngine.Input.InputAction.Locked*
- uid: ShapeEngine.Input.InputAction.NextTag
  commentId: P:ShapeEngine.Input.InputAction.NextTag
  id: NextTag
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: NextTag
  nameWithType: InputAction.NextTag
  fullName: ShapeEngine.Input.InputAction.NextTag
  type: Property
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: NextTag
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 534
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static uint NextTag { get; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Shared ReadOnly Property NextTag As UInteger
  overload: ShapeEngine.Input.InputAction.NextTag*
- uid: ShapeEngine.Input.InputAction.Lock
  commentId: M:ShapeEngine.Input.InputAction.Lock
  id: Lock
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: Lock()
  nameWithType: InputAction.Lock()
  fullName: ShapeEngine.Input.InputAction.Lock()
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Lock
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 539
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static void Lock()
    content.vb: Public Shared Sub Lock()
  overload: ShapeEngine.Input.InputAction.Lock*
- uid: ShapeEngine.Input.InputAction.Lock(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  commentId: M:ShapeEngine.Input.InputAction.Lock(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  id: Lock(ShapeEngine.Core.Structs.BitFlag,ShapeEngine.Core.Structs.BitFlag)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: Lock(BitFlag, BitFlag)
  nameWithType: InputAction.Lock(BitFlag, BitFlag)
  fullName: ShapeEngine.Input.InputAction.Lock(ShapeEngine.Core.Structs.BitFlag, ShapeEngine.Core.Structs.BitFlag)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Lock
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 546
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static void Lock(BitFlag whitelist, BitFlag blacklist)
    parameters:
    - id: whitelist
      type: ShapeEngine.Core.Structs.BitFlag
    - id: blacklist
      type: ShapeEngine.Core.Structs.BitFlag
    content.vb: Public Shared Sub Lock(whitelist As BitFlag, blacklist As BitFlag)
  overload: ShapeEngine.Input.InputAction.Lock*
- uid: ShapeEngine.Input.InputAction.LockWhitelist(ShapeEngine.Core.Structs.BitFlag)
  commentId: M:ShapeEngine.Input.InputAction.LockWhitelist(ShapeEngine.Core.Structs.BitFlag)
  id: LockWhitelist(ShapeEngine.Core.Structs.BitFlag)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: LockWhitelist(BitFlag)
  nameWithType: InputAction.LockWhitelist(BitFlag)
  fullName: ShapeEngine.Input.InputAction.LockWhitelist(ShapeEngine.Core.Structs.BitFlag)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: LockWhitelist
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 556
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static void LockWhitelist(BitFlag whitelist)
    parameters:
    - id: whitelist
      type: ShapeEngine.Core.Structs.BitFlag
    content.vb: Public Shared Sub LockWhitelist(whitelist As BitFlag)
  overload: ShapeEngine.Input.InputAction.LockWhitelist*
- uid: ShapeEngine.Input.InputAction.LockBlacklist(ShapeEngine.Core.Structs.BitFlag)
  commentId: M:ShapeEngine.Input.InputAction.LockBlacklist(ShapeEngine.Core.Structs.BitFlag)
  id: LockBlacklist(ShapeEngine.Core.Structs.BitFlag)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: LockBlacklist(BitFlag)
  nameWithType: InputAction.LockBlacklist(BitFlag)
  fullName: ShapeEngine.Input.InputAction.LockBlacklist(ShapeEngine.Core.Structs.BitFlag)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: LockBlacklist
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 566
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static void LockBlacklist(BitFlag blacklist)
    parameters:
    - id: blacklist
      type: ShapeEngine.Core.Structs.BitFlag
    content.vb: Public Shared Sub LockBlacklist(blacklist As BitFlag)
  overload: ShapeEngine.Input.InputAction.LockBlacklist*
- uid: ShapeEngine.Input.InputAction.Unlock
  commentId: M:ShapeEngine.Input.InputAction.Unlock
  id: Unlock
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: Unlock()
  nameWithType: InputAction.Unlock()
  fullName: ShapeEngine.Input.InputAction.Unlock()
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Unlock
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 572
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static void Unlock()
    content.vb: Public Shared Sub Unlock()
  overload: ShapeEngine.Input.InputAction.Unlock*
- uid: ShapeEngine.Input.InputAction.HasAccess(System.UInt32)
  commentId: M:ShapeEngine.Input.InputAction.HasAccess(System.UInt32)
  id: HasAccess(System.UInt32)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: HasAccess(uint)
  nameWithType: InputAction.HasAccess(uint)
  fullName: ShapeEngine.Input.InputAction.HasAccess(uint)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: HasAccess
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 578
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static bool HasAccess(uint tag)
    parameters:
    - id: tag
      type: System.UInt32
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasAccess(tag As UInteger) As Boolean
  overload: ShapeEngine.Input.InputAction.HasAccess*
  nameWithType.vb: InputAction.HasAccess(UInteger)
  fullName.vb: ShapeEngine.Input.InputAction.HasAccess(UInteger)
  name.vb: HasAccess(UInteger)
- uid: ShapeEngine.Input.InputAction.IsInputAvailable(System.UInt32)
  commentId: M:ShapeEngine.Input.InputAction.IsInputAvailable(System.UInt32)
  id: IsInputAvailable(System.UInt32)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: IsInputAvailable(uint)
  nameWithType: InputAction.IsInputAvailable(uint)
  fullName: ShapeEngine.Input.InputAction.IsInputAvailable(uint)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsInputAvailable
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 586
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static bool IsInputAvailable(uint tag)
    parameters:
    - id: tag
      type: System.UInt32
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsInputAvailable(tag As UInteger) As Boolean
  overload: ShapeEngine.Input.InputAction.IsInputAvailable*
  nameWithType.vb: InputAction.IsInputAvailable(UInteger)
  fullName.vb: ShapeEngine.Input.InputAction.IsInputAvailable(UInteger)
  name.vb: IsInputAvailable(UInteger)
- uid: ShapeEngine.Input.InputAction.HasAccess(ShapeEngine.Input.InputAction)
  commentId: M:ShapeEngine.Input.InputAction.HasAccess(ShapeEngine.Input.InputAction)
  id: HasAccess(ShapeEngine.Input.InputAction)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: HasAccess(InputAction)
  nameWithType: InputAction.HasAccess(InputAction)
  fullName: ShapeEngine.Input.InputAction.HasAccess(ShapeEngine.Input.InputAction)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: HasAccess
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 592
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static bool HasAccess(InputAction action)
    parameters:
    - id: action
      type: ShapeEngine.Input.InputAction
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasAccess(action As InputAction) As Boolean
  overload: ShapeEngine.Input.InputAction.HasAccess*
- uid: ShapeEngine.Input.InputAction.UpdateActions(System.Single,ShapeEngine.Input.ShapeGamepadDevice,ShapeEngine.Input.InputAction[])
  commentId: M:ShapeEngine.Input.InputAction.UpdateActions(System.Single,ShapeEngine.Input.ShapeGamepadDevice,ShapeEngine.Input.InputAction[])
  id: UpdateActions(System.Single,ShapeEngine.Input.ShapeGamepadDevice,ShapeEngine.Input.InputAction[])
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: UpdateActions(float, ShapeGamepadDevice?, params InputAction[])
  nameWithType: InputAction.UpdateActions(float, ShapeGamepadDevice?, params InputAction[])
  fullName: ShapeEngine.Input.InputAction.UpdateActions(float, ShapeEngine.Input.ShapeGamepadDevice?, params ShapeEngine.Input.InputAction[])
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: UpdateActions
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 596
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static void UpdateActions(float dt, ShapeGamepadDevice? gamepad, params InputAction[] actions)
    parameters:
    - id: dt
      type: System.Single
    - id: gamepad
      type: ShapeEngine.Input.ShapeGamepadDevice
    - id: actions
      type: ShapeEngine.Input.InputAction[]
    content.vb: Public Shared Sub UpdateActions(dt As Single, gamepad As ShapeGamepadDevice, ParamArray actions As InputAction())
  overload: ShapeEngine.Input.InputAction.UpdateActions*
  nameWithType.vb: InputAction.UpdateActions(Single, ShapeGamepadDevice, ParamArray InputAction())
  fullName.vb: ShapeEngine.Input.InputAction.UpdateActions(Single, ShapeEngine.Input.ShapeGamepadDevice, ParamArray ShapeEngine.Input.InputAction())
  name.vb: UpdateActions(Single, ShapeGamepadDevice, ParamArray InputAction())
- uid: ShapeEngine.Input.InputAction.UpdateActions(System.Single,ShapeEngine.Input.ShapeGamepadDevice,System.Collections.Generic.List{ShapeEngine.Input.InputAction})
  commentId: M:ShapeEngine.Input.InputAction.UpdateActions(System.Single,ShapeEngine.Input.ShapeGamepadDevice,System.Collections.Generic.List{ShapeEngine.Input.InputAction})
  id: UpdateActions(System.Single,ShapeEngine.Input.ShapeGamepadDevice,System.Collections.Generic.List{ShapeEngine.Input.InputAction})
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: UpdateActions(float, ShapeGamepadDevice?, List<InputAction>)
  nameWithType: InputAction.UpdateActions(float, ShapeGamepadDevice?, List<InputAction>)
  fullName: ShapeEngine.Input.InputAction.UpdateActions(float, ShapeEngine.Input.ShapeGamepadDevice?, System.Collections.Generic.List<ShapeEngine.Input.InputAction>)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: UpdateActions
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 604
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static void UpdateActions(float dt, ShapeGamepadDevice? gamepad, List<InputAction> actions)
    parameters:
    - id: dt
      type: System.Single
    - id: gamepad
      type: ShapeEngine.Input.ShapeGamepadDevice
    - id: actions
      type: System.Collections.Generic.List{ShapeEngine.Input.InputAction}
    content.vb: Public Shared Sub UpdateActions(dt As Single, gamepad As ShapeGamepadDevice, actions As List(Of InputAction))
  overload: ShapeEngine.Input.InputAction.UpdateActions*
  nameWithType.vb: InputAction.UpdateActions(Single, ShapeGamepadDevice, List(Of InputAction))
  fullName.vb: ShapeEngine.Input.InputAction.UpdateActions(Single, ShapeEngine.Input.ShapeGamepadDevice, System.Collections.Generic.List(Of ShapeEngine.Input.InputAction))
  name.vb: UpdateActions(Single, ShapeGamepadDevice, List(Of InputAction))
- uid: ShapeEngine.Input.InputAction.GetActionDescriptions(ShapeEngine.Input.InputDeviceType,System.Boolean,System.Int32,System.Collections.Generic.List{ShapeEngine.Input.InputAction})
  commentId: M:ShapeEngine.Input.InputAction.GetActionDescriptions(ShapeEngine.Input.InputDeviceType,System.Boolean,System.Int32,System.Collections.Generic.List{ShapeEngine.Input.InputAction})
  id: GetActionDescriptions(ShapeEngine.Input.InputDeviceType,System.Boolean,System.Int32,System.Collections.Generic.List{ShapeEngine.Input.InputAction})
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetActionDescriptions(InputDeviceType, bool, int, List<InputAction>)
  nameWithType: InputAction.GetActionDescriptions(InputDeviceType, bool, int, List<InputAction>)
  fullName: ShapeEngine.Input.InputAction.GetActionDescriptions(ShapeEngine.Input.InputDeviceType, bool, int, System.Collections.Generic.List<ShapeEngine.Input.InputAction>)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetActionDescriptions
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 612
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static List<string> GetActionDescriptions(InputDeviceType inputDeviceType, bool shorthand, int typesPerActionCount, List<InputAction> actions)
    parameters:
    - id: inputDeviceType
      type: ShapeEngine.Input.InputDeviceType
    - id: shorthand
      type: System.Boolean
    - id: typesPerActionCount
      type: System.Int32
    - id: actions
      type: System.Collections.Generic.List{ShapeEngine.Input.InputAction}
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Shared Function GetActionDescriptions(inputDeviceType As InputDeviceType, shorthand As Boolean, typesPerActionCount As Integer, actions As List(Of InputAction)) As List(Of String)
  overload: ShapeEngine.Input.InputAction.GetActionDescriptions*
  nameWithType.vb: InputAction.GetActionDescriptions(InputDeviceType, Boolean, Integer, List(Of InputAction))
  fullName.vb: ShapeEngine.Input.InputAction.GetActionDescriptions(ShapeEngine.Input.InputDeviceType, Boolean, Integer, System.Collections.Generic.List(Of ShapeEngine.Input.InputAction))
  name.vb: GetActionDescriptions(InputDeviceType, Boolean, Integer, List(Of InputAction))
- uid: ShapeEngine.Input.InputAction.GetActionDescriptions(ShapeEngine.Input.InputDeviceType,System.Boolean,System.Int32,ShapeEngine.Input.InputAction[])
  commentId: M:ShapeEngine.Input.InputAction.GetActionDescriptions(ShapeEngine.Input.InputDeviceType,System.Boolean,System.Int32,ShapeEngine.Input.InputAction[])
  id: GetActionDescriptions(ShapeEngine.Input.InputDeviceType,System.Boolean,System.Int32,ShapeEngine.Input.InputAction[])
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetActionDescriptions(InputDeviceType, bool, int, params InputAction[])
  nameWithType: InputAction.GetActionDescriptions(InputDeviceType, bool, int, params InputAction[])
  fullName: ShapeEngine.Input.InputAction.GetActionDescriptions(ShapeEngine.Input.InputDeviceType, bool, int, params ShapeEngine.Input.InputAction[])
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetActionDescriptions
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 624
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static List<string> GetActionDescriptions(InputDeviceType inputDeviceType, bool shorthand, int typesPerActionCount, params InputAction[] actions)
    parameters:
    - id: inputDeviceType
      type: ShapeEngine.Input.InputDeviceType
    - id: shorthand
      type: System.Boolean
    - id: typesPerActionCount
      type: System.Int32
    - id: actions
      type: ShapeEngine.Input.InputAction[]
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Shared Function GetActionDescriptions(inputDeviceType As InputDeviceType, shorthand As Boolean, typesPerActionCount As Integer, ParamArray actions As InputAction()) As List(Of String)
  overload: ShapeEngine.Input.InputAction.GetActionDescriptions*
  nameWithType.vb: InputAction.GetActionDescriptions(InputDeviceType, Boolean, Integer, ParamArray InputAction())
  fullName.vb: ShapeEngine.Input.InputAction.GetActionDescriptions(ShapeEngine.Input.InputDeviceType, Boolean, Integer, ParamArray ShapeEngine.Input.InputAction())
  name.vb: GetActionDescriptions(InputDeviceType, Boolean, Integer, ParamArray InputAction())
- uid: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeKeyboardButton,System.UInt32)
  commentId: M:ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeKeyboardButton,System.UInt32)
  id: GetState(ShapeEngine.Input.ShapeKeyboardButton,System.UInt32)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetState(ShapeKeyboardButton, uint)
  nameWithType: InputAction.GetState(ShapeKeyboardButton, uint)
  fullName: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeKeyboardButton, uint)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetState
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 640
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static InputState GetState(ShapeKeyboardButton button, uint accessTag)
    parameters:
    - id: button
      type: ShapeEngine.Input.ShapeKeyboardButton
    - id: accessTag
      type: System.UInt32
    return:
      type: ShapeEngine.Input.InputState
    content.vb: Public Shared Function GetState(button As ShapeKeyboardButton, accessTag As UInteger) As InputState
  overload: ShapeEngine.Input.InputAction.GetState*
  nameWithType.vb: InputAction.GetState(ShapeKeyboardButton, UInteger)
  fullName.vb: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeKeyboardButton, UInteger)
  name.vb: GetState(ShapeKeyboardButton, UInteger)
- uid: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeMouseButton,System.UInt32)
  commentId: M:ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeMouseButton,System.UInt32)
  id: GetState(ShapeEngine.Input.ShapeMouseButton,System.UInt32)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetState(ShapeMouseButton, uint)
  nameWithType: InputAction.GetState(ShapeMouseButton, uint)
  fullName: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeMouseButton, uint)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetState
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 645
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static InputState GetState(ShapeMouseButton button, uint accessTag)
    parameters:
    - id: button
      type: ShapeEngine.Input.ShapeMouseButton
    - id: accessTag
      type: System.UInt32
    return:
      type: ShapeEngine.Input.InputState
    content.vb: Public Shared Function GetState(button As ShapeMouseButton, accessTag As UInteger) As InputState
  overload: ShapeEngine.Input.InputAction.GetState*
  nameWithType.vb: InputAction.GetState(ShapeMouseButton, UInteger)
  fullName.vb: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeMouseButton, UInteger)
  name.vb: GetState(ShapeMouseButton, UInteger)
- uid: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeGamepadButton,System.UInt32,System.Int32,System.Single)
  commentId: M:ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeGamepadButton,System.UInt32,System.Int32,System.Single)
  id: GetState(ShapeEngine.Input.ShapeGamepadButton,System.UInt32,System.Int32,System.Single)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetState(ShapeGamepadButton, uint, int, float)
  nameWithType: InputAction.GetState(ShapeGamepadButton, uint, int, float)
  fullName: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeGamepadButton, uint, int, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetState
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 650
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static InputState GetState(ShapeGamepadButton button, uint accessTag, int gamepadIndex, float deadzone = 0.2)
    parameters:
    - id: button
      type: ShapeEngine.Input.ShapeGamepadButton
    - id: accessTag
      type: System.UInt32
    - id: gamepadIndex
      type: System.Int32
    - id: deadzone
      type: System.Single
    return:
      type: ShapeEngine.Input.InputState
    content.vb: Public Shared Function GetState(button As ShapeGamepadButton, accessTag As UInteger, gamepadIndex As Integer, deadzone As Single = 0.2) As InputState
  overload: ShapeEngine.Input.InputAction.GetState*
  nameWithType.vb: InputAction.GetState(ShapeGamepadButton, UInteger, Integer, Single)
  fullName.vb: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeGamepadButton, UInteger, Integer, Single)
  name.vb: GetState(ShapeGamepadButton, UInteger, Integer, Single)
- uid: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeKeyboardButton,ShapeEngine.Input.ShapeKeyboardButton,System.UInt32)
  commentId: M:ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeKeyboardButton,ShapeEngine.Input.ShapeKeyboardButton,System.UInt32)
  id: GetState(ShapeEngine.Input.ShapeKeyboardButton,ShapeEngine.Input.ShapeKeyboardButton,System.UInt32)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetState(ShapeKeyboardButton, ShapeKeyboardButton, uint)
  nameWithType: InputAction.GetState(ShapeKeyboardButton, ShapeKeyboardButton, uint)
  fullName: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeKeyboardButton, ShapeEngine.Input.ShapeKeyboardButton, uint)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetState
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 656
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static InputState GetState(ShapeKeyboardButton neg, ShapeKeyboardButton pos, uint accessTag)
    parameters:
    - id: neg
      type: ShapeEngine.Input.ShapeKeyboardButton
    - id: pos
      type: ShapeEngine.Input.ShapeKeyboardButton
    - id: accessTag
      type: System.UInt32
    return:
      type: ShapeEngine.Input.InputState
    content.vb: Public Shared Function GetState(neg As ShapeKeyboardButton, pos As ShapeKeyboardButton, accessTag As UInteger) As InputState
  overload: ShapeEngine.Input.InputAction.GetState*
  nameWithType.vb: InputAction.GetState(ShapeKeyboardButton, ShapeKeyboardButton, UInteger)
  fullName.vb: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeKeyboardButton, ShapeEngine.Input.ShapeKeyboardButton, UInteger)
  name.vb: GetState(ShapeKeyboardButton, ShapeKeyboardButton, UInteger)
- uid: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeMouseButton,ShapeEngine.Input.ShapeMouseButton,System.UInt32)
  commentId: M:ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeMouseButton,ShapeEngine.Input.ShapeMouseButton,System.UInt32)
  id: GetState(ShapeEngine.Input.ShapeMouseButton,ShapeEngine.Input.ShapeMouseButton,System.UInt32)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetState(ShapeMouseButton, ShapeMouseButton, uint)
  nameWithType: InputAction.GetState(ShapeMouseButton, ShapeMouseButton, uint)
  fullName: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeMouseButton, ShapeEngine.Input.ShapeMouseButton, uint)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetState
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 661
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static InputState GetState(ShapeMouseButton neg, ShapeMouseButton pos, uint accessTag)
    parameters:
    - id: neg
      type: ShapeEngine.Input.ShapeMouseButton
    - id: pos
      type: ShapeEngine.Input.ShapeMouseButton
    - id: accessTag
      type: System.UInt32
    return:
      type: ShapeEngine.Input.InputState
    content.vb: Public Shared Function GetState(neg As ShapeMouseButton, pos As ShapeMouseButton, accessTag As UInteger) As InputState
  overload: ShapeEngine.Input.InputAction.GetState*
  nameWithType.vb: InputAction.GetState(ShapeMouseButton, ShapeMouseButton, UInteger)
  fullName.vb: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeMouseButton, ShapeEngine.Input.ShapeMouseButton, UInteger)
  name.vb: GetState(ShapeMouseButton, ShapeMouseButton, UInteger)
- uid: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeGamepadButton,ShapeEngine.Input.ShapeGamepadButton,System.UInt32,System.Int32,System.Single)
  commentId: M:ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeGamepadButton,ShapeEngine.Input.ShapeGamepadButton,System.UInt32,System.Int32,System.Single)
  id: GetState(ShapeEngine.Input.ShapeGamepadButton,ShapeEngine.Input.ShapeGamepadButton,System.UInt32,System.Int32,System.Single)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetState(ShapeGamepadButton, ShapeGamepadButton, uint, int, float)
  nameWithType: InputAction.GetState(ShapeGamepadButton, ShapeGamepadButton, uint, int, float)
  fullName: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeGamepadButton, ShapeEngine.Input.ShapeGamepadButton, uint, int, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetState
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 666
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static InputState GetState(ShapeGamepadButton neg, ShapeGamepadButton pos, uint accessTag, int gamepadIndex, float deadzone = 0.2)
    parameters:
    - id: neg
      type: ShapeEngine.Input.ShapeGamepadButton
    - id: pos
      type: ShapeEngine.Input.ShapeGamepadButton
    - id: accessTag
      type: System.UInt32
    - id: gamepadIndex
      type: System.Int32
    - id: deadzone
      type: System.Single
    return:
      type: ShapeEngine.Input.InputState
    content.vb: Public Shared Function GetState(neg As ShapeGamepadButton, pos As ShapeGamepadButton, accessTag As UInteger, gamepadIndex As Integer, deadzone As Single = 0.2) As InputState
  overload: ShapeEngine.Input.InputAction.GetState*
  nameWithType.vb: InputAction.GetState(ShapeGamepadButton, ShapeGamepadButton, UInteger, Integer, Single)
  fullName.vb: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeGamepadButton, ShapeEngine.Input.ShapeGamepadButton, UInteger, Integer, Single)
  name.vb: GetState(ShapeGamepadButton, ShapeGamepadButton, UInteger, Integer, Single)
- uid: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeMouseWheelAxis,System.UInt32,System.Single)
  commentId: M:ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeMouseWheelAxis,System.UInt32,System.Single)
  id: GetState(ShapeEngine.Input.ShapeMouseWheelAxis,System.UInt32,System.Single)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetState(ShapeMouseWheelAxis, uint, float)
  nameWithType: InputAction.GetState(ShapeMouseWheelAxis, uint, float)
  fullName: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeMouseWheelAxis, uint, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetState
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 673
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static InputState GetState(ShapeMouseWheelAxis axis, uint accessTag, float deadzone = 1)
    parameters:
    - id: axis
      type: ShapeEngine.Input.ShapeMouseWheelAxis
    - id: accessTag
      type: System.UInt32
    - id: deadzone
      type: System.Single
    return:
      type: ShapeEngine.Input.InputState
    content.vb: Public Shared Function GetState(axis As ShapeMouseWheelAxis, accessTag As UInteger, deadzone As Single = 1) As InputState
  overload: ShapeEngine.Input.InputAction.GetState*
  nameWithType.vb: InputAction.GetState(ShapeMouseWheelAxis, UInteger, Single)
  fullName.vb: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeMouseWheelAxis, UInteger, Single)
  name.vb: GetState(ShapeMouseWheelAxis, UInteger, Single)
- uid: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeGamepadAxis,System.UInt32,System.Int32,System.Single)
  commentId: M:ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeGamepadAxis,System.UInt32,System.Int32,System.Single)
  id: GetState(ShapeEngine.Input.ShapeGamepadAxis,System.UInt32,System.Int32,System.Single)
  parent: ShapeEngine.Input.InputAction
  langs:
  - csharp
  - vb
  name: GetState(ShapeGamepadAxis, uint, int, float)
  nameWithType: InputAction.GetState(ShapeGamepadAxis, uint, int, float)
  fullName: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeGamepadAxis, uint, int, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Input/InputAction.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetState
    path: ../ShapeEngine/ShapeEngine/Input/InputAction.cs
    startLine: 678
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Input
  syntax:
    content: public static InputState GetState(ShapeGamepadAxis axis, uint accessTag, int gamepadIndex, float deadzone = 0.2)
    parameters:
    - id: axis
      type: ShapeEngine.Input.ShapeGamepadAxis
    - id: accessTag
      type: System.UInt32
    - id: gamepadIndex
      type: System.Int32
    - id: deadzone
      type: System.Single
    return:
      type: ShapeEngine.Input.InputState
    content.vb: Public Shared Function GetState(axis As ShapeGamepadAxis, accessTag As UInteger, gamepadIndex As Integer, deadzone As Single = 0.2) As InputState
  overload: ShapeEngine.Input.InputAction.GetState*
  nameWithType.vb: InputAction.GetState(ShapeGamepadAxis, UInteger, Integer, Single)
  fullName.vb: ShapeEngine.Input.InputAction.GetState(ShapeEngine.Input.ShapeGamepadAxis, UInteger, Integer, Single)
  name.vb: GetState(ShapeGamepadAxis, UInteger, Integer, Single)
references:
- uid: ShapeEngine.Input
  commentId: N:ShapeEngine.Input
  href: ShapeEngine.html
  name: ShapeEngine.Input
  nameWithType: ShapeEngine.Input
  fullName: ShapeEngine.Input
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Input
    name: Input
    href: ShapeEngine.Input.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Input
    name: Input
    href: ShapeEngine.Input.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ShapeEngine.Input.InputAction.ID*
  commentId: Overload:ShapeEngine.Input.InputAction.ID
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_ID
  name: ID
  nameWithType: InputAction.ID
  fullName: ShapeEngine.Input.InputAction.ID
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: ShapeEngine.Input.InputAction.AccessTag*
  commentId: Overload:ShapeEngine.Input.InputAction.AccessTag
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_AccessTag
  name: AccessTag
  nameWithType: InputAction.AccessTag
  fullName: ShapeEngine.Input.InputAction.AccessTag
- uid: ShapeEngine.Input.ShapeGamepadDevice
  commentId: T:ShapeEngine.Input.ShapeGamepadDevice
  parent: ShapeEngine.Input
  href: ShapeEngine.Input.ShapeGamepadDevice.html
  name: ShapeGamepadDevice
  nameWithType: ShapeGamepadDevice
  fullName: ShapeEngine.Input.ShapeGamepadDevice
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ShapeEngine.Input.InputAction.MultiTapTarget*
  commentId: Overload:ShapeEngine.Input.InputAction.MultiTapTarget
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_MultiTapTarget
  name: MultiTapTarget
  nameWithType: InputAction.MultiTapTarget
  fullName: ShapeEngine.Input.InputAction.MultiTapTarget
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ShapeEngine.Input.InputAction.HoldDuration*
  commentId: Overload:ShapeEngine.Input.InputAction.HoldDuration
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_HoldDuration
  name: HoldDuration
  nameWithType: InputAction.HoldDuration
  fullName: ShapeEngine.Input.InputAction.HoldDuration
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: ShapeEngine.Input.InputAction.MultiTapDuration*
  commentId: Overload:ShapeEngine.Input.InputAction.MultiTapDuration
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_MultiTapDuration
  name: MultiTapDuration
  nameWithType: InputAction.MultiTapDuration
  fullName: ShapeEngine.Input.InputAction.MultiTapDuration
- uid: ShapeEngine.Input.InputAction.AxisSensitivity*
  commentId: Overload:ShapeEngine.Input.InputAction.AxisSensitivity
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_AxisSensitivity
  name: AxisSensitivity
  nameWithType: InputAction.AxisSensitivity
  fullName: ShapeEngine.Input.InputAction.AxisSensitivity
- uid: ShapeEngine.Input.InputAction.AxisGravity*
  commentId: Overload:ShapeEngine.Input.InputAction.AxisGravity
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_AxisGravity
  name: AxisGravity
  nameWithType: InputAction.AxisGravity
  fullName: ShapeEngine.Input.InputAction.AxisGravity
- uid: ShapeEngine.Input.InputAction.State*
  commentId: Overload:ShapeEngine.Input.InputAction.State
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_State
  name: State
  nameWithType: InputAction.State
  fullName: ShapeEngine.Input.InputAction.State
- uid: ShapeEngine.Input.InputState
  commentId: T:ShapeEngine.Input.InputState
  parent: ShapeEngine.Input
  href: ShapeEngine.Input.InputState.html
  name: InputState
  nameWithType: InputState
  fullName: ShapeEngine.Input.InputState
- uid: ShapeEngine.Input.InputAction.#ctor*
  commentId: Overload:ShapeEngine.Input.InputAction.#ctor
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction__ctor
  name: InputAction
  nameWithType: InputAction.InputAction
  fullName: ShapeEngine.Input.InputAction.InputAction
  nameWithType.vb: InputAction.New
  fullName.vb: ShapeEngine.Input.InputAction.New
  name.vb: New
- uid: ShapeEngine.Input.IInputType[]
  isExternal: true
  href: ShapeEngine.Input.IInputType.html
  name: IInputType[]
  nameWithType: IInputType[]
  fullName: ShapeEngine.Input.IInputType[]
  nameWithType.vb: IInputType()
  fullName.vb: ShapeEngine.Input.IInputType()
  name.vb: IInputType()
  spec.csharp:
  - uid: ShapeEngine.Input.IInputType
    name: IInputType
    href: ShapeEngine.Input.IInputType.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: ShapeEngine.Input.IInputType
    name: IInputType
    href: ShapeEngine.Input.IInputType.html
  - name: (
  - name: )
- uid: ShapeEngine.Input.InputAction.GetGamepadIndex*
  commentId: Overload:ShapeEngine.Input.InputAction.GetGamepadIndex
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_GetGamepadIndex
  name: GetGamepadIndex
  nameWithType: InputAction.GetGamepadIndex
  fullName: ShapeEngine.Input.InputAction.GetGamepadIndex
- uid: ShapeEngine.Input.InputAction.ClearState*
  commentId: Overload:ShapeEngine.Input.InputAction.ClearState
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_ClearState
  name: ClearState
  nameWithType: InputAction.ClearState
  fullName: ShapeEngine.Input.InputAction.ClearState
- uid: ShapeEngine.Input.InputAction.Consume*
  commentId: Overload:ShapeEngine.Input.InputAction.Consume
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_Consume
  name: Consume
  nameWithType: InputAction.Consume
  fullName: ShapeEngine.Input.InputAction.Consume
- uid: ShapeEngine.Input.InputAction.Update*
  commentId: Overload:ShapeEngine.Input.InputAction.Update
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_Update_System_Single_
  name: Update
  nameWithType: InputAction.Update
  fullName: ShapeEngine.Input.InputAction.Update
- uid: ShapeEngine.Input.InputAction.Copy*
  commentId: Overload:ShapeEngine.Input.InputAction.Copy
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_Copy
  name: Copy
  nameWithType: InputAction.Copy
  fullName: ShapeEngine.Input.InputAction.Copy
- uid: ShapeEngine.Input.InputAction
  commentId: T:ShapeEngine.Input.InputAction
  parent: ShapeEngine.Input
  href: ShapeEngine.Input.InputAction.html
  name: InputAction
  nameWithType: InputAction
  fullName: ShapeEngine.Input.InputAction
- uid: ShapeEngine.Input.InputAction.GetInputs*
  commentId: Overload:ShapeEngine.Input.InputAction.GetInputs
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_GetInputs
  name: GetInputs
  nameWithType: InputAction.GetInputs
  fullName: ShapeEngine.Input.InputAction.GetInputs
- uid: System.Collections.Generic.List{ShapeEngine.Input.IInputType}
  commentId: T:System.Collections.Generic.List{ShapeEngine.Input.IInputType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IInputType>
  nameWithType: List<IInputType>
  fullName: System.Collections.Generic.List<ShapeEngine.Input.IInputType>
  nameWithType.vb: List(Of IInputType)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Input.IInputType)
  name.vb: List(Of IInputType)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: ShapeEngine.Input.IInputType
    name: IInputType
    href: ShapeEngine.Input.IInputType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Input.IInputType
    name: IInputType
    href: ShapeEngine.Input.IInputType.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: ShapeEngine.Input.InputAction.GetInputsCopied*
  commentId: Overload:ShapeEngine.Input.InputAction.GetInputsCopied
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_GetInputsCopied
  name: GetInputsCopied
  nameWithType: InputAction.GetInputsCopied
  fullName: ShapeEngine.Input.InputAction.GetInputsCopied
- uid: ShapeEngine.Input.InputDeviceType
  commentId: T:ShapeEngine.Input.InputDeviceType
  parent: ShapeEngine.Input
  href: ShapeEngine.Input.InputDeviceType.html
  name: InputDeviceType
  nameWithType: InputDeviceType
  fullName: ShapeEngine.Input.InputDeviceType
- uid: ShapeEngine.Input.InputAction.ClearInputs*
  commentId: Overload:ShapeEngine.Input.InputAction.ClearInputs
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_ClearInputs
  name: ClearInputs
  nameWithType: InputAction.ClearInputs
  fullName: ShapeEngine.Input.InputAction.ClearInputs
- uid: ShapeEngine.Input.InputAction.RemoveInput*
  commentId: Overload:ShapeEngine.Input.InputAction.RemoveInput
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_RemoveInput_ShapeEngine_Input_IInputType_
  name: RemoveInput
  nameWithType: InputAction.RemoveInput
  fullName: ShapeEngine.Input.InputAction.RemoveInput
- uid: ShapeEngine.Input.IInputType
  commentId: T:ShapeEngine.Input.IInputType
  parent: ShapeEngine.Input
  href: ShapeEngine.Input.IInputType.html
  name: IInputType
  nameWithType: IInputType
  fullName: ShapeEngine.Input.IInputType
- uid: ShapeEngine.Input.InputAction.RemoveInputs*
  commentId: Overload:ShapeEngine.Input.InputAction.RemoveInputs
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_RemoveInputs_ShapeEngine_Input_InputDeviceType_
  name: RemoveInputs
  nameWithType: InputAction.RemoveInputs
  fullName: ShapeEngine.Input.InputAction.RemoveInputs
- uid: ShapeEngine.Input.InputAction.AddInput*
  commentId: Overload:ShapeEngine.Input.InputAction.AddInput
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_AddInput_ShapeEngine_Input_IInputType_
  name: AddInput
  nameWithType: InputAction.AddInput
  fullName: ShapeEngine.Input.InputAction.AddInput
- uid: ShapeEngine.Input.InputAction.AddInputs*
  commentId: Overload:ShapeEngine.Input.InputAction.AddInputs
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_AddInputs_ShapeEngine_Input_IInputType___
  name: AddInputs
  nameWithType: InputAction.AddInputs
  fullName: ShapeEngine.Input.InputAction.AddInputs
- uid: ShapeEngine.Input.InputAction.HasInput*
  commentId: Overload:ShapeEngine.Input.InputAction.HasInput
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_HasInput_ShapeEngine_Input_IInputType_
  name: HasInput
  nameWithType: InputAction.HasInput
  fullName: ShapeEngine.Input.InputAction.HasInput
- uid: ShapeEngine.Input.InputAction.GetInputTypeDescription*
  commentId: Overload:ShapeEngine.Input.InputAction.GetInputTypeDescription
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_GetInputTypeDescription_ShapeEngine_Input_InputDeviceType_System_Boolean_System_Int32_System_Boolean_System_Boolean_
  name: GetInputTypeDescription
  nameWithType: InputAction.GetInputTypeDescription
  fullName: ShapeEngine.Input.InputAction.GetInputTypeDescription
- uid: ShapeEngine.Input.InputAction.GetInputTypeDescriptionPerDevice*
  commentId: Overload:ShapeEngine.Input.InputAction.GetInputTypeDescriptionPerDevice
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_GetInputTypeDescriptionPerDevice_System_Boolean_System_Int32_System_Boolean_
  name: GetInputTypeDescriptionPerDevice
  nameWithType: InputAction.GetInputTypeDescriptionPerDevice
  fullName: ShapeEngine.Input.InputAction.GetInputTypeDescriptionPerDevice
- uid: ShapeEngine.Input.InputAction.GetInputTypeNames*
  commentId: Overload:ShapeEngine.Input.InputAction.GetInputTypeNames
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_GetInputTypeNames_ShapeEngine_Input_InputDeviceType_System_Boolean_System_Int32_
  name: GetInputTypeNames
  nameWithType: InputAction.GetInputTypeNames
  fullName: ShapeEngine.Input.InputAction.GetInputTypeNames
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: ShapeEngine.Input.InputAction.GetInputTypeNamesLimited*
  commentId: Overload:ShapeEngine.Input.InputAction.GetInputTypeNamesLimited
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_GetInputTypeNamesLimited_System_Boolean_System_Int32_
  name: GetInputTypeNamesLimited
  nameWithType: InputAction.GetInputTypeNamesLimited
  fullName: ShapeEngine.Input.InputAction.GetInputTypeNamesLimited
- uid: ShapeEngine.Input.InputAction.GetInputTypeNamesLimitedPerDevice*
  commentId: Overload:ShapeEngine.Input.InputAction.GetInputTypeNamesLimitedPerDevice
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_GetInputTypeNamesLimitedPerDevice_System_Boolean_System_Int32_
  name: GetInputTypeNamesLimitedPerDevice
  nameWithType: InputAction.GetInputTypeNamesLimitedPerDevice
  fullName: ShapeEngine.Input.InputAction.GetInputTypeNamesLimitedPerDevice
- uid: System.Collections.Generic.List{ShapeEngine.Input.InputName}
  commentId: T:System.Collections.Generic.List{ShapeEngine.Input.InputName}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<InputName>
  nameWithType: List<InputName>
  fullName: System.Collections.Generic.List<ShapeEngine.Input.InputName>
  nameWithType.vb: List(Of InputName)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Input.InputName)
  name.vb: List(Of InputName)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: ShapeEngine.Input.InputName
    name: InputName
    href: ShapeEngine.Input.InputName.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Input.InputName
    name: InputName
    href: ShapeEngine.Input.InputName.html
  - name: )
- uid: ShapeEngine.Input.InputAction.Locked*
  commentId: Overload:ShapeEngine.Input.InputAction.Locked
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_Locked
  name: Locked
  nameWithType: InputAction.Locked
  fullName: ShapeEngine.Input.InputAction.Locked
- uid: ShapeEngine.Input.InputAction.NextTag*
  commentId: Overload:ShapeEngine.Input.InputAction.NextTag
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_NextTag
  name: NextTag
  nameWithType: InputAction.NextTag
  fullName: ShapeEngine.Input.InputAction.NextTag
- uid: ShapeEngine.Input.InputAction.Lock*
  commentId: Overload:ShapeEngine.Input.InputAction.Lock
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_Lock
  name: Lock
  nameWithType: InputAction.Lock
  fullName: ShapeEngine.Input.InputAction.Lock
- uid: ShapeEngine.Core.Structs.BitFlag
  commentId: T:ShapeEngine.Core.Structs.BitFlag
  parent: ShapeEngine.Core.Structs
  href: ShapeEngine.Core.Structs.BitFlag.html
  name: BitFlag
  nameWithType: BitFlag
  fullName: ShapeEngine.Core.Structs.BitFlag
- uid: ShapeEngine.Core.Structs
  commentId: N:ShapeEngine.Core.Structs
  href: ShapeEngine.html
  name: ShapeEngine.Core.Structs
  nameWithType: ShapeEngine.Core.Structs
  fullName: ShapeEngine.Core.Structs
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Structs
    name: Structs
    href: ShapeEngine.Core.Structs.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Structs
    name: Structs
    href: ShapeEngine.Core.Structs.html
- uid: ShapeEngine.Input.InputAction.LockWhitelist*
  commentId: Overload:ShapeEngine.Input.InputAction.LockWhitelist
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_LockWhitelist_ShapeEngine_Core_Structs_BitFlag_
  name: LockWhitelist
  nameWithType: InputAction.LockWhitelist
  fullName: ShapeEngine.Input.InputAction.LockWhitelist
- uid: ShapeEngine.Input.InputAction.LockBlacklist*
  commentId: Overload:ShapeEngine.Input.InputAction.LockBlacklist
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_LockBlacklist_ShapeEngine_Core_Structs_BitFlag_
  name: LockBlacklist
  nameWithType: InputAction.LockBlacklist
  fullName: ShapeEngine.Input.InputAction.LockBlacklist
- uid: ShapeEngine.Input.InputAction.Unlock*
  commentId: Overload:ShapeEngine.Input.InputAction.Unlock
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_Unlock
  name: Unlock
  nameWithType: InputAction.Unlock
  fullName: ShapeEngine.Input.InputAction.Unlock
- uid: ShapeEngine.Input.InputAction.HasAccess*
  commentId: Overload:ShapeEngine.Input.InputAction.HasAccess
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_HasAccess_System_UInt32_
  name: HasAccess
  nameWithType: InputAction.HasAccess
  fullName: ShapeEngine.Input.InputAction.HasAccess
- uid: ShapeEngine.Input.InputAction.IsInputAvailable*
  commentId: Overload:ShapeEngine.Input.InputAction.IsInputAvailable
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_IsInputAvailable_System_UInt32_
  name: IsInputAvailable
  nameWithType: InputAction.IsInputAvailable
  fullName: ShapeEngine.Input.InputAction.IsInputAvailable
- uid: ShapeEngine.Input.InputAction.UpdateActions*
  commentId: Overload:ShapeEngine.Input.InputAction.UpdateActions
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_UpdateActions_System_Single_ShapeEngine_Input_ShapeGamepadDevice_ShapeEngine_Input_InputAction___
  name: UpdateActions
  nameWithType: InputAction.UpdateActions
  fullName: ShapeEngine.Input.InputAction.UpdateActions
- uid: ShapeEngine.Input.InputAction[]
  isExternal: true
  href: ShapeEngine.Input.InputAction.html
  name: InputAction[]
  nameWithType: InputAction[]
  fullName: ShapeEngine.Input.InputAction[]
  nameWithType.vb: InputAction()
  fullName.vb: ShapeEngine.Input.InputAction()
  name.vb: InputAction()
  spec.csharp:
  - uid: ShapeEngine.Input.InputAction
    name: InputAction
    href: ShapeEngine.Input.InputAction.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: ShapeEngine.Input.InputAction
    name: InputAction
    href: ShapeEngine.Input.InputAction.html
  - name: (
  - name: )
- uid: System.Collections.Generic.List{ShapeEngine.Input.InputAction}
  commentId: T:System.Collections.Generic.List{ShapeEngine.Input.InputAction}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<InputAction>
  nameWithType: List<InputAction>
  fullName: System.Collections.Generic.List<ShapeEngine.Input.InputAction>
  nameWithType.vb: List(Of InputAction)
  fullName.vb: System.Collections.Generic.List(Of ShapeEngine.Input.InputAction)
  name.vb: List(Of InputAction)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: ShapeEngine.Input.InputAction
    name: InputAction
    href: ShapeEngine.Input.InputAction.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Input.InputAction
    name: InputAction
    href: ShapeEngine.Input.InputAction.html
  - name: )
- uid: ShapeEngine.Input.InputAction.GetActionDescriptions*
  commentId: Overload:ShapeEngine.Input.InputAction.GetActionDescriptions
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_GetActionDescriptions_ShapeEngine_Input_InputDeviceType_System_Boolean_System_Int32_System_Collections_Generic_List_ShapeEngine_Input_InputAction__
  name: GetActionDescriptions
  nameWithType: InputAction.GetActionDescriptions
  fullName: ShapeEngine.Input.InputAction.GetActionDescriptions
- uid: ShapeEngine.Input.InputAction.GetState*
  commentId: Overload:ShapeEngine.Input.InputAction.GetState
  href: ShapeEngine.Input.InputAction.html#ShapeEngine_Input_InputAction_GetState_ShapeEngine_Input_ShapeKeyboardButton_System_UInt32_
  name: GetState
  nameWithType: InputAction.GetState
  fullName: ShapeEngine.Input.InputAction.GetState
- uid: ShapeEngine.Input.ShapeKeyboardButton
  commentId: T:ShapeEngine.Input.ShapeKeyboardButton
  parent: ShapeEngine.Input
  href: ShapeEngine.Input.ShapeKeyboardButton.html
  name: ShapeKeyboardButton
  nameWithType: ShapeKeyboardButton
  fullName: ShapeEngine.Input.ShapeKeyboardButton
- uid: ShapeEngine.Input.ShapeMouseButton
  commentId: T:ShapeEngine.Input.ShapeMouseButton
  parent: ShapeEngine.Input
  href: ShapeEngine.Input.ShapeMouseButton.html
  name: ShapeMouseButton
  nameWithType: ShapeMouseButton
  fullName: ShapeEngine.Input.ShapeMouseButton
- uid: ShapeEngine.Input.ShapeGamepadButton
  commentId: T:ShapeEngine.Input.ShapeGamepadButton
  parent: ShapeEngine.Input
  href: ShapeEngine.Input.ShapeGamepadButton.html
  name: ShapeGamepadButton
  nameWithType: ShapeGamepadButton
  fullName: ShapeEngine.Input.ShapeGamepadButton
- uid: ShapeEngine.Input.ShapeMouseWheelAxis
  commentId: T:ShapeEngine.Input.ShapeMouseWheelAxis
  parent: ShapeEngine.Input
  href: ShapeEngine.Input.ShapeMouseWheelAxis.html
  name: ShapeMouseWheelAxis
  nameWithType: ShapeMouseWheelAxis
  fullName: ShapeEngine.Input.ShapeMouseWheelAxis
- uid: ShapeEngine.Input.ShapeGamepadAxis
  commentId: T:ShapeEngine.Input.ShapeGamepadAxis
  parent: ShapeEngine.Input
  href: ShapeEngine.Input.ShapeGamepadAxis.html
  name: ShapeGamepadAxis
  nameWithType: ShapeGamepadAxis
  fullName: ShapeEngine.Input.ShapeGamepadAxis
