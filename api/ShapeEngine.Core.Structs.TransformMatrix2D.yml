### YamlMime:ManagedReference
items:
- uid: ShapeEngine.Core.Structs.TransformMatrix2D
  commentId: T:ShapeEngine.Core.Structs.TransformMatrix2D
  id: TransformMatrix2D
  parent: ShapeEngine.Core.Structs
  children:
  - ShapeEngine.Core.Structs.TransformMatrix2D.#ctor(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.TransformMatrix2D.#ctor(System.Single,System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.TransformMatrix2D.#ctor(System.Single,System.Numerics.Vector2,System.Single,System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.TransformMatrix2D.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - ShapeEngine.Core.Structs.TransformMatrix2D.AffineInverse
  - ShapeEngine.Core.Structs.TransformMatrix2D.BasisXform(System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.TransformMatrix2D.BasisXformInv(System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.TransformMatrix2D.Equals(ShapeEngine.Core.Structs.TransformMatrix2D)
  - ShapeEngine.Core.Structs.TransformMatrix2D.Equals(System.Object)
  - ShapeEngine.Core.Structs.TransformMatrix2D.FlipX
  - ShapeEngine.Core.Structs.TransformMatrix2D.FlipY
  - ShapeEngine.Core.Structs.TransformMatrix2D.GetHashCode
  - ShapeEngine.Core.Structs.TransformMatrix2D.Identity
  - ShapeEngine.Core.Structs.TransformMatrix2D.InterpolateWith(ShapeEngine.Core.Structs.TransformMatrix2D,System.Single)
  - ShapeEngine.Core.Structs.TransformMatrix2D.Inverse
  - ShapeEngine.Core.Structs.TransformMatrix2D.IsEqualApprox(ShapeEngine.Core.Structs.TransformMatrix2D)
  - ShapeEngine.Core.Structs.TransformMatrix2D.IsFinite
  - ShapeEngine.Core.Structs.TransformMatrix2D.Item(System.Int32)
  - ShapeEngine.Core.Structs.TransformMatrix2D.Item(System.Int32,System.Int32)
  - ShapeEngine.Core.Structs.TransformMatrix2D.Origin
  - ShapeEngine.Core.Structs.TransformMatrix2D.Orthonormalized
  - ShapeEngine.Core.Structs.TransformMatrix2D.Rotated(System.Single)
  - ShapeEngine.Core.Structs.TransformMatrix2D.RotatedLocal(System.Single)
  - ShapeEngine.Core.Structs.TransformMatrix2D.Rotation
  - ShapeEngine.Core.Structs.TransformMatrix2D.Scale
  - ShapeEngine.Core.Structs.TransformMatrix2D.Scaled(System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.TransformMatrix2D.ScaledLocal(System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.TransformMatrix2D.Skew
  - ShapeEngine.Core.Structs.TransformMatrix2D.ToString
  - ShapeEngine.Core.Structs.TransformMatrix2D.ToString(System.String)
  - ShapeEngine.Core.Structs.TransformMatrix2D.Translated(System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.TransformMatrix2D.TranslatedLocal(System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.TransformMatrix2D.X
  - ShapeEngine.Core.Structs.TransformMatrix2D.Y
  - ShapeEngine.Core.Structs.TransformMatrix2D.op_Equality(ShapeEngine.Core.Structs.TransformMatrix2D,ShapeEngine.Core.Structs.TransformMatrix2D)
  - ShapeEngine.Core.Structs.TransformMatrix2D.op_Inequality(ShapeEngine.Core.Structs.TransformMatrix2D,ShapeEngine.Core.Structs.TransformMatrix2D)
  - ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply(ShapeEngine.Core.Structs.TransformMatrix2D,ShapeEngine.Core.Structs.TransformMatrix2D)
  - ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply(ShapeEngine.Core.Structs.TransformMatrix2D,System.Numerics.Vector2)
  - ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply(ShapeEngine.Core.Structs.TransformMatrix2D,System.Numerics.Vector2[])
  - ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply(System.Numerics.Vector2,ShapeEngine.Core.Structs.TransformMatrix2D)
  - ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply(System.Numerics.Vector2[],ShapeEngine.Core.Structs.TransformMatrix2D)
  langs:
  - csharp
  - vb
  name: TransformMatrix2D
  nameWithType: TransformMatrix2D
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D
  type: Struct
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: TransformMatrix2D
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 13
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  syntax:
    content: 'public struct TransformMatrix2D : IEquatable<TransformMatrix2D>'
    content.vb: Public Structure TransformMatrix2D Implements IEquatable(Of TransformMatrix2D)
  implements:
  - System.IEquatable{ShapeEngine.Core.Structs.TransformMatrix2D}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.X
  commentId: F:ShapeEngine.Core.Structs.TransformMatrix2D.X
  id: X
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: X
  nameWithType: TransformMatrix2D.X
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.X
  type: Field
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: X
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 18
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: The basis matrix's X vector (column 0). Equivalent to array index <code>[0]</code>.
  example: []
  syntax:
    content: public Vector2 X
    return:
      type: System.Numerics.Vector2
    content.vb: Public X As Vector2
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Y
  commentId: F:ShapeEngine.Core.Structs.TransformMatrix2D.Y
  id: Y
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: TransformMatrix2D.Y
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Y
  type: Field
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Y
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 23
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: The basis matrix's Y vector (column 1). Equivalent to array index <code>[1]</code>.
  example: []
  syntax:
    content: public Vector2 Y
    return:
      type: System.Numerics.Vector2
    content.vb: Public Y As Vector2
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Origin
  commentId: F:ShapeEngine.Core.Structs.TransformMatrix2D.Origin
  id: Origin
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: Origin
  nameWithType: TransformMatrix2D.Origin
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Origin
  type: Field
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Origin
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 29
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    The origin vector (column 2, the third column). Equivalent to array index <code>[2]</code>.

    The origin vector represents translation.
  example: []
  syntax:
    content: public Vector2 Origin
    return:
      type: System.Numerics.Vector2
    content.vb: Public Origin As Vector2
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Rotation
  commentId: P:ShapeEngine.Core.Structs.TransformMatrix2D.Rotation
  id: Rotation
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: TransformMatrix2D.Rotation
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Rotation
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Rotation
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 34
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Returns the transform's rotation (in radians).
  example: []
  syntax:
    content: public readonly float Rotation { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Rotation As Single
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.Rotation*
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Scale
  commentId: P:ShapeEngine.Core.Structs.TransformMatrix2D.Scale
  id: Scale
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: Scale
  nameWithType: TransformMatrix2D.Scale
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Scale
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Scale
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 39
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Returns the scale.
  example: []
  syntax:
    content: public readonly Vector2 Scale { get; }
    parameters: []
    return:
      type: System.Numerics.Vector2
    content.vb: Public ReadOnly Property Scale As Vector2
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.Scale*
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Skew
  commentId: P:ShapeEngine.Core.Structs.TransformMatrix2D.Skew
  id: Skew
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: Skew
  nameWithType: TransformMatrix2D.Skew
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Skew
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Skew
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 51
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Returns the transform's skew (in radians).
  example: []
  syntax:
    content: public readonly float Skew { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Skew As Single
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.Skew*
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Item(System.Int32)
  commentId: P:ShapeEngine.Core.Structs.TransformMatrix2D.Item(System.Int32)
  id: Item(System.Int32)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: TransformMatrix2D.this[int]
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.this[int]
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: this[]
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 71
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Access whole columns in the form of <xref href="System.Numerics.Vector2" data-throw-if-not-resolved="false"></xref>.

    The third column is the <xref href="ShapeEngine.Core.Structs.TransformMatrix2D.Origin" data-throw-if-not-resolved="false"></xref> vector.
  example: []
  syntax:
    content: public Vector2 this[int column] { readonly get; set; }
    parameters:
    - id: column
      type: System.Int32
      description: Which column vector.
    return:
      type: System.Numerics.Vector2
    content.vb: Public Default Property this[](column As Integer) As Vector2
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code class="paramref">column</code> is not 0, 1 or 2.
  nameWithType.vb: TransformMatrix2D.this[](Integer)
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.this[](Integer)
  name.vb: this[](Integer)
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Item(System.Int32,System.Int32)
  commentId: P:ShapeEngine.Core.Structs.TransformMatrix2D.Item(System.Int32,System.Int32)
  id: Item(System.Int32,System.Int32)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: this[int, int]
  nameWithType: TransformMatrix2D.this[int, int]
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.this[int, int]
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: this[]
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 112
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Access matrix elements in column-major order.

    The third column is the <xref href="ShapeEngine.Core.Structs.TransformMatrix2D.Origin" data-throw-if-not-resolved="false"></xref> vector.
  example: []
  syntax:
    content: public float this[int column, int row] { readonly get; set; }
    parameters:
    - id: column
      type: System.Int32
      description: Which column, the matrix horizontal position.
    - id: row
      type: System.Int32
      description: Which row, the matrix vertical position.
    return:
      type: System.Single
    content.vb: Public Default Property this[](column As Integer, row As Integer) As Single
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.Item*
  nameWithType.vb: TransformMatrix2D.this[](Integer, Integer)
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.this[](Integer, Integer)
  name.vb: this[](Integer, Integer)
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.AffineInverse
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.AffineInverse
  id: AffineInverse
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: AffineInverse()
  nameWithType: TransformMatrix2D.AffineInverse()
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.AffineInverse()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: AffineInverse
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 129
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Returns the inverse of the transform, under the assumption that

    the basis is invertible (must have non-zero determinant).
  example: []
  syntax:
    content: public readonly TransformMatrix2D AffineInverse()
    return:
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The inverse transformation matrix.
    content.vb: Public Function AffineInverse() As TransformMatrix2D
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.AffineInverse*
  seealso:
  - linkId: ShapeEngine.Core.Structs.TransformMatrix2D.Inverse
    commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.Inverse
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXform(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.BasisXform(System.Numerics.Vector2)
  id: BasisXform(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: BasisXform(Vector2)
  nameWithType: TransformMatrix2D.BasisXform(Vector2)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXform(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: BasisXform
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 170
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Returns a vector transformed (multiplied) by the basis matrix.

    This method does not account for translation (the <xref href="ShapeEngine.Core.Structs.TransformMatrix2D.Origin" data-throw-if-not-resolved="false"></xref> vector).
  example: []
  syntax:
    content: public readonly Vector2 BasisXform(Vector2 v)
    parameters:
    - id: v
      type: System.Numerics.Vector2
      description: A vector to transform.
    return:
      type: System.Numerics.Vector2
      description: The transformed vector.
    content.vb: Public Function BasisXform(v As Vector2) As Vector2
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXform*
  seealso:
  - linkId: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXformInv(System.Numerics.Vector2)
    commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.BasisXformInv(System.Numerics.Vector2)
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXformInv(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.BasisXformInv(System.Numerics.Vector2)
  id: BasisXformInv(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: BasisXformInv(Vector2)
  nameWithType: TransformMatrix2D.BasisXformInv(Vector2)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXformInv(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: BasisXformInv
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 183
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Returns a vector transformed (multiplied) by the inverse basis matrix,

    under the assumption that the basis is orthonormal (i.e. rotation/reflection

    is fine, scaling/skew is not).

    This method does not account for translation (the <xref href="ShapeEngine.Core.Structs.TransformMatrix2D.Origin" data-throw-if-not-resolved="false"></xref> vector).

    <code>transform.BasisXformInv(vector)</code> is equivalent to <code>transform.Inverse().BasisXform(vector)</code>. See <xref href="ShapeEngine.Core.Structs.TransformMatrix2D.Inverse" data-throw-if-not-resolved="false"></xref>.

    For non-orthonormal transforms (e.g. with scaling) <code>transform.AffineInverse().BasisXform(vector)</code> can be used instead. See <xref href="ShapeEngine.Core.Structs.TransformMatrix2D.AffineInverse" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public readonly Vector2 BasisXformInv(Vector2 v)
    parameters:
    - id: v
      type: System.Numerics.Vector2
      description: A vector to inversely transform.
    return:
      type: System.Numerics.Vector2
      description: The inversely transformed vector.
    content.vb: Public Function BasisXformInv(v As Vector2) As Vector2
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXformInv*
  seealso:
  - linkId: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXform(System.Numerics.Vector2)
    commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.BasisXform(System.Numerics.Vector2)
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.InterpolateWith(ShapeEngine.Core.Structs.TransformMatrix2D,System.Single)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.InterpolateWith(ShapeEngine.Core.Structs.TransformMatrix2D,System.Single)
  id: InterpolateWith(ShapeEngine.Core.Structs.TransformMatrix2D,System.Single)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: InterpolateWith(TransformMatrix2D, float)
  nameWithType: TransformMatrix2D.InterpolateWith(TransformMatrix2D, float)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.InterpolateWith(ShapeEngine.Core.Structs.TransformMatrix2D, float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: InterpolateWith
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 191
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Interpolates this transform to the other <code class="paramref">transform</code> by <code class="paramref">weight</code>.
  example: []
  syntax:
    content: public readonly TransformMatrix2D InterpolateWith(TransformMatrix2D transform, float weight)
    parameters:
    - id: transform
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The other transform.
    - id: weight
      type: System.Single
      description: A value on the range of 0.0 to 1.0, representing the amount of interpolation.
    return:
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The interpolated transform.
    content.vb: Public Function InterpolateWith(transform As TransformMatrix2D, weight As Single) As TransformMatrix2D
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.InterpolateWith*
  nameWithType.vb: TransformMatrix2D.InterpolateWith(TransformMatrix2D, Single)
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.InterpolateWith(ShapeEngine.Core.Structs.TransformMatrix2D, Single)
  name.vb: InterpolateWith(TransformMatrix2D, Single)
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Inverse
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.Inverse
  id: Inverse
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: Inverse()
  nameWithType: TransformMatrix2D.Inverse()
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Inverse()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Inverse
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 209
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Returns the inverse of the transform, under the assumption that

    the transformation basis is orthonormal (i.e. rotation/reflection

    is fine, scaling/skew is not). Use <xref href="ShapeEngine.Core.Structs.TransformMatrix2D.AffineInverse" data-throw-if-not-resolved="false"></xref> for

    non-orthonormal transforms (e.g. with scaling).
  example: []
  syntax:
    content: public readonly TransformMatrix2D Inverse()
    return:
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The inverse matrix.
    content.vb: Public Function Inverse() As TransformMatrix2D
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.Inverse*
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.IsFinite
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.IsFinite
  id: IsFinite
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: IsFinite()
  nameWithType: TransformMatrix2D.IsFinite()
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.IsFinite()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsFinite
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 227
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if this transform is finite, by calling

    Mathf.IsFinite(real_t) on each component.
  example: []
  syntax:
    content: public readonly bool IsFinite()
    return:
      type: System.Boolean
      description: Whether this vector is finite or not.
    content.vb: Public Function IsFinite() As Boolean
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.IsFinite*
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Orthonormalized
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.Orthonormalized
  id: Orthonormalized
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: Orthonormalized()
  nameWithType: TransformMatrix2D.Orthonormalized()
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Orthonormalized()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Orthonormalized
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 234
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Returns the transform with the basis orthogonal (90 degrees),

    and normalized axis vectors (scale of 1 or -1).
  example: []
  syntax:
    content: public readonly TransformMatrix2D Orthonormalized()
    return:
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The orthonormalized transform.
    content.vb: Public Function Orthonormalized() As TransformMatrix2D
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.Orthonormalized*
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Rotated(System.Single)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.Rotated(System.Single)
  id: Rotated(System.Single)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: Rotated(float)
  nameWithType: TransformMatrix2D.Rotated(float)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Rotated(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Rotated
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 258
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Rotates the transform by <code class="paramref">angleRad</code> (in radians).

    The operation is done in the parent/global frame, equivalent to

    multiplying the matrix from the left.
  example: []
  syntax:
    content: public readonly TransformMatrix2D Rotated(float angleRad)
    parameters:
    - id: angleRad
      type: System.Single
      description: The angle to rotate, in radians.
    return:
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The rotated transformation matrix.
    content.vb: Public Function Rotated(angleRad As Single) As TransformMatrix2D
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.Rotated*
  nameWithType.vb: TransformMatrix2D.Rotated(Single)
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.Rotated(Single)
  name.vb: Rotated(Single)
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.RotatedLocal(System.Single)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.RotatedLocal(System.Single)
  id: RotatedLocal(System.Single)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: RotatedLocal(float)
  nameWithType: TransformMatrix2D.RotatedLocal(float)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.RotatedLocal(float)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: RotatedLocal
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 270
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Rotates the transform by <code class="paramref">angleRad</code> (in radians).

    The operation is done in the local frame, equivalent to

    multiplying the matrix from the right.
  example: []
  syntax:
    content: public readonly TransformMatrix2D RotatedLocal(float angleRad)
    parameters:
    - id: angleRad
      type: System.Single
      description: The angle to rotate, in radians.
    return:
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The rotated transformation matrix.
    content.vb: Public Function RotatedLocal(angleRad As Single) As TransformMatrix2D
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.RotatedLocal*
  nameWithType.vb: TransformMatrix2D.RotatedLocal(Single)
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.RotatedLocal(Single)
  name.vb: RotatedLocal(Single)
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Scaled(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.Scaled(System.Numerics.Vector2)
  id: Scaled(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: Scaled(Vector2)
  nameWithType: TransformMatrix2D.Scaled(Vector2)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Scaled(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Scaled
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 282
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Scales the transform by the given scaling factor.

    The operation is done in the parent/global frame, equivalent to

    multiplying the matrix from the left.
  example: []
  syntax:
    content: public readonly TransformMatrix2D Scaled(Vector2 scale)
    parameters:
    - id: scale
      type: System.Numerics.Vector2
      description: The scale to introduce.
    return:
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The scaled transformation matrix.
    content.vb: Public Function Scaled(scale As Vector2) As TransformMatrix2D
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.Scaled*
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.ScaledLocal(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.ScaledLocal(System.Numerics.Vector2)
  id: ScaledLocal(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: ScaledLocal(Vector2)
  nameWithType: TransformMatrix2D.ScaledLocal(Vector2)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.ScaledLocal(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: ScaledLocal
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 298
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Scales the transform by the given scaling factor.

    The operation is done in the local frame, equivalent to

    multiplying the matrix from the right.
  example: []
  syntax:
    content: public readonly TransformMatrix2D ScaledLocal(Vector2 scale)
    parameters:
    - id: scale
      type: System.Numerics.Vector2
      description: The scale to introduce.
    return:
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The scaled transformation matrix.
    content.vb: Public Function ScaledLocal(scale As Vector2) As TransformMatrix2D
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.ScaledLocal*
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Translated(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.Translated(System.Numerics.Vector2)
  id: Translated(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: Translated(Vector2)
  nameWithType: TransformMatrix2D.Translated(Vector2)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Translated(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Translated
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 317
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Translates the transform by the given <code class="paramref">offset</code>.

    The operation is done in the parent/global frame, equivalent to

    multiplying the matrix from the left.
  example: []
  syntax:
    content: public readonly TransformMatrix2D Translated(Vector2 offset)
    parameters:
    - id: offset
      type: System.Numerics.Vector2
      description: The offset to translate by.
    return:
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The translated matrix.
    content.vb: Public Function Translated(offset As Vector2) As TransformMatrix2D
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.Translated*
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.TranslatedLocal(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.TranslatedLocal(System.Numerics.Vector2)
  id: TranslatedLocal(System.Numerics.Vector2)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: TranslatedLocal(Vector2)
  nameWithType: TransformMatrix2D.TranslatedLocal(Vector2)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.TranslatedLocal(System.Numerics.Vector2)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: TranslatedLocal
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 331
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Translates the transform by the given <code class="paramref">offset</code>.

    The operation is done in the local frame, equivalent to

    multiplying the matrix from the right.
  example: []
  syntax:
    content: public readonly TransformMatrix2D TranslatedLocal(Vector2 offset)
    parameters:
    - id: offset
      type: System.Numerics.Vector2
      description: The offset to translate by.
    return:
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The translated matrix.
    content.vb: Public Function TranslatedLocal(offset As Vector2) As TransformMatrix2D
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.TranslatedLocal*
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Identity
  commentId: P:ShapeEngine.Core.Structs.TransformMatrix2D.Identity
  id: Identity
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: TransformMatrix2D.Identity
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Identity
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Identity
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 349
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    The identity transform, with no translation, rotation, or scaling applied.

    This is used as a replacement for <code>TransformMatrix2D()</code> in GDScript.

    Do not use <code>new TransformMatrix2D()</code> with no arguments in C#, because it sets all values to zero.
  example: []
  syntax:
    content: public static TransformMatrix2D Identity { get; }
    parameters: []
    return:
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: Equivalent to <code>new TransformMatrix2D(Vector2.Right, Vector2.Down, Vector2.Zero)</code>.
    content.vb: Public Shared ReadOnly Property Identity As TransformMatrix2D
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.Identity*
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.FlipX
  commentId: P:ShapeEngine.Core.Structs.TransformMatrix2D.FlipX
  id: FlipX
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: FlipX
  nameWithType: TransformMatrix2D.FlipX
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.FlipX
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: FlipX
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 354
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: The transform that will flip something along the X axis.
  example: []
  syntax:
    content: public static TransformMatrix2D FlipX { get; }
    parameters: []
    return:
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: Equivalent to <code>new TransformMatrix2D(Vector2.Left, Vector2.Down, Vector2.Zero)</code>.
    content.vb: Public Shared ReadOnly Property FlipX As TransformMatrix2D
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.FlipX*
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.FlipY
  commentId: P:ShapeEngine.Core.Structs.TransformMatrix2D.FlipY
  id: FlipY
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: FlipY
  nameWithType: TransformMatrix2D.FlipY
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.FlipY
  type: Property
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: FlipY
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 359
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: The transform that will flip something along the Y axis.
  example: []
  syntax:
    content: public static TransformMatrix2D FlipY { get; }
    parameters: []
    return:
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: Equivalent to <code>new TransformMatrix2D(Vector2.Right, Vector2.Up, Vector2.Zero)</code>.
    content.vb: Public Shared ReadOnly Property FlipY As TransformMatrix2D
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.FlipY*
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.#ctor(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.#ctor(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)
  id: '#ctor(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector2)'
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: TransformMatrix2D(Vector2, Vector2, Vector2)
  nameWithType: TransformMatrix2D.TransformMatrix2D(Vector2, Vector2, Vector2)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.TransformMatrix2D(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 367
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Constructs a transformation matrix from 3 vectors (matrix columns).
  example: []
  syntax:
    content: public TransformMatrix2D(Vector2 xAxis, Vector2 yAxis, Vector2 originPos)
    parameters:
    - id: xAxis
      type: System.Numerics.Vector2
      description: The X vector, or column index 0.
    - id: yAxis
      type: System.Numerics.Vector2
      description: The Y vector, or column index 1.
    - id: originPos
      type: System.Numerics.Vector2
      description: The origin vector, or column index 2.
    content.vb: Public Sub New(xAxis As Vector2, yAxis As Vector2, originPos As Vector2)
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.#ctor*
  nameWithType.vb: TransformMatrix2D.New(Vector2, Vector2, Vector2)
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.New(System.Numerics.Vector2, System.Numerics.Vector2, System.Numerics.Vector2)
  name.vb: New(Vector2, Vector2, Vector2)
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)'
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: TransformMatrix2D(float, float, float, float, float, float)
  nameWithType: TransformMatrix2D.TransformMatrix2D(float, float, float, float, float, float)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.TransformMatrix2D(float, float, float, float, float, float)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 384
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Constructs a transformation matrix from the given components.

    Arguments are named such that xy is equal to calling <code>X.Y</code>.
  example: []
  syntax:
    content: public TransformMatrix2D(float xx, float xy, float yx, float yy, float ox, float oy)
    parameters:
    - id: xx
      type: System.Single
      description: The X component of the X column vector, accessed via <code>t.X.X</code> or <code>[0][0]</code>.
    - id: xy
      type: System.Single
      description: The Y component of the X column vector, accessed via <code>t.X.Y</code> or <code>[0][1]</code>.
    - id: yx
      type: System.Single
      description: The X component of the Y column vector, accessed via <code>t.Y.X</code> or <code>[1][0]</code>.
    - id: yy
      type: System.Single
      description: The Y component of the Y column vector, accessed via <code>t.Y.Y</code> or <code>[1][1]</code>.
    - id: ox
      type: System.Single
      description: The X component of the origin vector, accessed via <code>t.Origin.X</code> or <code>[2][0]</code>.
    - id: oy
      type: System.Single
      description: The Y component of the origin vector, accessed via <code>t.Origin.Y</code> or <code>[2][1]</code>.
    content.vb: Public Sub New(xx As Single, xy As Single, yx As Single, yy As Single, ox As Single, oy As Single)
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.#ctor*
  nameWithType.vb: TransformMatrix2D.New(Single, Single, Single, Single, Single, Single)
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.New(Single, Single, Single, Single, Single, Single)
  name.vb: New(Single, Single, Single, Single, Single, Single)
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.#ctor(System.Single,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.#ctor(System.Single,System.Numerics.Vector2)
  id: '#ctor(System.Single,System.Numerics.Vector2)'
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: TransformMatrix2D(float, Vector2)
  nameWithType: TransformMatrix2D.TransformMatrix2D(float, Vector2)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.TransformMatrix2D(float, System.Numerics.Vector2)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 397
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Constructs a transformation matrix from a <code class="paramref">rotationRad</code> value and

    <code class="paramref">origin</code> vector.
  example: []
  syntax:
    content: public TransformMatrix2D(float rotationRad, Vector2 origin)
    parameters:
    - id: rotationRad
      type: System.Single
      description: The rotation of the new transform, in radians.
    - id: origin
      type: System.Numerics.Vector2
      description: The origin vector, or column index 2.
    content.vb: Public Sub New(rotationRad As Single, origin As Vector2)
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.#ctor*
  nameWithType.vb: TransformMatrix2D.New(Single, Vector2)
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.New(Single, System.Numerics.Vector2)
  name.vb: New(Single, Vector2)
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.#ctor(System.Single,System.Numerics.Vector2,System.Single,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.#ctor(System.Single,System.Numerics.Vector2,System.Single,System.Numerics.Vector2)
  id: '#ctor(System.Single,System.Numerics.Vector2,System.Single,System.Numerics.Vector2)'
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: TransformMatrix2D(float, Vector2, float, Vector2)
  nameWithType: TransformMatrix2D.TransformMatrix2D(float, Vector2, float, Vector2)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.TransformMatrix2D(float, System.Numerics.Vector2, float, System.Numerics.Vector2)
  type: Constructor
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: .ctor
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 415
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Constructs a transformation matrix from a <code class="paramref">rotationRad</code> value,

    <code class="paramref">scale</code> vector, <code class="paramref">skew</code> value, and

    <code class="paramref">origin</code> vector.
  example: []
  syntax:
    content: public TransformMatrix2D(float rotationRad, Vector2 scale, float skew, Vector2 origin)
    parameters:
    - id: rotationRad
      type: System.Single
      description: The rotation of the new transform, in radians.
    - id: scale
      type: System.Numerics.Vector2
      description: The scale of the new transform.
    - id: skew
      type: System.Single
      description: The skew of the new transform, in radians.
    - id: origin
      type: System.Numerics.Vector2
      description: The origin vector, or column index 2.
    content.vb: Public Sub New(rotationRad As Single, scale As Vector2, skew As Single, origin As Vector2)
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.#ctor*
  nameWithType.vb: TransformMatrix2D.New(Single, Vector2, Single, Vector2)
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.New(Single, System.Numerics.Vector2, Single, System.Numerics.Vector2)
  name.vb: New(Single, Vector2, Single, Vector2)
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply(ShapeEngine.Core.Structs.TransformMatrix2D,ShapeEngine.Core.Structs.TransformMatrix2D)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply(ShapeEngine.Core.Structs.TransformMatrix2D,ShapeEngine.Core.Structs.TransformMatrix2D)
  id: op_Multiply(ShapeEngine.Core.Structs.TransformMatrix2D,ShapeEngine.Core.Structs.TransformMatrix2D)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: operator *(TransformMatrix2D, TransformMatrix2D)
  nameWithType: TransformMatrix2D.operator *(TransformMatrix2D, TransformMatrix2D)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.operator *(ShapeEngine.Core.Structs.TransformMatrix2D, ShapeEngine.Core.Structs.TransformMatrix2D)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Multiply
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 434
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Composes these two transformation matrices by multiplying them

    together. This has the effect of transforming the second transform

    (the child) by the first transform (the parent).
  example: []
  syntax:
    content: public static TransformMatrix2D operator *(TransformMatrix2D left, TransformMatrix2D right)
    parameters:
    - id: left
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The parent transform.
    - id: right
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The child transform.
    return:
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The composed transform.
    content.vb: Public Shared Operator *(left As TransformMatrix2D, right As TransformMatrix2D) As TransformMatrix2D
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply*
  nameWithType.vb: TransformMatrix2D.*(TransformMatrix2D, TransformMatrix2D)
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.*(ShapeEngine.Core.Structs.TransformMatrix2D, ShapeEngine.Core.Structs.TransformMatrix2D)
  name.vb: '*(TransformMatrix2D, TransformMatrix2D)'
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply(ShapeEngine.Core.Structs.TransformMatrix2D,System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply(ShapeEngine.Core.Structs.TransformMatrix2D,System.Numerics.Vector2)
  id: op_Multiply(ShapeEngine.Core.Structs.TransformMatrix2D,System.Numerics.Vector2)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: operator *(TransformMatrix2D, Vector2)
  nameWithType: TransformMatrix2D.operator *(TransformMatrix2D, Vector2)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.operator *(ShapeEngine.Core.Structs.TransformMatrix2D, System.Numerics.Vector2)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Multiply
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 457
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Returns a Vector2 transformed (multiplied) by the transformation matrix.
  example: []
  syntax:
    content: public static Vector2 operator *(TransformMatrix2D transform, Vector2 vector)
    parameters:
    - id: transform
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The transformation to apply.
    - id: vector
      type: System.Numerics.Vector2
      description: A Vector2 to transform.
    return:
      type: System.Numerics.Vector2
      description: The transformed Vector2.
    content.vb: Public Shared Operator *(transform As TransformMatrix2D, vector As Vector2) As Vector2
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply*
  nameWithType.vb: TransformMatrix2D.*(TransformMatrix2D, Vector2)
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.*(ShapeEngine.Core.Structs.TransformMatrix2D, System.Numerics.Vector2)
  name.vb: '*(TransformMatrix2D, Vector2)'
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply(System.Numerics.Vector2,ShapeEngine.Core.Structs.TransformMatrix2D)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply(System.Numerics.Vector2,ShapeEngine.Core.Structs.TransformMatrix2D)
  id: op_Multiply(System.Numerics.Vector2,ShapeEngine.Core.Structs.TransformMatrix2D)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: operator *(Vector2, TransformMatrix2D)
  nameWithType: TransformMatrix2D.operator *(Vector2, TransformMatrix2D)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.operator *(System.Numerics.Vector2, ShapeEngine.Core.Structs.TransformMatrix2D)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Multiply
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 472
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Returns a Vector2 transformed (multiplied) by the inverse transformation matrix,

    under the assumption that the transformation basis is orthonormal (i.e. rotation/reflection

    is fine, scaling/skew is not).

    <code>vector * transform</code> is equivalent to <code>transform.Inverse() * vector</code>. See <xref href="ShapeEngine.Core.Structs.TransformMatrix2D.Inverse" data-throw-if-not-resolved="false"></xref>.

    For transforming by inverse of an affine transformation (e.g. with scaling) <code>transform.AffineInverse() * vector</code> can be used instead. See <xref href="ShapeEngine.Core.Structs.TransformMatrix2D.AffineInverse" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Vector2 operator *(Vector2 vector, TransformMatrix2D transform)
    parameters:
    - id: vector
      type: System.Numerics.Vector2
      description: A Vector2 to inversely transform.
    - id: transform
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The transformation to apply.
    return:
      type: System.Numerics.Vector2
      description: The inversely transformed Vector2.
    content.vb: Public Shared Operator *(vector As Vector2, transform As TransformMatrix2D) As Vector2
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply*
  nameWithType.vb: TransformMatrix2D.*(Vector2, TransformMatrix2D)
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.*(System.Numerics.Vector2, ShapeEngine.Core.Structs.TransformMatrix2D)
  name.vb: '*(Vector2, TransformMatrix2D)'
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply(ShapeEngine.Core.Structs.TransformMatrix2D,System.Numerics.Vector2[])
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply(ShapeEngine.Core.Structs.TransformMatrix2D,System.Numerics.Vector2[])
  id: op_Multiply(ShapeEngine.Core.Structs.TransformMatrix2D,System.Numerics.Vector2[])
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: operator *(TransformMatrix2D, Vector2[])
  nameWithType: TransformMatrix2D.operator *(TransformMatrix2D, Vector2[])
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.operator *(ShapeEngine.Core.Structs.TransformMatrix2D, System.Numerics.Vector2[])
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Multiply
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 521
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Returns a copy of the given Vector2[] transformed (multiplied) by the transformation matrix.
  example: []
  syntax:
    content: public static Vector2[] operator *(TransformMatrix2D transform, Vector2[] array)
    parameters:
    - id: transform
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The transformation to apply.
    - id: array
      type: System.Numerics.Vector2[]
      description: A Vector2[] to transform.
    return:
      type: System.Numerics.Vector2[]
      description: The transformed copy of the Vector2[].
    content.vb: Public Shared Operator *(transform As TransformMatrix2D, array As Vector2()) As Vector2()
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply*
  nameWithType.vb: TransformMatrix2D.*(TransformMatrix2D, Vector2())
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.*(ShapeEngine.Core.Structs.TransformMatrix2D, System.Numerics.Vector2())
  name.vb: '*(TransformMatrix2D, Vector2())'
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply(System.Numerics.Vector2[],ShapeEngine.Core.Structs.TransformMatrix2D)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply(System.Numerics.Vector2[],ShapeEngine.Core.Structs.TransformMatrix2D)
  id: op_Multiply(System.Numerics.Vector2[],ShapeEngine.Core.Structs.TransformMatrix2D)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: operator *(Vector2[], TransformMatrix2D)
  nameWithType: TransformMatrix2D.operator *(Vector2[], TransformMatrix2D)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.operator *(System.Numerics.Vector2[], ShapeEngine.Core.Structs.TransformMatrix2D)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Multiply
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 543
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Returns a copy of the given Vector2[] transformed (multiplied) by the inverse transformation matrix,

    under the assumption that the transformation basis is orthonormal (i.e. rotation/reflection

    is fine, scaling/skew is not).

    <code>array * transform</code> is equivalent to <code>transform.Inverse() * array</code>. See <xref href="ShapeEngine.Core.Structs.TransformMatrix2D.Inverse" data-throw-if-not-resolved="false"></xref>.

    For transforming by inverse of an affine transformation (e.g. with scaling) <code>transform.AffineInverse() * array</code> can be used instead. See <xref href="ShapeEngine.Core.Structs.TransformMatrix2D.AffineInverse" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Vector2[] operator *(Vector2[] array, TransformMatrix2D transform)
    parameters:
    - id: array
      type: System.Numerics.Vector2[]
      description: A Vector2[] to inversely transform.
    - id: transform
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The transformation to apply.
    return:
      type: System.Numerics.Vector2[]
      description: The inversely transformed copy of the Vector2[].
    content.vb: Public Shared Operator *(array As Vector2(), transform As TransformMatrix2D) As Vector2()
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply*
  nameWithType.vb: TransformMatrix2D.*(Vector2(), TransformMatrix2D)
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.*(System.Numerics.Vector2(), ShapeEngine.Core.Structs.TransformMatrix2D)
  name.vb: '*(Vector2(), TransformMatrix2D)'
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.op_Equality(ShapeEngine.Core.Structs.TransformMatrix2D,ShapeEngine.Core.Structs.TransformMatrix2D)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.op_Equality(ShapeEngine.Core.Structs.TransformMatrix2D,ShapeEngine.Core.Structs.TransformMatrix2D)
  id: op_Equality(ShapeEngine.Core.Structs.TransformMatrix2D,ShapeEngine.Core.Structs.TransformMatrix2D)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: operator ==(TransformMatrix2D, TransformMatrix2D)
  nameWithType: TransformMatrix2D.operator ==(TransformMatrix2D, TransformMatrix2D)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.operator ==(ShapeEngine.Core.Structs.TransformMatrix2D, ShapeEngine.Core.Structs.TransformMatrix2D)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Equality
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 563
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the transforms are exactly equal.

    Note Due to floating-point precision errors, consider using

    <xref href="ShapeEngine.Core.Structs.TransformMatrix2D.IsEqualApprox(ShapeEngine.Core.Structs.TransformMatrix2D)" data-throw-if-not-resolved="false"></xref> instead, which is more reliable.
  example: []
  syntax:
    content: public static bool operator ==(TransformMatrix2D left, TransformMatrix2D right)
    parameters:
    - id: left
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The left transform.
    - id: right
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The right transform.
    return:
      type: System.Boolean
      description: Whether or not the transforms are exactly equal.
    content.vb: Public Shared Operator =(left As TransformMatrix2D, right As TransformMatrix2D) As Boolean
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.op_Equality*
  nameWithType.vb: TransformMatrix2D.=(TransformMatrix2D, TransformMatrix2D)
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.=(ShapeEngine.Core.Structs.TransformMatrix2D, ShapeEngine.Core.Structs.TransformMatrix2D)
  name.vb: =(TransformMatrix2D, TransformMatrix2D)
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.op_Inequality(ShapeEngine.Core.Structs.TransformMatrix2D,ShapeEngine.Core.Structs.TransformMatrix2D)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.op_Inequality(ShapeEngine.Core.Structs.TransformMatrix2D,ShapeEngine.Core.Structs.TransformMatrix2D)
  id: op_Inequality(ShapeEngine.Core.Structs.TransformMatrix2D,ShapeEngine.Core.Structs.TransformMatrix2D)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: operator !=(TransformMatrix2D, TransformMatrix2D)
  nameWithType: TransformMatrix2D.operator !=(TransformMatrix2D, TransformMatrix2D)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.operator !=(ShapeEngine.Core.Structs.TransformMatrix2D, ShapeEngine.Core.Structs.TransformMatrix2D)
  type: Operator
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: op_Inequality
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 576
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the transforms are not equal.

    Note Due to floating-point precision errors, consider using

    <xref href="ShapeEngine.Core.Structs.TransformMatrix2D.IsEqualApprox(ShapeEngine.Core.Structs.TransformMatrix2D)" data-throw-if-not-resolved="false"></xref> instead, which is more reliable.
  example: []
  syntax:
    content: public static bool operator !=(TransformMatrix2D left, TransformMatrix2D right)
    parameters:
    - id: left
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The left transform.
    - id: right
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The right transform.
    return:
      type: System.Boolean
      description: Whether or not the transforms are not equal.
    content.vb: Public Shared Operator <>(left As TransformMatrix2D, right As TransformMatrix2D) As Boolean
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.op_Inequality*
  nameWithType.vb: TransformMatrix2D.<>(TransformMatrix2D, TransformMatrix2D)
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.<>(ShapeEngine.Core.Structs.TransformMatrix2D, ShapeEngine.Core.Structs.TransformMatrix2D)
  name.vb: <>(TransformMatrix2D, TransformMatrix2D)
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Equals(System.Object)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.Equals(System.Object)
  id: Equals(System.Object)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: TransformMatrix2D.Equals(object?)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Equals(object?)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Equals
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 589
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the transform is exactly equal

    to the given object (<code class="paramref">obj</code>).

    Note Due to floating-point precision errors, consider using

    <xref href="ShapeEngine.Core.Structs.TransformMatrix2D.IsEqualApprox(ShapeEngine.Core.Structs.TransformMatrix2D)" data-throw-if-not-resolved="false"></xref> instead, which is more reliable.
  example: []
  syntax:
    content: public override readonly bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with.
    return:
      type: System.Boolean
      description: Whether or not the transform and the object are exactly equal.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.Equals*
  nameWithType.vb: TransformMatrix2D.Equals(Object)
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.Equals(Object)
  name.vb: Equals(Object)
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Equals(ShapeEngine.Core.Structs.TransformMatrix2D)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.Equals(ShapeEngine.Core.Structs.TransformMatrix2D)
  id: Equals(ShapeEngine.Core.Structs.TransformMatrix2D)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: Equals(TransformMatrix2D)
  nameWithType: TransformMatrix2D.Equals(TransformMatrix2D)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Equals(ShapeEngine.Core.Structs.TransformMatrix2D)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: Equals
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 601
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the transforms are exactly equal.

    Note Due to floating-point precision errors, consider using

    <xref href="ShapeEngine.Core.Structs.TransformMatrix2D.IsEqualApprox(ShapeEngine.Core.Structs.TransformMatrix2D)" data-throw-if-not-resolved="false"></xref> instead, which is more reliable.
  example: []
  syntax:
    content: public readonly bool Equals(TransformMatrix2D other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The other transform to compare.
    return:
      type: System.Boolean
      description: Whether or not the matrices are exactly equal.
    content.vb: Public Function Equals(other As TransformMatrix2D) As Boolean
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.Equals*
  implements:
  - System.IEquatable{ShapeEngine.Core.Structs.TransformMatrix2D}.Equals(ShapeEngine.Core.Structs.TransformMatrix2D)
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.IsEqualApprox(ShapeEngine.Core.Structs.TransformMatrix2D)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.IsEqualApprox(ShapeEngine.Core.Structs.TransformMatrix2D)
  id: IsEqualApprox(ShapeEngine.Core.Structs.TransformMatrix2D)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: IsEqualApprox(TransformMatrix2D)
  nameWithType: TransformMatrix2D.IsEqualApprox(TransformMatrix2D)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.IsEqualApprox(ShapeEngine.Core.Structs.TransformMatrix2D)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: IsEqualApprox
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 612
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: >-
    Returns <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if this transform and <code class="paramref">other</code> are approximately equal,

    by running Vector2.IsEqualApprox(Vector2) on each component.
  example: []
  syntax:
    content: public readonly bool IsEqualApprox(TransformMatrix2D other)
    parameters:
    - id: other
      type: ShapeEngine.Core.Structs.TransformMatrix2D
      description: The other transform to compare.
    return:
      type: System.Boolean
      description: Whether or not the matrices are approximately equal.
    content.vb: Public Function IsEqualApprox(other As TransformMatrix2D) As Boolean
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.IsEqualApprox*
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.GetHashCode
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.GetHashCode
  id: GetHashCode
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: TransformMatrix2D.GetHashCode()
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.GetHashCode()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: GetHashCode
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 621
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Serves as the hash function for <xref href="ShapeEngine.Core.Structs.TransformMatrix2D" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override readonly int GetHashCode()
    return:
      type: System.Int32
      description: A hash code for this transform.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.GetHashCode*
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.ToString
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.ToString
  id: ToString
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TransformMatrix2D.ToString()
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.ToString()
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: ToString
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 627
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Converts this <xref href="ShapeEngine.Core.Structs.TransformMatrix2D" data-throw-if-not-resolved="false"></xref> to a string.
  example: []
  syntax:
    content: public override readonly string ToString()
    return:
      type: System.String
      description: A string representation of this transform.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.ToString*
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.ToString(System.String)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.ToString(System.String)
  id: ToString(System.String)
  parent: ShapeEngine.Core.Structs.TransformMatrix2D
  langs:
  - csharp
  - vb
  name: ToString(string?)
  nameWithType: TransformMatrix2D.ToString(string?)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.ToString(string?)
  type: Method
  source:
    remote:
      path: ShapeEngine/Core/Structs/TransformMatrix2D.cs
      branch: main
      repo: git@github.com:SteveSuv/ShapeEngine.git
    id: ToString
    path: ../ShapeEngine/ShapeEngine/Core/Structs/TransformMatrix2D.cs
    startLine: 633
  assemblies:
  - ShapeEngine
  namespace: ShapeEngine.Core.Structs
  summary: Converts this <xref href="ShapeEngine.Core.Structs.TransformMatrix2D" data-throw-if-not-resolved="false"></xref> to a string with the given <code class="paramref">format</code>.
  example: []
  syntax:
    content: public readonly string ToString(string? format)
    parameters:
    - id: format
      type: System.String
    return:
      type: System.String
      description: A string representation of this transform.
    content.vb: Public Function ToString(format As String) As String
  overload: ShapeEngine.Core.Structs.TransformMatrix2D.ToString*
  nameWithType.vb: TransformMatrix2D.ToString(String)
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.ToString(String)
  name.vb: ToString(String)
references:
- uid: ShapeEngine.Core.Structs
  commentId: N:ShapeEngine.Core.Structs
  href: ShapeEngine.html
  name: ShapeEngine.Core.Structs
  nameWithType: ShapeEngine.Core.Structs
  fullName: ShapeEngine.Core.Structs
  spec.csharp:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Structs
    name: Structs
    href: ShapeEngine.Core.Structs.html
  spec.vb:
  - uid: ShapeEngine
    name: ShapeEngine
    href: ShapeEngine.html
  - name: .
  - uid: ShapeEngine.Core
    name: Core
    href: ShapeEngine.Core.html
  - name: .
  - uid: ShapeEngine.Core.Structs
    name: Structs
    href: ShapeEngine.Core.Structs.html
- uid: System.IEquatable{ShapeEngine.Core.Structs.TransformMatrix2D}
  commentId: T:System.IEquatable{ShapeEngine.Core.Structs.TransformMatrix2D}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<TransformMatrix2D>
  nameWithType: IEquatable<TransformMatrix2D>
  fullName: System.IEquatable<ShapeEngine.Core.Structs.TransformMatrix2D>
  nameWithType.vb: IEquatable(Of TransformMatrix2D)
  fullName.vb: System.IEquatable(Of ShapeEngine.Core.Structs.TransformMatrix2D)
  name.vb: IEquatable(Of TransformMatrix2D)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: ShapeEngine.Core.Structs.TransformMatrix2D
    name: TransformMatrix2D
    href: ShapeEngine.Core.Structs.TransformMatrix2D.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: ShapeEngine.Core.Structs.TransformMatrix2D
    name: TransformMatrix2D
    href: ShapeEngine.Core.Structs.TransformMatrix2D.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Numerics.Vector2
  commentId: T:System.Numerics.Vector2
  parent: System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  name: Vector2
  nameWithType: Vector2
  fullName: System.Numerics.Vector2
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Rotation*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.Rotation
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_Rotation
  name: Rotation
  nameWithType: TransformMatrix2D.Rotation
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Rotation
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Scale*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.Scale
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_Scale
  name: Scale
  nameWithType: TransformMatrix2D.Scale
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Scale
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Skew*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.Skew
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_Skew
  name: Skew
  nameWithType: TransformMatrix2D.Skew
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Skew
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Origin
  commentId: F:ShapeEngine.Core.Structs.TransformMatrix2D.Origin
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_Origin
  name: Origin
  nameWithType: TransformMatrix2D.Origin
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Origin
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Item*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.Item
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_Item_System_Int32_
  name: this
  nameWithType: TransformMatrix2D.this
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.this
  nameWithType.vb: TransformMatrix2D.this[]
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.this[]
  name.vb: this[]
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Inverse
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.Inverse
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_Inverse
  name: Inverse()
  nameWithType: TransformMatrix2D.Inverse()
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Inverse()
  spec.csharp:
  - uid: ShapeEngine.Core.Structs.TransformMatrix2D.Inverse
    name: Inverse
    href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_Inverse
  - name: (
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Structs.TransformMatrix2D.Inverse
    name: Inverse
    href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_Inverse
  - name: (
  - name: )
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.AffineInverse*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.AffineInverse
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_AffineInverse
  name: AffineInverse
  nameWithType: TransformMatrix2D.AffineInverse
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.AffineInverse
- uid: ShapeEngine.Core.Structs.TransformMatrix2D
  commentId: T:ShapeEngine.Core.Structs.TransformMatrix2D
  parent: ShapeEngine.Core.Structs
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html
  name: TransformMatrix2D
  nameWithType: TransformMatrix2D
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXformInv(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.BasisXformInv(System.Numerics.Vector2)
  isExternal: true
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_BasisXformInv_System_Numerics_Vector2_
  name: BasisXformInv(Vector2)
  nameWithType: TransformMatrix2D.BasisXformInv(Vector2)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXformInv(System.Numerics.Vector2)
  spec.csharp:
  - uid: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXformInv(System.Numerics.Vector2)
    name: BasisXformInv
    href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_BasisXformInv_System_Numerics_Vector2_
  - name: (
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXformInv(System.Numerics.Vector2)
    name: BasisXformInv
    href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_BasisXformInv_System_Numerics_Vector2_
  - name: (
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: )
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXform*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.BasisXform
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_BasisXform_System_Numerics_Vector2_
  name: BasisXform
  nameWithType: TransformMatrix2D.BasisXform
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXform
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXform(System.Numerics.Vector2)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.BasisXform(System.Numerics.Vector2)
  isExternal: true
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_BasisXform_System_Numerics_Vector2_
  name: BasisXform(Vector2)
  nameWithType: TransformMatrix2D.BasisXform(Vector2)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXform(System.Numerics.Vector2)
  spec.csharp:
  - uid: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXform(System.Numerics.Vector2)
    name: BasisXform
    href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_BasisXform_System_Numerics_Vector2_
  - name: (
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXform(System.Numerics.Vector2)
    name: BasisXform
    href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_BasisXform_System_Numerics_Vector2_
  - name: (
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: )
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.AffineInverse
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.AffineInverse
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_AffineInverse
  name: AffineInverse()
  nameWithType: TransformMatrix2D.AffineInverse()
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.AffineInverse()
  spec.csharp:
  - uid: ShapeEngine.Core.Structs.TransformMatrix2D.AffineInverse
    name: AffineInverse
    href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_AffineInverse
  - name: (
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Structs.TransformMatrix2D.AffineInverse
    name: AffineInverse
    href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_AffineInverse
  - name: (
  - name: )
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXformInv*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.BasisXformInv
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_BasisXformInv_System_Numerics_Vector2_
  name: BasisXformInv
  nameWithType: TransformMatrix2D.BasisXformInv
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.BasisXformInv
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.InterpolateWith*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.InterpolateWith
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_InterpolateWith_ShapeEngine_Core_Structs_TransformMatrix2D_System_Single_
  name: InterpolateWith
  nameWithType: TransformMatrix2D.InterpolateWith
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.InterpolateWith
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Inverse*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.Inverse
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_Inverse
  name: Inverse
  nameWithType: TransformMatrix2D.Inverse
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Inverse
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.IsFinite*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.IsFinite
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_IsFinite
  name: IsFinite
  nameWithType: TransformMatrix2D.IsFinite
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.IsFinite
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Orthonormalized*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.Orthonormalized
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_Orthonormalized
  name: Orthonormalized
  nameWithType: TransformMatrix2D.Orthonormalized
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Orthonormalized
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Rotated*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.Rotated
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_Rotated_System_Single_
  name: Rotated
  nameWithType: TransformMatrix2D.Rotated
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Rotated
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.RotatedLocal*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.RotatedLocal
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_RotatedLocal_System_Single_
  name: RotatedLocal
  nameWithType: TransformMatrix2D.RotatedLocal
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.RotatedLocal
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Scaled*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.Scaled
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_Scaled_System_Numerics_Vector2_
  name: Scaled
  nameWithType: TransformMatrix2D.Scaled
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Scaled
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.ScaledLocal*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.ScaledLocal
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_ScaledLocal_System_Numerics_Vector2_
  name: ScaledLocal
  nameWithType: TransformMatrix2D.ScaledLocal
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.ScaledLocal
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Translated*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.Translated
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_Translated_System_Numerics_Vector2_
  name: Translated
  nameWithType: TransformMatrix2D.Translated
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Translated
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.TranslatedLocal*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.TranslatedLocal
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_TranslatedLocal_System_Numerics_Vector2_
  name: TranslatedLocal
  nameWithType: TransformMatrix2D.TranslatedLocal
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.TranslatedLocal
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Identity*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.Identity
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_Identity
  name: Identity
  nameWithType: TransformMatrix2D.Identity
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Identity
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.FlipX*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.FlipX
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_FlipX
  name: FlipX
  nameWithType: TransformMatrix2D.FlipX
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.FlipX
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.FlipY*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.FlipY
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_FlipY
  name: FlipY
  nameWithType: TransformMatrix2D.FlipY
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.FlipY
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.#ctor*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.#ctor
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D__ctor_System_Numerics_Vector2_System_Numerics_Vector2_System_Numerics_Vector2_
  name: TransformMatrix2D
  nameWithType: TransformMatrix2D.TransformMatrix2D
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.TransformMatrix2D
  nameWithType.vb: TransformMatrix2D.New
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.New
  name.vb: New
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_op_Multiply_ShapeEngine_Core_Structs_TransformMatrix2D_ShapeEngine_Core_Structs_TransformMatrix2D_
  name: operator *
  nameWithType: TransformMatrix2D.operator *
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.operator *
  nameWithType.vb: TransformMatrix2D.*
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ShapeEngine.Core.Structs.TransformMatrix2D.op_Multiply*
    name: '*'
    href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_op_Multiply_ShapeEngine_Core_Structs_TransformMatrix2D_ShapeEngine_Core_Structs_TransformMatrix2D_
- uid: System.Numerics.Vector2[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: System.Numerics.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: System.Numerics.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Numerics.Vector2
    name: Vector2
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.numerics.vector2
  - name: (
  - name: )
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.IsEqualApprox(ShapeEngine.Core.Structs.TransformMatrix2D)
  commentId: M:ShapeEngine.Core.Structs.TransformMatrix2D.IsEqualApprox(ShapeEngine.Core.Structs.TransformMatrix2D)
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_IsEqualApprox_ShapeEngine_Core_Structs_TransformMatrix2D_
  name: IsEqualApprox(TransformMatrix2D)
  nameWithType: TransformMatrix2D.IsEqualApprox(TransformMatrix2D)
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.IsEqualApprox(ShapeEngine.Core.Structs.TransformMatrix2D)
  spec.csharp:
  - uid: ShapeEngine.Core.Structs.TransformMatrix2D.IsEqualApprox(ShapeEngine.Core.Structs.TransformMatrix2D)
    name: IsEqualApprox
    href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_IsEqualApprox_ShapeEngine_Core_Structs_TransformMatrix2D_
  - name: (
  - uid: ShapeEngine.Core.Structs.TransformMatrix2D
    name: TransformMatrix2D
    href: ShapeEngine.Core.Structs.TransformMatrix2D.html
  - name: )
  spec.vb:
  - uid: ShapeEngine.Core.Structs.TransformMatrix2D.IsEqualApprox(ShapeEngine.Core.Structs.TransformMatrix2D)
    name: IsEqualApprox
    href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_IsEqualApprox_ShapeEngine_Core_Structs_TransformMatrix2D_
  - name: (
  - uid: ShapeEngine.Core.Structs.TransformMatrix2D
    name: TransformMatrix2D
    href: ShapeEngine.Core.Structs.TransformMatrix2D.html
  - name: )
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.op_Equality*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.op_Equality
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_op_Equality_ShapeEngine_Core_Structs_TransformMatrix2D_ShapeEngine_Core_Structs_TransformMatrix2D_
  name: operator ==
  nameWithType: TransformMatrix2D.operator ==
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.operator ==
  nameWithType.vb: TransformMatrix2D.=
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ShapeEngine.Core.Structs.TransformMatrix2D.op_Equality*
    name: ==
    href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_op_Equality_ShapeEngine_Core_Structs_TransformMatrix2D_ShapeEngine_Core_Structs_TransformMatrix2D_
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.op_Inequality*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.op_Inequality
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_op_Inequality_ShapeEngine_Core_Structs_TransformMatrix2D_ShapeEngine_Core_Structs_TransformMatrix2D_
  name: operator !=
  nameWithType: TransformMatrix2D.operator !=
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.operator !=
  nameWithType.vb: TransformMatrix2D.<>
  fullName.vb: ShapeEngine.Core.Structs.TransformMatrix2D.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: ShapeEngine.Core.Structs.TransformMatrix2D.op_Inequality*
    name: '!='
    href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_op_Inequality_ShapeEngine_Core_Structs_TransformMatrix2D_ShapeEngine_Core_Structs_TransformMatrix2D_
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.Equals*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.Equals
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_Equals_System_Object_
  name: Equals
  nameWithType: TransformMatrix2D.Equals
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.Equals
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IEquatable{ShapeEngine.Core.Structs.TransformMatrix2D}.Equals(ShapeEngine.Core.Structs.TransformMatrix2D)
  commentId: M:System.IEquatable{ShapeEngine.Core.Structs.TransformMatrix2D}.Equals(ShapeEngine.Core.Structs.TransformMatrix2D)
  parent: System.IEquatable{ShapeEngine.Core.Structs.TransformMatrix2D}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(TransformMatrix2D)
  nameWithType: IEquatable<TransformMatrix2D>.Equals(TransformMatrix2D)
  fullName: System.IEquatable<ShapeEngine.Core.Structs.TransformMatrix2D>.Equals(ShapeEngine.Core.Structs.TransformMatrix2D)
  nameWithType.vb: IEquatable(Of TransformMatrix2D).Equals(TransformMatrix2D)
  fullName.vb: System.IEquatable(Of ShapeEngine.Core.Structs.TransformMatrix2D).Equals(ShapeEngine.Core.Structs.TransformMatrix2D)
  spec.csharp:
  - uid: System.IEquatable{ShapeEngine.Core.Structs.TransformMatrix2D}.Equals(ShapeEngine.Core.Structs.TransformMatrix2D)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: ShapeEngine.Core.Structs.TransformMatrix2D
    name: TransformMatrix2D
    href: ShapeEngine.Core.Structs.TransformMatrix2D.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{ShapeEngine.Core.Structs.TransformMatrix2D}.Equals(ShapeEngine.Core.Structs.TransformMatrix2D)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: ShapeEngine.Core.Structs.TransformMatrix2D
    name: TransformMatrix2D
    href: ShapeEngine.Core.Structs.TransformMatrix2D.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.IsEqualApprox*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.IsEqualApprox
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_IsEqualApprox_ShapeEngine_Core_Structs_TransformMatrix2D_
  name: IsEqualApprox
  nameWithType: TransformMatrix2D.IsEqualApprox
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.IsEqualApprox
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.GetHashCode*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.GetHashCode
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_GetHashCode
  name: GetHashCode
  nameWithType: TransformMatrix2D.GetHashCode
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.GetHashCode
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: ShapeEngine.Core.Structs.TransformMatrix2D.ToString*
  commentId: Overload:ShapeEngine.Core.Structs.TransformMatrix2D.ToString
  href: ShapeEngine.Core.Structs.TransformMatrix2D.html#ShapeEngine_Core_Structs_TransformMatrix2D_ToString
  name: ToString
  nameWithType: TransformMatrix2D.ToString
  fullName: ShapeEngine.Core.Structs.TransformMatrix2D.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
